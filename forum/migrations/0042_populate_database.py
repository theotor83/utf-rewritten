# Generated by Django 5.1.6 on 2025-03-16 10:08

from django.db import migrations
from django.utils import timezone
from dotenv import load_dotenv
import os

load_dotenv()

def create_user_and_profile(apps, schema_editor):
    # Get historical models
    User = apps.get_model('auth', 'User')
    Profile = apps.get_model('forum', 'Profile')
    Forum = apps.get_model('forum', 'Forum')
    ForumGroup = apps.get_model('forum', 'ForumGroup')
    Topic = apps.get_model('forum', 'Topic')
    Category = apps.get_model('forum', 'Category')
    Post = apps.get_model('forum', 'Post')
    TopicReadStatus = apps.get_model('forum', 'TopicReadStatus')

    if ForumGroup.objects.filter(name="You're blue now !").exists():
        return  # If the group already exists, we don't need to run this migration again

    env_password = os.getenv('ADMIN_PASSWORD', 'password_not_found')  # Default password if not set in .env
    if env_password == 'password_not_found':
        raise ValueError("ADMIN_PASSWORD not found in .env file. Please set it.")
    
    admin_username = os.getenv('ADMIN_USERNAME', 'admin')  # Default username if not set in .env
    if admin_username == 'admin':
        print("Using default admin username 'admin'. If this is not intended, please set ADMIN_USERNAME in .env file.")

    # Create the Forum "UTF" (required by Profile's save() method)
    if Forum.objects.filter(name='UTF').exists():
        UTF = Forum.objects.get(name='UTF')
    else:
        UTF = Forum.objects.create(name='UTF')
    
    UTF.save()

    # Create all the ForumGroups
    if ForumGroup.objects.filter(name="Outsider").exists():
        outsider_group = ForumGroup.objects.get(name="Outsider")
    else:
        outsider_group = ForumGroup.objects.create(name="Outsider", priority=10, description="""Membres ne s'étant pas encore présentés.
Nombre de messages : 0.""", is_messages_group=True, minimum_messages=0, color="#847B7E")
        
    outsider_group.save()
    
    if ForumGroup.objects.filter(name="Fallen Child").exists():
        fallen_child_group = ForumGroup.objects.get(name="Fallen Child")
    else:
        fallen_child_group = ForumGroup.objects.create(name="Fallen Child", priority=20, description="""Nouveaux sur le forum.
Nombre de messages : de 1 à 49.""", is_messages_group=True, minimum_messages=1, color="#FFFFFF")
        
    fallen_child_group.save()

    if ForumGroup.objects.filter(name="You're blue now !").exists():
        blue_group = ForumGroup.objects.get(name="You're blue now !")
    else:
        blue_group = ForumGroup.objects.create(name="You're blue now !", priority=30, description="""That's my attack !
Nombre de messages : de 50 à 199.""", is_messages_group=True, minimum_messages=50, color="#859BFD")
        
    blue_group.save()
        
    if ForumGroup.objects.filter(name="Made of Fire").exists():
        fire_group = ForumGroup.objects.get(name="Made of Fire")
    else:
        fire_group = ForumGroup.objects.create(name="Made of Fire", priority=40, description="""Membres confirmés.
Nombre de messages : de 200 à 999.""", is_messages_group=True, minimum_messages=200, color="#EA8C14")
        
    if ForumGroup.objects.filter(name="Real Spider").exists():
        spider_group = ForumGroup.objects.get(name="Real Spider")
    else:
        spider_group = ForumGroup.objects.create(name="Real Spider", priority=50, description="""[color=#993399]I heard they like posting~[/color]

Membres assidus.
Nombre de messages : de 1000 à 2999.""", is_messages_group=True, minimum_messages=1000, color="#8F1C93")
        
    if ForumGroup.objects.filter(name="It's showtime !").exists():
        showtime_group = ForumGroup.objects.get(name="It's showtime !")
    else:
        showtime_group = ForumGroup.objects.create(name="It's showtime !", priority=60, description="""Membres d'honneur.
Nombre de messages : de 2000 à 4999.""", is_messages_group=True, minimum_messages=2000, color="#F4D400")
        
    if ForumGroup.objects.filter(name="Hopeful Dreamer").exists():
        dreamer_group = ForumGroup.objects.get(name="Hopeful Dreamer")
    else:
        dreamer_group = ForumGroup.objects.create(name="Hopeful Dreamer", priority=70, description="""Membre, euh... TRÈS déterminé ?
Nombre de messages : 5000 ou plus.""", is_messages_group=True, minimum_messages=5000, color="#FF00CC")
        
    if ForumGroup.objects.filter(name="Royal Guard Apprentice").exists():
        apprentice_group = ForumGroup.objects.get(name="Royal Guard Apprentice")
    else:
        apprentice_group = ForumGroup.objects.create(name="Royal Guard Apprentice", priority=80, description="""Modérateurs ChatBox.""", is_messages_group=False, minimum_messages=999999, color="#2D3EDF")

    if ForumGroup.objects.filter(name="Royal Guard").exists():
       guard_group = ForumGroup.objects.get(name="Royal Guard")
    else:
       guard_group = ForumGroup.objects.create(name="Royal Guard", priority=90, description="""Make her a member of the Royal Guard ♫

Modérateurs Forum.""", is_messages_group=False, is_staff_group=True, minimum_messages=999999, color="#289331")
       
    if ForumGroup.objects.filter(name="Determination").exists():
       determination_group = ForumGroup.objects.get(name="Determination")
    else:
       determination_group = ForumGroup.objects.create(name="Determination", priority=100, description="""Administrateurs.""", is_messages_group=False, is_staff_group=True, minimum_messages=999999, color="#C02200")

    # Create the User with a hashed password
    admin = User.objects.create_user(
        username='Yebeka',
        password=env_password,  # Loaded from .env file
        email='admin@fake.com',
        is_staff=True,
        is_superuser=True,
    )

    # Create the Profile linked to the User
    Profile.objects.create(
        user=admin,
        birthdate=timezone.now().replace(year=2000, month=1, day=1),  # Fake dates
        gender='male',
        type='neutral',
    )

    # Add admin to every group
    admin.profile.groups.add(outsider_group, fallen_child_group, blue_group, fire_group, spider_group, showtime_group, dreamer_group, apprentice_group, guard_group, determination_group)
    admin.save()
    admin.profile.save()

    # Create the default categories
    if Category.objects.filter(name="RUINS").exists():
        ruins_category = Category.objects.get(name="RUINS")
    else:
        ruins_category = Category.objects.create(name="RUINS", slug="ruins")

    if Category.objects.filter(name="Snowdin").exists():
        snowdin_category = Category.objects.get(name="Snowdin")
    else:
        snowdin_category = Category.objects.create(name="Snowdin", slug="snowdin")

    if Category.objects.filter(name="Waterfall").exists():
        waterfall_category = Category.objects.get(name="Waterfall")
    else:
        waterfall_category = Category.objects.create(name="Waterfall", slug="waterfall")

    if Category.objects.filter(name="Hotland").exists():
        hotland_category = Category.objects.get(name="Hotland")
    else:
        hotland_category = Category.objects.create(name="Hotland", slug="hotland")

    if Category.objects.filter(name="Surface").exists():
        surface_category = Category.objects.get(name="Surface")
    else:
        surface_category = Category.objects.create(name="Surface", slug="surface")

    if Category.objects.filter(name="room_mysteryman").exists():
        mysteryman_category = Category.objects.get(name="room_mysteryman")
    else:
        mysteryman_category = Category.objects.create(name="room_mysteryman", slug="room_mysteryman", is_hidden=True)

    # Create the default subforums

    #RUINS
    if Topic.objects.filter(title="Règles du forum et Annonces").exists():
        rules_subforum = Topic.objects.get(title="Règles du forum et Annonces")
    else:
        rules_subforum = Topic.objects.create(author=admin,
                                           title="Règles du forum et Annonces",
                                           description="Les règles sont à lire avant de poster. Vous trouverez également les annonces du staff du forum.",
                                           slug="regles-du-forum-et-annonces",
                                           category=ruins_category,
                                           is_sub_forum=True,
                                           is_locked=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Présentations").exists():
        presentations_topic = Topic.objects.get(title="Présentations")
    else:
        presentations_topic = Topic.objects.create(author=admin,
                                           title="Présentations",
                                           description="Se présenter est obligatoire pour pouvoir accéder au reste du forum.",
                                           slug="presentations",
                                           category=ruins_category,
                                           is_sub_forum=True,
                                            is_index_topic=True)
        
    #Snowdin
    if Topic.objects.filter(title="Aide et idées").exists():
        help_topic = Topic.objects.get(title="Aide et idées")
    else:
        help_topic = Topic.objects.create(author=admin,
                                           title="Aide et idées",
                                           description="Besoin d'aide ou conseils pour un passage du jeu ? Des choses à proposer pour tester en jeu ? C'est ici.",
                                           slug="aide-et-idees",
                                           category=snowdin_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Tuto / Astuces").exists():
        tutorial_topic = Topic.objects.get(title="Tuto / Astuces")
    else:
        tutorial_topic = Topic.objects.create(author=admin,
                                           title="Tuto / Astuces",
                                           description="Si vous avez trouvé une astuce (permettant, par exemple, de faciliter une étape du jeu), vous pouvez partager ici.",
                                           slug="tuto-astuces",
                                           category=snowdin_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    #Waterfall
    if Topic.objects.filter(title="Easter eggs").exists():
        easter_eggs_topic = Topic.objects.get(title="Easter eggs")
    else:
        easter_eggs_topic = Topic.objects.create(author=admin,
                                           title="Easter eggs",
                                           description="Vous avez trouvé un easter egg, un secret (avec la fun value par exemple) ? Venez partager !",
                                           slug="easter-eggs",
                                           category=waterfall_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Espace technique").exists():
        espace_technique_topic = Topic.objects.get(title="Espace technique")
    else:
        espace_technique_topic = Topic.objects.create(author=admin,
                                           title="Espace technique",
                                           description="Tout ce qui concerne les fichiers du jeu, les mods, fichiers, etc.",
                                           slug="espace-technique",
                                           category=waterfall_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    #Hotland
    if Topic.objects.filter(title="Discussions générales").exists():
        discussions_generales_topic = Topic.objects.get(title="Discussions générales")
    else:
        discussions_generales_topic = Topic.objects.create(author=admin,
                                           title="Discussions générales",
                                           description="Parlez d'à peu près n'importe quoi en rapport avec les jeux.",
                                           slug="discussions-generales",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Théories").exists():
        theories_topic = Topic.objects.get(title="Théories")
    else:
        theories_topic = Topic.objects.create(author=admin,
                                           title="Théories",
                                           description="Venez exposer des théories sur Undertale. Vérifiez que la théorie n'a pas déjà été postée. (Attention: Spoilers)",
                                           slug="theories",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Fangames / Unitale").exists():
        fangames_topic = Topic.objects.get(title="Fangames / Unitale")
    else:
        fangames_topic = Topic.objects.create(author=admin,
                                           title="Fangames / Unitale",
                                           description="Venez parler de fangames en rapport avec Undertale, ou d'Unitale et ses scripts.",
                                           slug="fangames-unitale",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Médias").exists():
        medias_topic = Topic.objects.get(title="Médias")
    else:
        medias_topic = Topic.objects.create(author=admin,
                                           title="Médias",
                                           description="Undertale et son OST, ses fan-vidéos, images, YTPMV, shitposts, etc.",
                                           slug="medias",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Création").exists():
        creation_topic = Topic.objects.get(title="Création")
    else:
        creation_topic = Topic.objects.create(author=admin,
                                           title="Création",
                                           description="Pour tout ce que vous avez créé à propos d'Undertale.",
                                           slug="creation",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    #Surface
    if Topic.objects.filter(title="Section libre").exists():
        section_libre_topic = Topic.objects.get(title="Section libre")
    else:
        section_libre_topic = Topic.objects.create(author=admin,
                                           title="Section libre",
                                           description="Parlez de (presque) tout ce que vous voulez ici (en dehors d'Undertale).",
                                           slug="section-libre",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Jeux").exists():
        jeux_topic = Topic.objects.get(title="Jeux")
    else:
        jeux_topic = Topic.objects.create(author=admin,
                                           title="Jeux",
                                           description="Venez proposer vos jeux ou roleplays ici.",
                                           slug="jeux",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Membres").exists():
        membres_topic = Topic.objects.get(title="Membres")
    else:
        membres_topic = Topic.objects.create(author=admin,
                                           title="Membres",
                                           description="Tout ce qui est en rapport avec les membres de ce forum.",
                                           slug="membres",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    if Topic.objects.filter(title="Sondages").exists():
        sondages_topic = Topic.objects.get(title="Sondages")
    else:
        sondages_topic = Topic.objects.create(author=admin,
                                           title="Sondages",
                                           description="Faites des sondages ! Pour les sondages sur Undertale allez plutôt dans la section discussions.",
                                           slug="sondages",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)

    if Topic.objects.filter(title="Pubs").exists():
        pubs_topic = Topic.objects.get(title="Pubs")
    else:
        pubs_topic = Topic.objects.create(author=admin,
                                           title="Pubs",
                                           description="Venez présenter votre chaîne, site, etc... ici et nulle part ailleurs.",
                                           slug="pubs",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True)
        
    # Create the default nested subforums (only RolePlay)
    if Topic.objects.filter(title="RolePlay").exists():
        roleplay_topic = Topic.objects.get(title="RolePlay")
    else:
        roleplay_topic = Topic.objects.create(author=admin,
                                           title="RolePlay",
                                           description="Pour vos jeux de rôle.",
                                           slug="roleplay",
                                           category=surface_category,
                                           parent=jeux_topic,
                                           is_sub_forum=True)
        
    # Create the default topics

    if Topic.objects.filter(title="[A LIRE AVANT DE POSTER] Règlement du forum.").exists():
        rules_topic = Topic.objects.get(title="[A LIRE AVANT DE POSTER] Règlement du forum.")
    else:
        rules_topic = Topic.objects.create(author=admin,
                                           title="[A LIRE AVANT DE POSTER] Règlement du forum.",
                                           slug="a-lire-avant-de-poster-reglement-du-forum",
                                           category=ruins_category,
                                           parent=rules_subforum,
                                           is_sub_forum=False,
                                           is_locked=True,
                                           is_pinned=False,
                                           is_announcement=True,
                                           is_index_topic=False,
                                           )
        
    if Topic.objects.filter(title="Guide des balises").exists():
        balises_topic = Topic.objects.get(title="Guide des balises")
    else:
        balises_topic = Topic.objects.create(author=admin,
                                           title="Guide des balises",
                                           slug="guide-des-balises",
                                           category=ruins_category,
                                           parent=rules_subforum,
                                           is_sub_forum=False,
                                           is_locked=True,
                                           is_pinned=True,
                                           is_announcement=False,
                                           is_index_topic=False,
                                           )
        
    # Create the default posts

    if Post.objects.filter(text="""Regle du forum undertale france:

1- On ne doit pas manquer le respect au autre membres du serveur.

2-  Ne pas floodé

3- ne pas faire de PUB 

4- et ne pas mentionner les modérateur sans raisons""",author=admin).exists():
        rules_post = Post.objects.get(text="""Regle du forum undertale france:

1- On ne doit pas manquer le respect au autre membres du serveur.

2-  Ne pas floodé

3- ne pas faire de PUB 

4- et ne pas mentionner les modérateur sans raisons""",author=admin)
    else:
        rules_post = Post.objects.create(author=admin,
                                           topic=rules_topic,
                                           text="""Regle du forum undertale france:

1- On ne doit pas manquer le respect au autre membres du serveur.

2-  Ne pas floodé

3- ne pas faire de PUB 

4- et ne pas mentionner les modérateur sans raisons""")
        
    if Post.objects.filter(text="""Un petit guide des balises que vous pouvez utiliser sur le forum: j'ai oublié""",author=admin).exists():
        balises_post = Post.objects.get(text="""Un petit guide des balises que vous pouvez utiliser sur le forum: j'ai oublié""",author=admin)
    else:
        balises_post = Post.objects.create(author=admin,
                                           topic=balises_topic,
                                           text="""Un petit guide des balises que vous pouvez utiliser sur le forum: j'ai oublié""")
        

        
    # Save everything just in case
    outsider_group.save()
    fallen_child_group.save()
    blue_group.save()
    fire_group.save()
    spider_group.save()
    showtime_group.save()
    dreamer_group.save()
    apprentice_group.save()
    guard_group.save()
    determination_group.save()
    ruins_category.save()
    snowdin_category.save()
    waterfall_category.save()
    hotland_category.save()
    surface_category.save()
    mysteryman_category.save()
    rules_subforum.save()
    presentations_topic.save()
    help_topic.save()
    tutorial_topic.save()
    easter_eggs_topic.save()
    espace_technique_topic.save()
    discussions_generales_topic.save()
    theories_topic.save()
    fangames_topic.save()
    medias_topic.save()
    creation_topic.save()
    section_libre_topic.save()
    jeux_topic.save()
    membres_topic.save()
    sondages_topic.save()
    pubs_topic.save()
    roleplay_topic.save()
    rules_topic.save()
    balises_topic.save()
    rules_post.save()
    balises_post.save()

    for topic in Topic.objects.all():
        topic.total_replies += 1
        if topic.is_index_topic:
            topic.category.index_topics.add(topic)
            topic.category.save()
        if topic.is_sub_forum == False:
            current = topic.parent
            while current != None:
                current.total_children += 1
                current.save()
                current = current.parent
            topic.total_replies -= 1
        topic.save()

    for post in Post.objects.all():
        current = post.topic
        while current != None:
            current.total_replies += 1
            current.save()
            current = current.parent

    admin.profile.messages_count += 2
    admin.profile.save()
    UTF.total_messages += 2
    UTF.total_users += 1
    UTF.save()


class Migration(migrations.Migration):

    dependencies = [
        ('forum', '0041_forum_online_record_forum_online_record_date'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RunPython(create_user_and_profile, migrations.RunPython.noop),
    ]
