# Generated by Django 5.1.6 on 2025-06-14 20:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('precise_bbcode', '0002_alter_bbcodetag_id_alter_smileytag_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchiveCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='DEFAULT_CATEGORY_NAME', max_length=60)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('is_hidden', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveForumGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('priority', models.IntegerField(unique=True)),
                ('description', models.TextField()),
                ('is_staff_group', models.BooleanField(default=False)),
                ('is_messages_group', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('minimum_messages', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('color', models.CharField(default='#FFFFFF', max_length=10)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='images/group_icons/')),
            ],
            options={
                'ordering': ['-priority'],
            },
        ),
        migrations.CreateModel(
            name='ArchivePoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('max_choices_per_user', models.IntegerField(default=1)),
                ('days_to_vote', models.IntegerField(default=-1)),
                ('can_change_vote', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArchivePollOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archive_options', to='archive.archivepoll')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ArchivePollOptionVoters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archivepolloption', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.archivepolloption')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('archivepolloption', 'user')},
            },
        ),
        migrations.AddField(
            model_name='archivepolloption',
            name='voters',
            field=models.ManyToManyField(blank=True, related_name='archive_poll_votes', through='archive.ArchivePollOptionVoters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ArchiveProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/profile_picture/')),
                ('messages_count', models.IntegerField(default=0)),
                ('desc', models.CharField(blank=True, max_length=20, null=True)),
                ('localisation', models.CharField(blank=True, max_length=255, null=True)),
                ('loisirs', models.CharField(blank=True, max_length=255, null=True)),
                ('birthdate', models.DateTimeField()),
                ('type', models.CharField(choices=[('pacifist', 'Pacifiste'), ('neutral', 'Neutre'), ('genocide', 'Génocidaire')], default='neutral', max_length=20)),
                ('favorite_games', models.CharField(blank=True, max_length=255, null=True)),
                ('zodiac_sign', models.CharField(blank=True, choices=[('capricorne', 'Capricorne (22déc-19jan)'), ('verseau', 'Verseau (20jan-19fev)'), ('poissons', 'Poissons(20fev-20mar)'), ('belier', 'Bélier (21mar-19avr)'), ('taureau', 'Taureau (20avr-20mai)'), ('gemeaux', 'Gémeaux (21mai-20juin)'), ('cancer', 'Cancer (21juin-23juil)'), ('lion', 'Lion (24juil-23aoû)'), ('vierge', 'Vierge (24aoû-22sep)'), ('balance', 'Balance (23sep-22oct)'), ('scorpion', 'Scorpion (23oct-21nov)'), ('sagittaire', 'Sagittaire (22nov-21déc)'), ('', 'Aucun')], max_length=20, null=True)),
                ('gender', models.CharField(choices=[('male', 'Masculin'), ('female', 'Féminin')], max_length=20)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('skype', models.CharField(blank=True, max_length=255, null=True)),
                ('signature', models.TextField(blank=True, max_length=65535, null=True)),
                ('email_is_public', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('upload_size', models.BigIntegerField(default=0, help_text='Total upload size in bytes. Used for image upload limits.')),
                ('groups', models.ManyToManyField(related_name='archive_users', to='archive.archiveforumgroup')),
                ('user', models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveSmileyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('smileys', models.ManyToManyField(blank=True, related_name='archive_categories', to='precise_bbcode.smileytag')),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=60, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('icon', models.CharField(blank=True, max_length=60, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('last_message_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('total_children', models.IntegerField(default=0)),
                ('total_replies', models.IntegerField(default=-1)),
                ('total_views', models.IntegerField(default=0)),
                ('is_sub_forum', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_announcement', models.BooleanField(default=False)),
                ('is_index_topic', models.BooleanField(default=False)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archive_topics', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='archive.archivecategory')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archive_children', to='archive.archivetopic')),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveSubforum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('parent', models.ManyToManyField(blank=True, related_name='archive_subforums', to='archive.archivetopic')),
            ],
        ),
        migrations.CreateModel(
            name='ArchivePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='DEFAULT POST TEXT', max_length=65535)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('update_count', models.IntegerField(default=0, null=True)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archive_posts', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archive_replies', to='archive.archivetopic')),
            ],
        ),
        migrations.AddField(
            model_name='archivepoll',
            name='topic',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='archive_poll', to='archive.archivetopic'),
        ),
        migrations.CreateModel(
            name='ArchiveForum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('total_users', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('online_record', models.IntegerField(default=0)),
                ('online_record_date', models.DateTimeField(auto_now_add=True)),
                ('announcement_topics', models.ManyToManyField(blank=True, related_name='archive_announcement_topics', to='archive.archivetopic')),
            ],
        ),
        migrations.AddField(
            model_name='archivecategory',
            name='index_topics',
            field=models.ManyToManyField(blank=True, related_name='archive_index_topics', to='archive.archivetopic'),
        ),
        migrations.AlterUniqueTogether(
            name='archivepolloption',
            unique_together={('poll', 'text')},
        ),
        migrations.CreateModel(
            name='ArchiveTopicReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_read', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.archivetopic')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'topic')},
            },
        ),
    ]
