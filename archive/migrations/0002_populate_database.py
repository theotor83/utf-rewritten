# Generated by Django 5.1.6 on 2025-03-16 10:08

from django.db import migrations
from django.utils import timezone
from dotenv import load_dotenv
import os

load_dotenv()

def create_user_and_profile(apps, schema_editor):
    # Get historical models
    User = apps.get_model('auth', 'User')
    ArchiveProfile = apps.get_model('archive', 'ArchiveProfile')
    ArchiveForum = apps.get_model('archive', 'ArchiveForum')
    ArchiveForumGroup = apps.get_model('archive', 'ArchiveForumGroup')
    ArchiveTopic = apps.get_model('archive', 'ArchiveTopic')
    ArchiveCategory = apps.get_model('archive', 'ArchiveCategory')
    ArchivePost = apps.get_model('archive', 'ArchivePost')
    ArchiveTopicReadStatus = apps.get_model('archive', 'ArchiveTopicReadStatus')

    if ArchiveForumGroup.objects.filter(name="You're blue now !").exists():
        return  # If the group already exists, we don't need to run this migration again

    env_password = os.getenv('ADMIN_PASSWORD', 'password_not_found')  # Default password if not set in .env
    if env_password == 'password_not_found':
        raise ValueError("ADMIN_PASSWORD not found in .env file. Please set it.")
    
    admin_username = os.getenv('ADMIN_USERNAME', 'admin')  # Default username if not set in .env
    if admin_username == 'admin':
        print("Using default admin username 'admin'. If this is not intended, please set ADMIN_USERNAME in .env file.")

    # Create the Forum "UTF" (required by Profile's save() method)
    if ArchiveForum.objects.filter(name='UTF').exists():
        UTF = ArchiveForum.objects.get(name='UTF')
    else:
        UTF = ArchiveForum.objects.create(name='UTF', total_users=0, total_messages=0, online_record=0, online_record_date=timezone.now())
    
    UTF.save()

    # Create all the ForumGroups
    if ArchiveForumGroup.objects.filter(name="Outsider").exists():
        outsider_group = ArchiveForumGroup.objects.get(name="Outsider")
    else:
        outsider_group = ArchiveForumGroup.objects.create(name="Outsider", priority=10, description="""Membres ne s'étant pas encore présentés.
Nombre de messages : 0.""", is_messages_group=True, minimum_messages=0, color="#847B7E")
        
    outsider_group.save()
    
    if ArchiveForumGroup.objects.filter(name="Fallen Child").exists():
        fallen_child_group = ArchiveForumGroup.objects.get(name="Fallen Child")
    else:
        fallen_child_group = ArchiveForumGroup.objects.create(name="Fallen Child", priority=20, description="""Nouveaux sur le forum.
Nombre de messages : de 1 à 49.""", is_messages_group=True, minimum_messages=1, color="#FFFFFF")
        
    fallen_child_group.save()

    if ArchiveForumGroup.objects.filter(name="You're blue now !").exists():
        blue_group = ArchiveForumGroup.objects.get(name="You're blue now !")
    else:
        blue_group = ArchiveForumGroup.objects.create(name="You're blue now !", priority=30, description="""That's my attack !
Nombre de messages : de 50 à 199.""", is_messages_group=True, minimum_messages=50, color="#859BFD")
        
    blue_group.save()
        
    if ArchiveForumGroup.objects.filter(name="Made of Fire").exists():
        fire_group = ArchiveForumGroup.objects.get(name="Made of Fire")
    else:
        fire_group = ArchiveForumGroup.objects.create(name="Made of Fire", priority=40, description="""Membres confirmés.
Nombre de messages : de 200 à 999.""", is_messages_group=True, minimum_messages=200, color="#EA8C14")
        
    if ArchiveForumGroup.objects.filter(name="Real Spider").exists():
        spider_group = ArchiveForumGroup.objects.get(name="Real Spider")
    else:
        spider_group = ArchiveForumGroup.objects.create(name="Real Spider", priority=50, description="""[color=#993399]I heard they like posting~[/color]

Membres assidus.
Nombre de messages : de 1000 à 2999.""", is_messages_group=True, minimum_messages=1000, color="#8F1C93")
        
    if ArchiveForumGroup.objects.filter(name="It's showtime !").exists():
        showtime_group = ArchiveForumGroup.objects.get(name="It's showtime !")
    else:
        showtime_group = ArchiveForumGroup.objects.create(name="It's showtime !", priority=60, description="""Membres d'honneur.
Nombre de messages : de 2000 à 4999.""", is_messages_group=True, minimum_messages=2000, color="#F4D400")
        
    if ArchiveForumGroup.objects.filter(name="Hopeful Dreamer").exists():
        dreamer_group = ArchiveForumGroup.objects.get(name="Hopeful Dreamer")
    else:
        dreamer_group = ArchiveForumGroup.objects.create(name="Hopeful Dreamer", priority=70, description="""Membre, euh... TRÈS déterminé ?
Nombre de messages : 5000 ou plus.""", is_messages_group=True, minimum_messages=5000, color="#FF00CC")
        
    if ArchiveForumGroup.objects.filter(name="Royal Guard Apprentice").exists():
        apprentice_group = ArchiveForumGroup.objects.get(name="Royal Guard Apprentice")
    else:
        apprentice_group = ArchiveForumGroup.objects.create(name="Royal Guard Apprentice", priority=80, description="""Modérateurs ChatBox.""", is_messages_group=False, minimum_messages=999999, color="#2D3EDF")

    if ArchiveForumGroup.objects.filter(name="Royal Guard").exists():
       guard_group = ArchiveForumGroup.objects.get(name="Royal Guard")
    else:
       guard_group = ArchiveForumGroup.objects.create(name="Royal Guard", priority=90, description="""Make her a member of the Royal Guard ♫

Modérateurs Forum.""", is_messages_group=False, is_staff_group=True, minimum_messages=999999, color="#289331")
       
    if ArchiveForumGroup.objects.filter(name="Determination").exists():
       determination_group = ArchiveForumGroup.objects.get(name="Determination")
    else:
       determination_group = ArchiveForumGroup.objects.create(name="Determination", priority=100, description="""Administrateur.""", is_messages_group=False, is_staff_group=True, minimum_messages=999999, color="#C02200")

    # Create the User with a hashed password
    admin, created = User.objects.get_or_create(
        username='Yebeka',
        defaults={
            'email': 'admin@fake.com',
            'is_staff': True,
            'is_superuser': True,
        }
    )
    if created:
        admin.set_password(env_password)
        admin.save()


    # Create the Profile linked to the User
    profile, created = ArchiveProfile.objects.get_or_create(
        user=admin,
        defaults={
            'birthdate': timezone.now().replace(year=2000, month=1, day=1),  # Fake dates
            'gender': 'male',
            'type': 'neutral',
        }
    )

    # Add admin to every group
    profile.groups.add(outsider_group, fallen_child_group, blue_group, fire_group, spider_group, showtime_group, dreamer_group, apprentice_group, guard_group, determination_group)
    admin.save()
    profile.save()

    # Create the default categories
    if ArchiveCategory.objects.filter(name="RUINS").exists():
        ruins_category = ArchiveCategory.objects.get(name="RUINS")
    else:
        ruins_category = ArchiveCategory.objects.create(name="RUINS", slug="ruins")
        ruins_category.save()

    if ArchiveCategory.objects.filter(name="Snowdin").exists():
        snowdin_category = ArchiveCategory.objects.get(name="Snowdin")
    else:
        snowdin_category = ArchiveCategory.objects.create(name="Snowdin", slug="snowdin")
        snowdin_category.save()

    if ArchiveCategory.objects.filter(name="Waterfall").exists():
        waterfall_category = ArchiveCategory.objects.get(name="Waterfall")
    else:
        waterfall_category = ArchiveCategory.objects.create(name="Waterfall", slug="waterfall")
        waterfall_category.save()

    if ArchiveCategory.objects.filter(name="Hotland").exists():
        hotland_category = ArchiveCategory.objects.get(name="Hotland")
    else:
        hotland_category = ArchiveCategory.objects.create(name="Hotland", slug="hotland")
        hotland_category.save() 

    if ArchiveCategory.objects.filter(name="Surface").exists():
        surface_category = ArchiveCategory.objects.get(name="Surface")
    else:
        surface_category = ArchiveCategory.objects.create(name="Surface", slug="surface")
        surface_category.save()

    if ArchiveCategory.objects.filter(name="room_mysteryman").exists():
        mysteryman_category = ArchiveCategory.objects.get(name="room_mysteryman")
    else:
        mysteryman_category = ArchiveCategory.objects.create(name="room_mysteryman", slug="room_mysteryman", is_hidden=True)
        mysteryman_category.save()

    # Create the default subforums

    #RUINS
    if ArchiveTopic.objects.filter(title="Règles du forum et Annonces").exists():
        rules_subforum = ArchiveTopic.objects.get(title="Règles du forum et Annonces")
    else:
        rules_subforum = ArchiveTopic.objects.create(author=admin,
                                           title="Règles du forum et Annonces",
                                           description="Les règles sont à lire avant de poster. Vous trouverez également les annonces du staff du forum.",
                                           slug="regles-du-forum-et-annonces",
                                           category=ruins_category,
                                           is_sub_forum=True,
                                           is_locked=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        rules_subforum.save()
        
    if ArchiveTopic.objects.filter(title="Présentations").exists():
        presentations_topic = ArchiveTopic.objects.get(title="Présentations")
    else:
        presentations_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Présentations",
                                           description="Se présenter est obligatoire pour pouvoir accéder au reste du forum.",
                                           slug="presentations",
                                           category=ruins_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        presentations_topic.save()

    #Snowdin
    if ArchiveTopic.objects.filter(title="Aide et idées").exists():
        help_topic = ArchiveTopic.objects.get(title="Aide et idées")
    else:
        help_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Aide et idées",
                                           description="Besoin d'aide ou conseils pour un passage du jeu ? Des choses à proposer pour tester en jeu ? C'est ici.",
                                           slug="aide-et-idees",
                                           category=snowdin_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        help_topic.save()

    if ArchiveTopic.objects.filter(title="Tuto / Astuces").exists():
        tutorial_topic = ArchiveTopic.objects.get(title="Tuto / Astuces")
    else:
        tutorial_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Tuto / Astuces",
                                           description="Si vous avez trouvé une astuce (permettant, par exemple, de faciliter une étape du jeu), vous pouvez partager ici.",
                                           slug="tuto-astuces",
                                           category=snowdin_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        tutorial_topic.save()

    #Waterfall
    if ArchiveTopic.objects.filter(title="Easter eggs").exists():
        easter_eggs_topic = ArchiveTopic.objects.get(title="Easter eggs")
    else:
        easter_eggs_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Easter eggs",
                                           description="Vous avez trouvé un easter egg, un secret (avec la fun value par exemple) ? Venez partager !",
                                           slug="easter-eggs",
                                           category=waterfall_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        easter_eggs_topic.save()
        
    if ArchiveTopic.objects.filter(title="Espace technique").exists():
        espace_technique_topic = ArchiveTopic.objects.get(title="Espace technique")
    else:
        espace_technique_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Espace technique",
                                           description="Tout ce qui concerne les fichiers du jeu, les mods, fichiers, etc.",
                                           slug="espace-technique",
                                           category=waterfall_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        espace_technique_topic.save()
        
    #Hotland
    if ArchiveTopic.objects.filter(title="Discussions générales").exists():
        discussions_generales_topic = ArchiveTopic.objects.get(title="Discussions générales")
    else:
        discussions_generales_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Discussions générales",
                                           description="Parlez d'à peu près n'importe quoi en rapport avec les jeux.",
                                           slug="discussions-generales",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        discussions_generales_topic.save()

    if ArchiveTopic.objects.filter(title="Théories").exists():
        theories_topic = ArchiveTopic.objects.get(title="Théories")
    else:
        theories_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Théories",
                                           description="Venez exposer des théories sur Undertale. Vérifiez que la théorie n'a pas déjà été postée. (Attention: Spoilers)",
                                           slug="theories",
                                           category=hotland_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        theories_topic.save()

    #Surface
    if ArchiveTopic.objects.filter(title="Actualités").exists():
        actualites_topic = ArchiveTopic.objects.get(title="Actualités")
    else:
        actualites_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Actualités",
                                           description="Pour parler de l'actualité générale (dans la mesure du raisonnable).",
                                           slug="actualites",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        actualites_topic.save()
        
    if ArchiveTopic.objects.filter(title="Coin des artistes").exists():
        coin_des_artistes_topic = ArchiveTopic.objects.get(title="Coin des artistes")
    else:
        coin_des_artistes_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Coin des artistes",
                                           description="Zone d'exposition de vos créations, que ce soit des dessins, des écrits, des musiques, etc.",
                                           slug="coin-des-artistes",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        coin_des_artistes_topic.save()
        
    if ArchiveTopic.objects.filter(title="Flood").exists():
        flood_topic = ArchiveTopic.objects.get(title="Flood")
    else:
        flood_topic = ArchiveTopic.objects.create(author=admin,
                                           title="Flood",
                                           description="Pour parler de tout et de rien. Pub, défis, jeux, etc.",
                                           slug="flood",
                                           category=surface_category,
                                           is_sub_forum=True,
                                           is_index_topic=True,
                                           total_replies=0,
                                           total_children=0)
        flood_topic.save()
        
    # Create the default topics and posts
    topic1 = ArchiveTopic.objects.create(author=admin, title="Bienvenue sur le forum !", category=ruins_category, parent=rules_subforum, slug='bienvenue-sur-le-forum')
    topic1.save()
    ArchivePost.objects.create(author=admin, topic=topic1, text="Ceci est le premier message du forum !")

    topic2 = ArchiveTopic.objects.create(author=admin, title="Comment se présenter ?", category=ruins_category, parent=presentations_topic, slug='comment-se-presenter')
    topic2.save()
    ArchivePost.objects.create(author=admin, topic=topic2, text="Donnez votre nom, votre âge, et vos hobbies.")

    topic3 = ArchiveTopic.objects.create(author=admin, title="Besoin d'aide pour le premier puzzle", category=snowdin_category, parent=help_topic, slug='besoin-d-aide-pour-le-premier-puzzle')
    topic3.save()
    ArchivePost.objects.create(author=admin, topic=topic3, text="Je suis bloqué au puzzle des piques. Quelqu'un peut m'aider ?")

    # Mark all topics as read for the admin user
    for topic in ArchiveTopic.objects.all():
        ArchiveTopicReadStatus.objects.create(user=admin, topic=topic, last_read=timezone.now())

class Migration(migrations.Migration):

    dependencies = [
        ('archive', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RunPython(create_user_and_profile),
    ]
