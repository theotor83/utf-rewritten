# docker-compose.yml

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

  archive_db:
    image: postgres:15
    volumes:
      - archive_postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${ARCHIVE_POSTGRES_PASSWORD}
      - POSTGRES_USER=${ARCHIVE_POSTGRES_USER}
      - POSTGRES_DB=${ARCHIVE_POSTGRES_DB}
    ports:
      - "5433:5432"

  redis:
    image: redis:7-alpine
    # Remove public port exposure for security - only internal communication
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/entrypoint.sh:/usr/local/bin/redis-entrypoint.sh
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    entrypoint: ["/usr/local/bin/redis-entrypoint.sh"]

  web:
    build: .
    restart: always
    volumes:
      - .:/app
      - static_files:/app/staticfiles
      - media_files:/app/media
    depends_on:
      - db
      - archive_db
      - redis
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - ARCHIVE_DATABASE_URL=postgres://${ARCHIVE_POSTGRES_USER}:${ARCHIVE_POSTGRES_PASSWORD}@archive_db:5432/${ARCHIVE_POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DEVELOPMENT_MODE=False

  nginx:
    build: ./docker/nginx
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ./docker/nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    env_file:
      - .env

volumes:
  postgres_data:
  archive_postgres_data:
  redis_data:
  static_files:
  media_files: