upstream django {
    server web:8000;
}

# HTTP server - redirect to HTTPS
#server {
#    listen 80;
#    server_name utf-rewritten.org www.utf-rewritten.org;
#    # Redirect HTTP to HTTPS
#    location / {
#        return 301 https://$host$request_uri;
#    }
#}
#
# For local development without HTTPS
#server {
#    listen 80;
#    server_name localhost;
#    client_max_body_size 100M;
#    location /static/ {
#        alias /app/staticfiles/;
#    }
#    location /media/ {
#        alias /app/media/;
#    }
#    location / {
#        proxy_pass http://django;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header X-Forwarded-Host $host;
#        proxy_set_header X-Forwarded-Port $server_port;
#        # Fix for CSRF issues - ensure cookies are properly forwarded
#        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=Lax";
#    }
#}
#
# HTTPS server
#server {
#    listen 443 ssl;
#    server_name utf-rewritten.org www.utf-rewritten.org;
#    ssl_certificate /etc/nginx/ssl/fullchain.pem;
#    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers on;
#    client_max_body_size 100M;
#    location /static/ {
#        alias /app/staticfiles/;
#    }
#    location /media/ {
#        alias /app/media/;
#    }
#    location / {
#        proxy_pass http://django;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header X-Forwarded-Host $host;
#        proxy_set_header X-Forwarded-Port $server_port;
#        # Fix for CSRF issues - ensure cookies are properly forwarded
#        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=Lax";
#    }
#}