/* {"date":"2025-08-04 10:38:23","hash":"5536d13eba073dc418714e4084f691ea","reduce":"22%"} */
/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document)
            throw new Error("jQuery requires a window with a document");
        return t(e)
    }
    : t(e)
}("undefined" != typeof window ? window : this, function(ie, e) {
    "use strict";
    var oe = []
      , r = Object.getPrototypeOf
      , ae = oe.slice
      , g = oe.flat ? function(e) {
        return oe.flat.call(e)
    }
    : function(e) {
        return oe.concat.apply([], e)
    }
      , s = oe.push
      , se = oe.indexOf
      , n = {}
      , i = n.toString
      , ue = n.hasOwnProperty
      , o = ue.toString
      , a = o.call(Object)
      , le = {}
      , v = function(e) {
        return "function" == typeof e && "number" != typeof e.nodeType && "function" != typeof e.item
    }
      , y = function(e) {
        return null != e && e === e.window
    }
      , C = ie.document
      , u = {
        type: !0,
        src: !0,
        nonce: !0,
        noModule: !0
    };
    function m(e, t, n) {
        var r, i, o = (n = n || C).createElement("script");
        if (o.text = e,
        t)
            for (r in u)
                (i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i);
        n.head.appendChild(o).parentNode.removeChild(o)
    }
    function x(e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? n[i.call(e)] || "object" : typeof e
    }
    var t = "3.7.1"
      , l = /HTML$/i
      , ce = function(e, t) {
        return new ce.fn.init(e,t)
    };
    function c(e) {
        var t = !!e && "length"in e && e.length
          , n = x(e);
        return !v(e) && !y(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e)
    }
    function fe(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
    }
    ce.fn = ce.prototype = {
        jquery: t,
        constructor: ce,
        length: 0,
        toArray: function() {
            return ae.call(this)
        },
        get: function(e) {
            return null == e ? ae.call(this) : e < 0 ? this[e + this.length] : this[e]
        },
        pushStack: function(e) {
            var t = ce.merge(this.constructor(), e);
            return t.prevObject = this,
            t
        },
        each: function(e) {
            return ce.each(this, e)
        },
        map: function(n) {
            return this.pushStack(ce.map(this, function(e, t) {
                return n.call(e, t, e)
            }))
        },
        slice: function() {
            return this.pushStack(ae.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        even: function() {
            return this.pushStack(ce.grep(this, function(e, t) {
                return (t + 1) % 2
            }))
        },
        odd: function() {
            return this.pushStack(ce.grep(this, function(e, t) {
                return t % 2
            }))
        },
        eq: function(e) {
            var t = this.length
              , n = +e + (e < 0 ? t : 0);
            return this.pushStack(0 <= n && n < t ? [this[n]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor()
        },
        push: s,
        sort: oe.sort,
        splice: oe.splice
    },
    ce.extend = ce.fn.extend = function() {
        var e, t, n, r, i, o, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1;
        for ("boolean" == typeof a && (l = a,
        a = arguments[s] || {},
        s++),
        "object" == typeof a || v(a) || (a = {}),
        s === u && (a = this,
        s--); s < u; s++)
            if (null != (e = arguments[s]))
                for (t in e)
                    r = e[t],
                    "__proto__" !== t && a !== r && (l && r && (ce.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t],
                    o = i && !Array.isArray(n) ? [] : i || ce.isPlainObject(n) ? n : {},
                    i = !1,
                    a[t] = ce.extend(l, o, r)) : void 0 !== r && (a[t] = r));
        return a
    }
    ,
    ce.extend({
        expando: "jQuery" + (t + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e)
        },
        noop: function() {},
        isPlainObject: function(e) {
            var t, n;
            return !(!e || "[object Object]" !== i.call(e)) && (!(t = r(e)) || "function" == typeof (n = ue.call(t, "constructor") && t.constructor) && o.call(n) === a)
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e)
                return !1;
            return !0
        },
        globalEval: function(e, t, n) {
            m(e, {
                nonce: t && t.nonce
            }, n)
        },
        each: function(e, t) {
            var n, r = 0;
            if (c(e)) {
                for (n = e.length; r < n; r++)
                    if (!1 === t.call(e[r], r, e[r]))
                        break
            } else
                for (r in e)
                    if (!1 === t.call(e[r], r, e[r]))
                        break;
            return e
        },
        text: function(e) {
            var t, n = "", r = 0, i = e.nodeType;
            if (!i)
                while (t = e[r++])
                    n += ce.text(t);
            return 1 === i || 11 === i ? e.textContent : 9 === i ? e.documentElement.textContent : 3 === i || 4 === i ? e.nodeValue : n
        },
        makeArray: function(e, t) {
            var n = t || [];
            return null != e && (c(Object(e)) ? ce.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)),
            n
        },
        inArray: function(e, t, n) {
            return null == t ? -1 : se.call(t, e, n)
        },
        isXMLDoc: function(e) {
            var t = e && e.namespaceURI
              , n = e && (e.ownerDocument || e).documentElement;
            return !l.test(t || n && n.nodeName || "HTML")
        },
        merge: function(e, t) {
            for (var n = +t.length, r = 0, i = e.length; r < n; r++)
                e[i++] = t[r];
            return e.length = i,
            e
        },
        grep: function(e, t, n) {
            for (var r = [], i = 0, o = e.length, a = !n; i < o; i++)
                !t(e[i], i) !== a && r.push(e[i]);
            return r
        },
        map: function(e, t, n) {
            var r, i, o = 0, a = [];
            if (c(e))
                for (r = e.length; o < r; o++)
                    null != (i = t(e[o], o, n)) && a.push(i);
            else
                for (o in e)
                    null != (i = t(e[o], o, n)) && a.push(i);
            return g(a)
        },
        guid: 1,
        support: le
    }),
    "function" == typeof Symbol && (ce.fn[Symbol.iterator] = oe[Symbol.iterator]),
    ce.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        n["[object " + t + "]"] = t.toLowerCase()
    });
    var pe = oe.pop
      , de = oe.sort
      , he = oe.splice
      , ge = "[\\x20\\t\\r\\n\\f]"
      , ve = new RegExp("^" + ge + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ge + "+$","g");
    ce.contains = function(e, t) {
        var n = t && t.parentNode;
        return e === n || !(!n || 1 !== n.nodeType || !(e.contains ? e.contains(n) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(n)))
    }
    ;
    var f = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function p(e, t) {
        return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
    }
    ce.escapeSelector = function(e) {
        return (e + "").replace(f, p)
    }
    ;
    var ye = C
      , me = s;
    !function() {
        var e, b, w, o, a, T, r, C, d, i, k = me, S = ce.expando, E = 0, n = 0, s = W(), c = W(), u = W(), h = W(), l = function(e, t) {
            return e === t && (a = !0),
            0
        }, f = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", t = "(?:\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", p = "\\[" + ge + "*(" + t + ")(?:" + ge + "*([*^$|!~]?=)" + ge + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + t + "))|)" + ge + "*\\]", g = ":(" + t + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + p + ")*)|.*)\\)|)", v = new RegExp(ge + "+","g"), y = new RegExp("^" + ge + "*," + ge + "*"), m = new RegExp("^" + ge + "*([>+~]|" + ge + ")" + ge + "*"), x = new RegExp(ge + "|>"), j = new RegExp(g), A = new RegExp("^" + t + "$"), D = {
            ID: new RegExp("^#(" + t + ")"),
            CLASS: new RegExp("^\\.(" + t + ")"),
            TAG: new RegExp("^(" + t + "|[*])"),
            ATTR: new RegExp("^" + p),
            PSEUDO: new RegExp("^" + g),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + ge + "*(even|odd|(([+-]|)(\\d*)n|)" + ge + "*(?:([+-]|)" + ge + "*(\\d+)|))" + ge + "*\\)|)","i"),
            bool: new RegExp("^(?:" + f + ")$","i"),
            needsContext: new RegExp("^" + ge + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + ge + "*((?:-\\d)?\\d*)" + ge + "*\\)|)(?=[^-]|$)","i")
        }, N = /^(?:input|select|textarea|button)$/i, q = /^h\d$/i, L = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, H = /[+~]/, O = new RegExp("\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\([^\\r\\n\\f])","g"), P = function(e, t) {
            var n = "0x" + e.slice(1) - 65536;
            return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320))
        }, M = function() {
            V()
        }, R = J(function(e) {
            return !0 === e.disabled && fe(e, "fieldset")
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            k.apply(oe = ae.call(ye.childNodes), ye.childNodes),
            oe[ye.childNodes.length].nodeType
        } catch (e) {
            k = {
                apply: function(e, t) {
                    me.apply(e, ae.call(t))
                },
                call: function(e) {
                    me.apply(e, ae.call(arguments, 1))
                }
            }
        }
        function I(t, e, n, r) {
            var i, o, a, s, u, l, c, f = e && e.ownerDocument, p = e ? e.nodeType : 9;
            if (n = n || [],
            "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p)
                return n;
            if (!r && (V(e),
            e = e || T,
            C)) {
                if (11 !== p && (u = L.exec(t)))
                    if (i = u[1]) {
                        if (9 === p) {
                            if (!(a = e.getElementById(i)))
                                return n;
                            if (a.id === i)
                                return k.call(n, a),
                                n
                        } else if (f && (a = f.getElementById(i)) && I.contains(e, a) && a.id === i)
                            return k.call(n, a),
                            n
                    } else {
                        if (u[2])
                            return k.apply(n, e.getElementsByTagName(t)),
                            n;
                        if ((i = u[3]) && e.getElementsByClassName)
                            return k.apply(n, e.getElementsByClassName(i)),
                            n
                    }
                if (!(h[t + " "] || d && d.test(t))) {
                    if (c = t,
                    f = e,
                    1 === p && (x.test(t) || m.test(t))) {
                        (f = H.test(t) && U(e.parentNode) || e) == e && le.scope || ((s = e.getAttribute("id")) ? s = ce.escapeSelector(s) : e.setAttribute("id", s = S)),
                        o = (l = Y(t)).length;
                        while (o--)
                            l[o] = (s ? "#" + s : ":scope") + " " + Q(l[o]);
                        c = l.join(",")
                    }
                    try {
                        return k.apply(n, f.querySelectorAll(c)),
                        n
                    } catch (e) {
                        h(t, !0)
                    } finally {
                        s === S && e.removeAttribute("id")
                    }
                }
            }
            return re(t.replace(ve, "$1"), e, n, r)
        }
        function W() {
            var r = [];
            return function e(t, n) {
                return r.push(t + " ") > b.cacheLength && delete e[r.shift()],
                e[t + " "] = n
            }
        }
        function F(e) {
            return e[S] = !0,
            e
        }
        function $(e) {
            var t = T.createElement("fieldset");
            try {
                return !!e(t)
            } catch (e) {
                return !1
            } finally {
                t.parentNode && t.parentNode.removeChild(t),
                t = null
            }
        }
        function B(t) {
            return function(e) {
                return fe(e, "input") && e.type === t
            }
        }
        function _(t) {
            return function(e) {
                return (fe(e, "input") || fe(e, "button")) && e.type === t
            }
        }
        function z(t) {
            return function(e) {
                return "form"in e ? e.parentNode && !1 === e.disabled ? "label"in e ? "label"in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && R(e) === t : e.disabled === t : "label"in e && e.disabled === t
            }
        }
        function X(a) {
            return F(function(o) {
                return o = +o,
                F(function(e, t) {
                    var n, r = a([], e.length, o), i = r.length;
                    while (i--)
                        e[n = r[i]] && (e[n] = !(t[n] = e[n]))
                })
            })
        }
        function U(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e
        }
        function V(e) {
            var t, n = e ? e.ownerDocument || e : ye;
            return n != T && 9 === n.nodeType && n.documentElement && (r = (T = n).documentElement,
            C = !ce.isXMLDoc(T),
            i = r.matches || r.webkitMatchesSelector || r.msMatchesSelector,
            r.msMatchesSelector && ye != T && (t = T.defaultView) && t.top !== t && t.addEventListener("unload", M),
            le.getById = $(function(e) {
                return r.appendChild(e).id = ce.expando,
                !T.getElementsByName || !T.getElementsByName(ce.expando).length
            }),
            le.disconnectedMatch = $(function(e) {
                return i.call(e, "*")
            }),
            le.scope = $(function() {
                return T.querySelectorAll(":scope")
            }),
            le.cssHas = $(function() {
                try {
                    return T.querySelector(":has(*,:jqfake)"),
                    !1
                } catch (e) {
                    return !0
                }
            }),
            le.getById ? (b.filter.ID = function(e) {
                var t = e.replace(O, P);
                return function(e) {
                    return e.getAttribute("id") === t
                }
            }
            ,
            b.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && C) {
                    var n = t.getElementById(e);
                    return n ? [n] : []
                }
            }
            ) : (b.filter.ID = function(e) {
                var n = e.replace(O, P);
                return function(e) {
                    var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                    return t && t.value === n
                }
            }
            ,
            b.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && C) {
                    var n, r, i, o = t.getElementById(e);
                    if (o) {
                        if ((n = o.getAttributeNode("id")) && n.value === e)
                            return [o];
                        i = t.getElementsByName(e),
                        r = 0;
                        while (o = i[r++])
                            if ((n = o.getAttributeNode("id")) && n.value === e)
                                return [o]
                    }
                    return []
                }
            }
            ),
            b.find.TAG = function(e, t) {
                return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : t.querySelectorAll(e)
            }
            ,
            b.find.CLASS = function(e, t) {
                if ("undefined" != typeof t.getElementsByClassName && C)
                    return t.getElementsByClassName(e)
            }
            ,
            d = [],
            $(function(e) {
                var t;
                r.appendChild(e).innerHTML = "<a id='" + S + "' href='' disabled='disabled'></a><select id='" + S + "-\r\\' disabled='disabled'><option selected=''></option></select>",
                e.querySelectorAll("[selected]").length || d.push("\\[" + ge + "*(?:value|" + f + ")"),
                e.querySelectorAll("[id~=" + S + "-]").length || d.push("~="),
                e.querySelectorAll("a#" + S + "+*").length || d.push(".#.+[+~]"),
                e.querySelectorAll(":checked").length || d.push(":checked"),
                (t = T.createElement("input")).setAttribute("type", "hidden"),
                e.appendChild(t).setAttribute("name", "D"),
                r.appendChild(e).disabled = !0,
                2 !== e.querySelectorAll(":disabled").length && d.push(":enabled", ":disabled"),
                (t = T.createElement("input")).setAttribute("name", ""),
                e.appendChild(t),
                e.querySelectorAll("[name='']").length || d.push("\\[" + ge + "*name" + ge + "*=" + ge + "*(?:''|\"\")")
            }),
            le.cssHas || d.push(":has"),
            d = d.length && new RegExp(d.join("|")),
            l = function(e, t) {
                if (e === t)
                    return a = !0,
                    0;
                var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return n || (1 & (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !le.sortDetached && t.compareDocumentPosition(e) === n ? e === T || e.ownerDocument == ye && I.contains(ye, e) ? -1 : t === T || t.ownerDocument == ye && I.contains(ye, t) ? 1 : o ? se.call(o, e) - se.call(o, t) : 0 : 4 & n ? -1 : 1)
            }
            ),
            T
        }
        for (e in I.matches = function(e, t) {
            return I(e, null, null, t)
        }
        ,
        I.matchesSelector = function(e, t) {
            if (V(e),
            C && !h[t + " "] && (!d || !d.test(t)))
                try {
                    var n = i.call(e, t);
                    if (n || le.disconnectedMatch || e.document && 11 !== e.document.nodeType)
                        return n
                } catch (e) {
                    h(t, !0)
                }
            return 0 < I(t, T, null, [e]).length
        }
        ,
        I.contains = function(e, t) {
            return (e.ownerDocument || e) != T && V(e),
            ce.contains(e, t)
        }
        ,
        I.attr = function(e, t) {
            (e.ownerDocument || e) != T && V(e);
            var n = b.attrHandle[t.toLowerCase()]
              , r = n && ue.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !C) : void 0;
            return void 0 !== r ? r : e.getAttribute(t)
        }
        ,
        I.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        }
        ,
        ce.uniqueSort = function(e) {
            var t, n = [], r = 0, i = 0;
            if (a = !le.sortStable,
            o = !le.sortStable && ae.call(e, 0),
            de.call(e, l),
            a) {
                while (t = e[i++])
                    t === e[i] && (r = n.push(i));
                while (r--)
                    he.call(e, n[r], 1)
            }
            return o = null,
            e
        }
        ,
        ce.fn.uniqueSort = function() {
            return this.pushStack(ce.uniqueSort(ae.apply(this)))
        }
        ,
        (b = ce.expr = {
            cacheLength: 50,
            createPseudo: F,
            match: D,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace(O, P),
                    e[3] = (e[3] || e[4] || e[5] || "").replace(O, P),
                    "~=" === e[2] && (e[3] = " " + e[3] + " "),
                    e.slice(0, 4)
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(),
                    "nth" === e[1].slice(0, 3) ? (e[3] || I.error(e[0]),
                    e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])),
                    e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && I.error(e[0]),
                    e
                },
                PSEUDO: function(e) {
                    var t, n = !e[6] && e[2];
                    return D.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && j.test(n) && (t = Y(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t),
                    e[2] = n.slice(0, t)),
                    e.slice(0, 3))
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(O, P).toLowerCase();
                    return "*" === e ? function() {
                        return !0
                    }
                    : function(e) {
                        return fe(e, t)
                    }
                },
                CLASS: function(e) {
                    var t = s[e + " "];
                    return t || (t = new RegExp("(^|" + ge + ")" + e + "(" + ge + "|$)")) && s(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "")
                    })
                },
                ATTR: function(n, r, i) {
                    return function(e) {
                        var t = I.attr(e, n);
                        return null == t ? "!=" === r : !r || (t += "",
                        "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace(v, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-"))
                    }
                },
                CHILD: function(d, e, t, h, g) {
                    var v = "nth" !== d.slice(0, 3)
                      , y = "last" !== d.slice(-4)
                      , m = "of-type" === e;
                    return 1 === h && 0 === g ? function(e) {
                        return !!e.parentNode
                    }
                    : function(e, t, n) {
                        var r, i, o, a, s, u = v !== y ? "nextSibling" : "previousSibling", l = e.parentNode, c = m && e.nodeName.toLowerCase(), f = !n && !m, p = !1;
                        if (l) {
                            if (v) {
                                while (u) {
                                    o = e;
                                    while (o = o[u])
                                        if (m ? fe(o, c) : 1 === o.nodeType)
                                            return !1;
                                    s = u = "only" === d && !s && "nextSibling"
                                }
                                return !0
                            }
                            if (s = [y ? l.firstChild : l.lastChild],
                            y && f) {
                                p = (a = (r = (i = l[S] || (l[S] = {}))[d] || [])[0] === E && r[1]) && r[2],
                                o = a && l.childNodes[a];
                                while (o = ++a && o && o[u] || (p = a = 0) || s.pop())
                                    if (1 === o.nodeType && ++p && o === e) {
                                        i[d] = [E, a, p];
                                        break
                                    }
                            } else if (f && (p = a = (r = (i = e[S] || (e[S] = {}))[d] || [])[0] === E && r[1]),
                            !1 === p)
                                while (o = ++a && o && o[u] || (p = a = 0) || s.pop())
                                    if ((m ? fe(o, c) : 1 === o.nodeType) && ++p && (f && ((i = o[S] || (o[S] = {}))[d] = [E, p]),
                                    o === e))
                                        break;
                            return (p -= g) === h || p % h == 0 && 0 <= p / h
                        }
                    }
                },
                PSEUDO: function(e, o) {
                    var t, a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || I.error("unsupported pseudo: " + e);
                    return a[S] ? a(o) : 1 < a.length ? (t = [e, e, "", o],
                    b.setFilters.hasOwnProperty(e.toLowerCase()) ? F(function(e, t) {
                        var n, r = a(e, o), i = r.length;
                        while (i--)
                            e[n = se.call(e, r[i])] = !(t[n] = r[i])
                    }) : function(e) {
                        return a(e, 0, t)
                    }
                    ) : a
                }
            },
            pseudos: {
                not: F(function(e) {
                    var r = []
                      , i = []
                      , s = ne(e.replace(ve, "$1"));
                    return s[S] ? F(function(e, t, n, r) {
                        var i, o = s(e, null, r, []), a = e.length;
                        while (a--)
                            (i = o[a]) && (e[a] = !(t[a] = i))
                    }) : function(e, t, n) {
                        return r[0] = e,
                        s(r, null, n, i),
                        r[0] = null,
                        !i.pop()
                    }
                }),
                has: F(function(t) {
                    return function(e) {
                        return 0 < I(t, e).length
                    }
                }),
                contains: F(function(t) {
                    return t = t.replace(O, P),
                    function(e) {
                        return -1 < (e.textContent || ce.text(e)).indexOf(t)
                    }
                }),
                lang: F(function(n) {
                    return A.test(n || "") || I.error("unsupported lang: " + n),
                    n = n.replace(O, P).toLowerCase(),
                    function(e) {
                        var t;
                        do {
                            if (t = C ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))
                                return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-")
                        } while ((e = e.parentNode) && 1 === e.nodeType);
                        return !1
                    }
                }),
                target: function(e) {
                    var t = ie.location && ie.location.hash;
                    return t && t.slice(1) === e.id
                },
                root: function(e) {
                    return e === r
                },
                focus: function(e) {
                    return e === function() {
                        try {
                            return T.activeElement
                        } catch (e) {}
                    }() && T.hasFocus() && !!(e.type || e.href || ~e.tabIndex)
                },
                enabled: z(!1),
                disabled: z(!0),
                checked: function(e) {
                    return fe(e, "input") && !!e.checked || fe(e, "option") && !!e.selected
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex,
                    !0 === e.selected
                },
                empty: function(e) {
                    for (e = e.firstChild; e; e = e.nextSibling)
                        if (e.nodeType < 6)
                            return !1;
                    return !0
                },
                parent: function(e) {
                    return !b.pseudos.empty(e)
                },
                header: function(e) {
                    return q.test(e.nodeName)
                },
                input: function(e) {
                    return N.test(e.nodeName)
                },
                button: function(e) {
                    return fe(e, "input") && "button" === e.type || fe(e, "button")
                },
                text: function(e) {
                    var t;
                    return fe(e, "input") && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                },
                first: X(function() {
                    return [0]
                }),
                last: X(function(e, t) {
                    return [t - 1]
                }),
                eq: X(function(e, t, n) {
                    return [n < 0 ? n + t : n]
                }),
                even: X(function(e, t) {
                    for (var n = 0; n < t; n += 2)
                        e.push(n);
                    return e
                }),
                odd: X(function(e, t) {
                    for (var n = 1; n < t; n += 2)
                        e.push(n);
                    return e
                }),
                lt: X(function(e, t, n) {
                    var r;
                    for (r = n < 0 ? n + t : t < n ? t : n; 0 <= --r; )
                        e.push(r);
                    return e
                }),
                gt: X(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; ++r < t; )
                        e.push(r);
                    return e
                })
            }
        }).pseudos.nth = b.pseudos.eq,
        {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        })
            b.pseudos[e] = B(e);
        for (e in {
            submit: !0,
            reset: !0
        })
            b.pseudos[e] = _(e);
        function G() {}
        function Y(e, t) {
            var n, r, i, o, a, s, u, l = c[e + " "];
            if (l)
                return t ? 0 : l.slice(0);
            a = e,
            s = [],
            u = b.preFilter;
            while (a) {
                for (o in n && !(r = y.exec(a)) || (r && (a = a.slice(r[0].length) || a),
                s.push(i = [])),
                n = !1,
                (r = m.exec(a)) && (n = r.shift(),
                i.push({
                    value: n,
                    type: r[0].replace(ve, " ")
                }),
                a = a.slice(n.length)),
                b.filter)
                    !(r = D[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(),
                    i.push({
                        value: n,
                        type: o,
                        matches: r
                    }),
                    a = a.slice(n.length));
                if (!n)
                    break
            }
            return t ? a.length : a ? I.error(e) : c(e, s).slice(0)
        }
        function Q(e) {
            for (var t = 0, n = e.length, r = ""; t < n; t++)
                r += e[t].value;
            return r
        }
        function J(a, e, t) {
            var s = e.dir
              , u = e.next
              , l = u || s
              , c = t && "parentNode" === l
              , f = n++;
            return e.first ? function(e, t, n) {
                while (e = e[s])
                    if (1 === e.nodeType || c)
                        return a(e, t, n);
                return !1
            }
            : function(e, t, n) {
                var r, i, o = [E, f];
                if (n) {
                    while (e = e[s])
                        if ((1 === e.nodeType || c) && a(e, t, n))
                            return !0
                } else
                    while (e = e[s])
                        if (1 === e.nodeType || c)
                            if (i = e[S] || (e[S] = {}),
                            u && fe(e, u))
                                e = e[s] || e;
                            else {
                                if ((r = i[l]) && r[0] === E && r[1] === f)
                                    return o[2] = r[2];
                                if ((i[l] = o)[2] = a(e, t, n))
                                    return !0
                            }
                return !1
            }
        }
        function K(i) {
            return 1 < i.length ? function(e, t, n) {
                var r = i.length;
                while (r--)
                    if (!i[r](e, t, n))
                        return !1;
                return !0
            }
            : i[0]
        }
        function Z(e, t, n, r, i) {
            for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)
                (o = e[s]) && (n && !n(o, r, i) || (a.push(o),
                l && t.push(s)));
            return a
        }
        function ee(d, h, g, v, y, e) {
            return v && !v[S] && (v = ee(v)),
            y && !y[S] && (y = ee(y, e)),
            F(function(e, t, n, r) {
                var i, o, a, s, u = [], l = [], c = t.length, f = e || function(e, t, n) {
                    for (var r = 0, i = t.length; r < i; r++)
                        I(e, t[r], n);
                    return n
                }(h || "*", n.nodeType ? [n] : n, []), p = !d || !e && h ? f : Z(f, u, d, n, r);
                if (g ? g(p, s = y || (e ? d : c || v) ? [] : t, n, r) : s = p,
                v) {
                    i = Z(s, l),
                    v(i, [], n, r),
                    o = i.length;
                    while (o--)
                        (a = i[o]) && (s[l[o]] = !(p[l[o]] = a))
                }
                if (e) {
                    if (y || d) {
                        if (y) {
                            i = [],
                            o = s.length;
                            while (o--)
                                (a = s[o]) && i.push(p[o] = a);
                            y(null, s = [], i, r)
                        }
                        o = s.length;
                        while (o--)
                            (a = s[o]) && -1 < (i = y ? se.call(e, a) : u[o]) && (e[i] = !(t[i] = a))
                    }
                } else
                    s = Z(s === t ? s.splice(c, s.length) : s),
                    y ? y(null, t, s, r) : k.apply(t, s)
            })
        }
        function te(e) {
            for (var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = J(function(e) {
                return e === i
            }, a, !0), l = J(function(e) {
                return -1 < se.call(i, e)
            }, a, !0), c = [function(e, t, n) {
                var r = !o && (n || t != w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
                return i = null,
                r
            }
            ]; s < r; s++)
                if (t = b.relative[e[s].type])
                    c = [J(K(c), t)];
                else {
                    if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) {
                        for (n = ++s; n < r; n++)
                            if (b.relative[e[n].type])
                                break;
                        return ee(1 < s && K(c), 1 < s && Q(e.slice(0, s - 1).concat({
                            value: " " === e[s - 2].type ? "*" : ""
                        })).replace(ve, "$1"), t, s < n && te(e.slice(s, n)), n < r && te(e = e.slice(n)), n < r && Q(e))
                    }
                    c.push(t)
                }
            return K(c)
        }
        function ne(e, t) {
            var n, v, y, m, x, r, i = [], o = [], a = u[e + " "];
            if (!a) {
                t || (t = Y(e)),
                n = t.length;
                while (n--)
                    (a = te(t[n]))[S] ? i.push(a) : o.push(a);
                (a = u(e, (v = o,
                m = 0 < (y = i).length,
                x = 0 < v.length,
                r = function(e, t, n, r, i) {
                    var o, a, s, u = 0, l = "0", c = e && [], f = [], p = w, d = e || x && b.find.TAG("*", i), h = E += null == p ? 1 : Math.random() || .1, g = d.length;
                    for (i && (w = t == T || t || i); l !== g && null != (o = d[l]); l++) {
                        if (x && o) {
                            a = 0,
                            t || o.ownerDocument == T || (V(o),
                            n = !C);
                            while (s = v[a++])
                                if (s(o, t || T, n)) {
                                    k.call(r, o);
                                    break
                                }
                            i && (E = h)
                        }
                        m && ((o = !s && o) && u--,
                        e && c.push(o))
                    }
                    if (u += l,
                    m && l !== u) {
                        a = 0;
                        while (s = y[a++])
                            s(c, f, t, n);
                        if (e) {
                            if (0 < u)
                                while (l--)
                                    c[l] || f[l] || (f[l] = pe.call(r));
                            f = Z(f)
                        }
                        k.apply(r, f),
                        i && !e && 0 < f.length && 1 < u + y.length && ce.uniqueSort(r)
                    }
                    return i && (E = h,
                    w = p),
                    c
                }
                ,
                m ? F(r) : r))).selector = e
            }
            return a
        }
        function re(e, t, n, r) {
            var i, o, a, s, u, l = "function" == typeof e && e, c = !r && Y(e = l.selector || e);
            if (n = n || [],
            1 === c.length) {
                if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && C && b.relative[o[1].type]) {
                    if (!(t = (b.find.ID(a.matches[0].replace(O, P), t) || [])[0]))
                        return n;
                    l && (t = t.parentNode),
                    e = e.slice(o.shift().value.length)
                }
                i = D.needsContext.test(e) ? 0 : o.length;
                while (i--) {
                    if (a = o[i],
                    b.relative[s = a.type])
                        break;
                    if ((u = b.find[s]) && (r = u(a.matches[0].replace(O, P), H.test(o[0].type) && U(t.parentNode) || t))) {
                        if (o.splice(i, 1),
                        !(e = r.length && Q(o)))
                            return k.apply(n, r),
                            n;
                        break
                    }
                }
            }
            return (l || ne(e, c))(r, t, !C, n, !t || H.test(e) && U(t.parentNode) || t),
            n
        }
        G.prototype = b.filters = b.pseudos,
        b.setFilters = new G,
        le.sortStable = S.split("").sort(l).join("") === S,
        V(),
        le.sortDetached = $(function(e) {
            return 1 & e.compareDocumentPosition(T.createElement("fieldset"))
        }),
        ce.find = I,
        ce.expr[":"] = ce.expr.pseudos,
        ce.unique = ce.uniqueSort,
        I.compile = ne,
        I.select = re,
        I.setDocument = V,
        I.tokenize = Y,
        I.escape = ce.escapeSelector,
        I.getText = ce.text,
        I.isXML = ce.isXMLDoc,
        I.selectors = ce.expr,
        I.support = ce.support,
        I.uniqueSort = ce.uniqueSort
    }();
    var d = function(e, t, n) {
        var r = []
          , i = void 0 !== n;
        while ((e = e[t]) && 9 !== e.nodeType)
            if (1 === e.nodeType) {
                if (i && ce(e).is(n))
                    break;
                r.push(e)
            }
        return r
    }
      , h = function(e, t) {
        for (var n = []; e; e = e.nextSibling)
            1 === e.nodeType && e !== t && n.push(e);
        return n
    }
      , b = ce.expr.match.needsContext
      , w = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function T(e, n, r) {
        return v(n) ? ce.grep(e, function(e, t) {
            return !!n.call(e, t, e) !== r
        }) : n.nodeType ? ce.grep(e, function(e) {
            return e === n !== r
        }) : "string" != typeof n ? ce.grep(e, function(e) {
            return -1 < se.call(n, e) !== r
        }) : ce.filter(n, e, r)
    }
    ce.filter = function(e, t, n) {
        var r = t[0];
        return n && (e = ":not(" + e + ")"),
        1 === t.length && 1 === r.nodeType ? ce.find.matchesSelector(r, e) ? [r] : [] : ce.find.matches(e, ce.grep(t, function(e) {
            return 1 === e.nodeType
        }))
    }
    ,
    ce.fn.extend({
        find: function(e) {
            var t, n, r = this.length, i = this;
            if ("string" != typeof e)
                return this.pushStack(ce(e).filter(function() {
                    for (t = 0; t < r; t++)
                        if (ce.contains(i[t], this))
                            return !0
                }));
            for (n = this.pushStack([]),
            t = 0; t < r; t++)
                ce.find(e, i[t], n);
            return 1 < r ? ce.uniqueSort(n) : n
        },
        filter: function(e) {
            return this.pushStack(T(this, e || [], !1))
        },
        not: function(e) {
            return this.pushStack(T(this, e || [], !0))
        },
        is: function(e) {
            return !!T(this, "string" == typeof e && b.test(e) ? ce(e) : e || [], !1).length
        }
    });
    var k, S = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (ce.fn.init = function(e, t, n) {
        var r, i;
        if (!e)
            return this;
        if (n = n || k,
        "string" == typeof e) {
            if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : S.exec(e)) || !r[1] && t)
                return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            if (r[1]) {
                if (t = t instanceof ce ? t[0] : t,
                ce.merge(this, ce.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : C, !0)),
                w.test(r[1]) && ce.isPlainObject(t))
                    for (r in t)
                        v(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                return this
            }
            return (i = C.getElementById(r[2])) && (this[0] = i,
            this.length = 1),
            this
        }
        return e.nodeType ? (this[0] = e,
        this.length = 1,
        this) : v(e) ? void 0 !== n.ready ? n.ready(e) : e(ce) : ce.makeArray(e, this)
    }
    ).prototype = ce.fn,
    k = ce(C);
    var E = /^(?:parents|prev(?:Until|All))/
      , j = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    function A(e, t) {
        while ((e = e[t]) && 1 !== e.nodeType)
            ;
        return e
    }
    ce.fn.extend({
        has: function(e) {
            var t = ce(e, this)
              , n = t.length;
            return this.filter(function() {
                for (var e = 0; e < n; e++)
                    if (ce.contains(this, t[e]))
                        return !0
            })
        },
        closest: function(e, t) {
            var n, r = 0, i = this.length, o = [], a = "string" != typeof e && ce(e);
            if (!b.test(e))
                for (; r < i; r++)
                    for (n = this[r]; n && n !== t; n = n.parentNode)
                        if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && ce.find.matchesSelector(n, e))) {
                            o.push(n);
                            break
                        }
            return this.pushStack(1 < o.length ? ce.uniqueSort(o) : o)
        },
        index: function(e) {
            return e ? "string" == typeof e ? se.call(ce(e), this[0]) : se.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(e, t) {
            return this.pushStack(ce.uniqueSort(ce.merge(this.get(), ce(e, t))))
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }
    }),
    ce.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function(e) {
            return d(e, "parentNode")
        },
        parentsUntil: function(e, t, n) {
            return d(e, "parentNode", n)
        },
        next: function(e) {
            return A(e, "nextSibling")
        },
        prev: function(e) {
            return A(e, "previousSibling")
        },
        nextAll: function(e) {
            return d(e, "nextSibling")
        },
        prevAll: function(e) {
            return d(e, "previousSibling")
        },
        nextUntil: function(e, t, n) {
            return d(e, "nextSibling", n)
        },
        prevUntil: function(e, t, n) {
            return d(e, "previousSibling", n)
        },
        siblings: function(e) {
            return h((e.parentNode || {}).firstChild, e)
        },
        children: function(e) {
            return h(e.firstChild)
        },
        contents: function(e) {
            return null != e.contentDocument && r(e.contentDocument) ? e.contentDocument : (fe(e, "template") && (e = e.content || e),
            ce.merge([], e.childNodes))
        }
    }, function(r, i) {
        ce.fn[r] = function(e, t) {
            var n = ce.map(this, i, e);
            return "Until" !== r.slice(-5) && (t = e),
            t && "string" == typeof t && (n = ce.filter(t, n)),
            1 < this.length && (j[r] || ce.uniqueSort(n),
            E.test(r) && n.reverse()),
            this.pushStack(n)
        }
    });
    var D = /[^\x20\t\r\n\f]+/g;
    function N(e) {
        return e
    }
    function q(e) {
        throw e
    }
    function L(e, t, n, r) {
        var i;
        try {
            e && v(i = e.promise) ? i.call(e).done(t).fail(n) : e && v(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r))
        } catch (e) {
            n.apply(void 0, [e])
        }
    }
    ce.Callbacks = function(r) {
        var e, n;
        r = "string" == typeof r ? (e = r,
        n = {},
        ce.each(e.match(D) || [], function(e, t) {
            n[t] = !0
        }),
        n) : ce.extend({}, r);
        var i, t, o, a, s = [], u = [], l = -1, c = function() {
            for (a = a || r.once,
            o = i = !0; u.length; l = -1) {
                t = u.shift();
                while (++l < s.length)
                    !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length,
                    t = !1)
            }
            r.memory || (t = !1),
            i = !1,
            a && (s = t ? [] : "")
        }, f = {
            add: function() {
                return s && (t && !i && (l = s.length - 1,
                u.push(t)),
                function n(e) {
                    ce.each(e, function(e, t) {
                        v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== x(t) && n(t)
                    })
                }(arguments),
                t && !i && c()),
                this
            },
            remove: function() {
                return ce.each(arguments, function(e, t) {
                    var n;
                    while (-1 < (n = ce.inArray(t, s, n)))
                        s.splice(n, 1),
                        n <= l && l--
                }),
                this
            },
            has: function(e) {
                return e ? -1 < ce.inArray(e, s) : 0 < s.length
            },
            empty: function() {
                return s && (s = []),
                this
            },
            disable: function() {
                return a = u = [],
                s = t = "",
                this
            },
            disabled: function() {
                return !s
            },
            lock: function() {
                return a = u = [],
                t || i || (s = t = ""),
                this
            },
            locked: function() {
                return !!a
            },
            fireWith: function(e, t) {
                return a || (t = [e, (t = t || []).slice ? t.slice() : t],
                u.push(t),
                i || c()),
                this
            },
            fire: function() {
                return f.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!o
            }
        };
        return f
    }
    ,
    ce.extend({
        Deferred: function(e) {
            var o = [["notify", "progress", ce.Callbacks("memory"), ce.Callbacks("memory"), 2], ["resolve", "done", ce.Callbacks("once memory"), ce.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", ce.Callbacks("once memory"), ce.Callbacks("once memory"), 1, "rejected"]]
              , i = "pending"
              , a = {
                state: function() {
                    return i
                },
                always: function() {
                    return s.done(arguments).fail(arguments),
                    this
                },
                "catch": function(e) {
                    return a.then(null, e)
                },
                pipe: function() {
                    var i = arguments;
                    return ce.Deferred(function(r) {
                        ce.each(o, function(e, t) {
                            var n = v(i[t[4]]) && i[t[4]];
                            s[t[1]](function() {
                                var e = n && n.apply(this, arguments);
                                e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments)
                            })
                        }),
                        i = null
                    }).promise()
                },
                then: function(t, n, r) {
                    var u = 0;
                    function l(i, o, a, s) {
                        return function() {
                            var n = this
                              , r = arguments
                              , e = function() {
                                var e, t;
                                if (!(i < u)) {
                                    if ((e = a.apply(n, r)) === o.promise())
                                        throw new TypeError("Thenable self-resolution");
                                    t = e && ("object" == typeof e || "function" == typeof e) && e.then,
                                    v(t) ? s ? t.call(e, l(u, o, N, s), l(u, o, q, s)) : (u++,
                                    t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith))) : (a !== N && (n = void 0,
                                    r = [e]),
                                    (s || o.resolveWith)(n, r))
                                }
                            }
                              , t = s ? e : function() {
                                try {
                                    e()
                                } catch (e) {
                                    ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error),
                                    u <= i + 1 && (a !== q && (n = void 0,
                                    r = [e]),
                                    o.rejectWith(n, r))
                                }
                            }
                            ;
                            i ? t() : (ce.Deferred.getErrorHook ? t.error = ce.Deferred.getErrorHook() : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()),
                            ie.setTimeout(t))
                        }
                    }
                    return ce.Deferred(function(e) {
                        o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)),
                        o[1][3].add(l(0, e, v(t) ? t : N)),
                        o[2][3].add(l(0, e, v(n) ? n : q))
                    }).promise()
                },
                promise: function(e) {
                    return null != e ? ce.extend(e, a) : a
                }
            }
              , s = {};
            return ce.each(o, function(e, t) {
                var n = t[2]
                  , r = t[5];
                a[t[1]] = n.add,
                r && n.add(function() {
                    i = r
                }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock),
                n.add(t[3].fire),
                s[t[0]] = function() {
                    return s[t[0] + "With"](this === s ? void 0 : this, arguments),
                    this
                }
                ,
                s[t[0] + "With"] = n.fireWith
            }),
            a.promise(s),
            e && e.call(s, s),
            s
        },
        when: function(e) {
            var n = arguments.length
              , t = n
              , r = Array(t)
              , i = ae.call(arguments)
              , o = ce.Deferred()
              , a = function(t) {
                return function(e) {
                    r[t] = this,
                    i[t] = 1 < arguments.length ? ae.call(arguments) : e,
                    --n || o.resolveWith(r, i)
                }
            };
            if (n <= 1 && (L(e, o.done(a(t)).resolve, o.reject, !n),
            "pending" === o.state() || v(i[t] && i[t].then)))
                return o.then();
            while (t--)
                L(i[t], a(t), o.reject);
            return o.promise()
        }
    });
    var H = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    ce.Deferred.exceptionHook = function(e, t) {
        ie.console && ie.console.warn && e && H.test(e.name) && ie.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t)
    }
    ,
    ce.readyException = function(e) {
        ie.setTimeout(function() {
            throw e
        })
    }
    ;
    var O = ce.Deferred();
    function P() {
        C.removeEventListener("DOMContentLoaded", P),
        ie.removeEventListener("load", P),
        ce.ready()
    }
    ce.fn.ready = function(e) {
        return O.then(e)["catch"](function(e) {
            ce.readyException(e)
        }),
        this
    }
    ,
    ce.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(e) {
            (!0 === e ? --ce.readyWait : ce.isReady) || (ce.isReady = !0) !== e && 0 < --ce.readyWait || O.resolveWith(C, [ce])
        }
    }),
    ce.ready.then = O.then,
    "complete" === C.readyState || "loading" !== C.readyState && !C.documentElement.doScroll ? ie.setTimeout(ce.ready) : (C.addEventListener("DOMContentLoaded", P),
    ie.addEventListener("load", P));
    var M = function(e, t, n, r, i, o, a) {
        var s = 0
          , u = e.length
          , l = null == n;
        if ("object" === x(n))
            for (s in i = !0,
            n)
                M(e, t, s, n[s], !0, o, a);
        else if (void 0 !== r && (i = !0,
        v(r) || (a = !0),
        l && (a ? (t.call(e, r),
        t = null) : (l = t,
        t = function(e, t, n) {
            return l.call(ce(e), n)
        }
        )),
        t))
            for (; s < u; s++)
                t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
        return i ? e : l ? t.call(e) : u ? t(e[0], n) : o
    }
      , R = /^-ms-/
      , I = /-([a-z])/g;
    function W(e, t) {
        return t.toUpperCase()
    }
    function F(e) {
        return e.replace(R, "ms-").replace(I, W)
    }
    var $ = function(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
    };
    function B() {
        this.expando = ce.expando + B.uid++
    }
    B.uid = 1,
    B.prototype = {
        cache: function(e) {
            var t = e[this.expando];
            return t || (t = {},
            $(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))),
            t
        },
        set: function(e, t, n) {
            var r, i = this.cache(e);
            if ("string" == typeof t)
                i[F(t)] = n;
            else
                for (r in t)
                    i[F(r)] = t[r];
            return i
        },
        get: function(e, t) {
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][F(t)]
        },
        access: function(e, t, n) {
            return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n),
            void 0 !== n ? n : t)
        },
        remove: function(e, t) {
            var n, r = e[this.expando];
            if (void 0 !== r) {
                if (void 0 !== t) {
                    n = (t = Array.isArray(t) ? t.map(F) : (t = F(t))in r ? [t] : t.match(D) || []).length;
                    while (n--)
                        delete r[t[n]]
                }
                (void 0 === t || ce.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !ce.isEmptyObject(t)
        }
    };
    var _ = new B
      , z = new B
      , X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
      , U = /[A-Z]/g;
    function V(e, t, n) {
        var r, i;
        if (void 0 === n && 1 === e.nodeType)
            if (r = "data-" + t.replace(U, "-$&").toLowerCase(),
            "string" == typeof (n = e.getAttribute(r))) {
                try {
                    n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : X.test(i) ? JSON.parse(i) : i)
                } catch (e) {}
                z.set(e, t, n)
            } else
                n = void 0;
        return n
    }
    ce.extend({
        hasData: function(e) {
            return z.hasData(e) || _.hasData(e)
        },
        data: function(e, t, n) {
            return z.access(e, t, n)
        },
        removeData: function(e, t) {
            z.remove(e, t)
        },
        _data: function(e, t, n) {
            return _.access(e, t, n)
        },
        _removeData: function(e, t) {
            _.remove(e, t)
        }
    }),
    ce.fn.extend({
        data: function(n, e) {
            var t, r, i, o = this[0], a = o && o.attributes;
            if (void 0 === n) {
                if (this.length && (i = z.get(o),
                1 === o.nodeType && !_.get(o, "hasDataAttrs"))) {
                    t = a.length;
                    while (t--)
                        a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = F(r.slice(5)),
                        V(o, r, i[r]));
                    _.set(o, "hasDataAttrs", !0)
                }
                return i
            }
            return "object" == typeof n ? this.each(function() {
                z.set(this, n)
            }) : M(this, function(e) {
                var t;
                if (o && void 0 === e)
                    return void 0 !== (t = z.get(o, n)) ? t : void 0 !== (t = V(o, n)) ? t : void 0;
                this.each(function() {
                    z.set(this, n, e)
                })
            }, null, e, 1 < arguments.length, null, !0)
        },
        removeData: function(e) {
            return this.each(function() {
                z.remove(this, e)
            })
        }
    }),
    ce.extend({
        queue: function(e, t, n) {
            var r;
            if (e)
                return t = (t || "fx") + "queue",
                r = _.get(e, t),
                n && (!r || Array.isArray(n) ? r = _.access(e, t, ce.makeArray(n)) : r.push(n)),
                r || []
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = ce.queue(e, t)
              , r = n.length
              , i = n.shift()
              , o = ce._queueHooks(e, t);
            "inprogress" === i && (i = n.shift(),
            r--),
            i && ("fx" === t && n.unshift("inprogress"),
            delete o.stop,
            i.call(e, function() {
                ce.dequeue(e, t)
            }, o)),
            !r && o && o.empty.fire()
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return _.get(e, n) || _.access(e, n, {
                empty: ce.Callbacks("once memory").add(function() {
                    _.remove(e, [t + "queue", n])
                })
            })
        }
    }),
    ce.fn.extend({
        queue: function(t, n) {
            var e = 2;
            return "string" != typeof t && (n = t,
            t = "fx",
            e--),
            arguments.length < e ? ce.queue(this[0], t) : void 0 === n ? this : this.each(function() {
                var e = ce.queue(this, t, n);
                ce._queueHooks(this, t),
                "fx" === t && "inprogress" !== e[0] && ce.dequeue(this, t)
            })
        },
        dequeue: function(e) {
            return this.each(function() {
                ce.dequeue(this, e)
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(e, t) {
            var n, r = 1, i = ce.Deferred(), o = this, a = this.length, s = function() {
                --r || i.resolveWith(o, [o])
            };
            "string" != typeof e && (t = e,
            e = void 0),
            e = e || "fx";
            while (a--)
                (n = _.get(o[a], e + "queueHooks")) && n.empty && (r++,
                n.empty.add(s));
            return s(),
            i.promise(t)
        }
    });
    var G = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
      , Y = new RegExp("^(?:([+-])=|)(" + G + ")([a-z%]*)$","i")
      , Q = ["Top", "Right", "Bottom", "Left"]
      , J = C.documentElement
      , K = function(e) {
        return ce.contains(e.ownerDocument, e)
    }
      , Z = {
        composed: !0
    };
    J.getRootNode && (K = function(e) {
        return ce.contains(e.ownerDocument, e) || e.getRootNode(Z) === e.ownerDocument
    }
    );
    var ee = function(e, t) {
        return "none" === (e = t || e).style.display || "" === e.style.display && K(e) && "none" === ce.css(e, "display")
    };
    function te(e, t, n, r) {
        var i, o, a = 20, s = r ? function() {
            return r.cur()
        }
        : function() {
            return ce.css(e, t, "")
        }
        , u = s(), l = n && n[3] || (ce.cssNumber[t] ? "" : "px"), c = e.nodeType && (ce.cssNumber[t] || "px" !== l && +u) && Y.exec(ce.css(e, t));
        if (c && c[3] !== l) {
            u /= 2,
            l = l || c[3],
            c = +u || 1;
            while (a--)
                ce.style(e, t, c + l),
                (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0),
                c /= o;
            c *= 2,
            ce.style(e, t, c + l),
            n = n || []
        }
        return n && (c = +c || +u || 0,
        i = n[1] ? c + (n[1] + 1) * n[2] : +n[2],
        r && (r.unit = l,
        r.start = c,
        r.end = i)),
        i
    }
    var ne = {};
    function re(e, t) {
        for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)
            (r = e[c]).style && (n = r.style.display,
            t ? ("none" === n && (l[c] = _.get(r, "display") || null,
            l[c] || (r.style.display = "")),
            "" === r.style.display && ee(r) && (l[c] = (u = a = o = void 0,
            a = (i = r).ownerDocument,
            s = i.nodeName,
            (u = ne[s]) || (o = a.body.appendChild(a.createElement(s)),
            u = ce.css(o, "display"),
            o.parentNode.removeChild(o),
            "none" === u && (u = "block"),
            ne[s] = u)))) : "none" !== n && (l[c] = "none",
            _.set(r, "display", n)));
        for (c = 0; c < f; c++)
            null != l[c] && (e[c].style.display = l[c]);
        return e
    }
    ce.fn.extend({
        show: function() {
            return re(this, !0)
        },
        hide: function() {
            return re(this)
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                ee(this) ? ce(this).show() : ce(this).hide()
            })
        }
    });
    var xe, be, we = /^(?:checkbox|radio)$/i, Te = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, Ce = /^$|^module$|\/(?:java|ecma)script/i;
    xe = C.createDocumentFragment().appendChild(C.createElement("div")),
    (be = C.createElement("input")).setAttribute("type", "radio"),
    be.setAttribute("checked", "checked"),
    be.setAttribute("name", "t"),
    xe.appendChild(be),
    le.checkClone = xe.cloneNode(!0).cloneNode(!0).lastChild.checked,
    xe.innerHTML = "<textarea>x</textarea>",
    le.noCloneChecked = !!xe.cloneNode(!0).lastChild.defaultValue,
    xe.innerHTML = "<option></option>",
    le.option = !!xe.lastChild;
    var ke = {
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    function Se(e, t) {
        var n;
        return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [],
        void 0 === t || t && fe(e, t) ? ce.merge([e], n) : n
    }
    function Ee(e, t) {
        for (var n = 0, r = e.length; n < r; n++)
            _.set(e[n], "globalEval", !t || _.get(t[n], "globalEval"))
    }
    ke.tbody = ke.tfoot = ke.colgroup = ke.caption = ke.thead,
    ke.th = ke.td,
    le.option || (ke.optgroup = ke.option = [1, "<select multiple='multiple'>", "</select>"]);
    var je = /<|&#?\w+;/;
    function Ae(e, t, n, r, i) {
        for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)
            if ((o = e[d]) || 0 === o)
                if ("object" === x(o))
                    ce.merge(p, o.nodeType ? [o] : o);
                else if (je.test(o)) {
                    a = a || f.appendChild(t.createElement("div")),
                    s = (Te.exec(o) || ["", ""])[1].toLowerCase(),
                    u = ke[s] || ke._default,
                    a.innerHTML = u[1] + ce.htmlPrefilter(o) + u[2],
                    c = u[0];
                    while (c--)
                        a = a.lastChild;
                    ce.merge(p, a.childNodes),
                    (a = f.firstChild).textContent = ""
                } else
                    p.push(t.createTextNode(o));
        f.textContent = "",
        d = 0;
        while (o = p[d++])
            if (r && -1 < ce.inArray(o, r))
                i && i.push(o);
            else if (l = K(o),
            a = Se(f.appendChild(o), "script"),
            l && Ee(a),
            n) {
                c = 0;
                while (o = a[c++])
                    Ce.test(o.type || "") && n.push(o)
            }
        return f
    }
    var De = /^([^.]*)(?:\.(.+)|)/;
    function Ne() {
        return !0
    }
    function qe() {
        return !1
    }
    function Le(e, t, n, r, i, o) {
        var a, s;
        if ("object" == typeof t) {
            for (s in "string" != typeof n && (r = r || n,
            n = void 0),
            t)
                Le(e, s, n, r, t[s], o);
            return e
        }
        if (null == r && null == i ? (i = n,
        r = n = void 0) : null == i && ("string" == typeof n ? (i = r,
        r = void 0) : (i = r,
        r = n,
        n = void 0)),
        !1 === i)
            i = qe;
        else if (!i)
            return e;
        return 1 === o && (a = i,
        (i = function(e) {
            return ce().off(e),
            a.apply(this, arguments)
        }
        ).guid = a.guid || (a.guid = ce.guid++)),
        e.each(function() {
            ce.event.add(this, t, i, r, n)
        })
    }
    function He(e, r, t) {
        t ? (_.set(e, r, !1),
        ce.event.add(e, r, {
            namespace: !1,
            handler: function(e) {
                var t, n = _.get(this, r);
                if (1 & e.isTrigger && this[r]) {
                    if (n)
                        (ce.event.special[r] || {}).delegateType && e.stopPropagation();
                    else if (n = ae.call(arguments),
                    _.set(this, r, n),
                    this[r](),
                    t = _.get(this, r),
                    _.set(this, r, !1),
                    n !== t)
                        return e.stopImmediatePropagation(),
                        e.preventDefault(),
                        t
                } else
                    n && (_.set(this, r, ce.event.trigger(n[0], n.slice(1), this)),
                    e.stopPropagation(),
                    e.isImmediatePropagationStopped = Ne)
            }
        })) : void 0 === _.get(e, r) && ce.event.add(e, r, Ne)
    }
    ce.event = {
        global: {},
        add: function(t, e, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, v = _.get(t);
            if ($(t)) {
                n.handler && (n = (o = n).handler,
                i = o.selector),
                i && ce.find.matchesSelector(J, i),
                n.guid || (n.guid = ce.guid++),
                (u = v.events) || (u = v.events = Object.create(null)),
                (a = v.handle) || (a = v.handle = function(e) {
                    return "undefined" != typeof ce && ce.event.triggered !== e.type ? ce.event.dispatch.apply(t, arguments) : void 0
                }
                ),
                l = (e = (e || "").match(D) || [""]).length;
                while (l--)
                    d = g = (s = De.exec(e[l]) || [])[1],
                    h = (s[2] || "").split(".").sort(),
                    d && (f = ce.event.special[d] || {},
                    d = (i ? f.delegateType : f.bindType) || d,
                    f = ce.event.special[d] || {},
                    c = ce.extend({
                        type: d,
                        origType: g,
                        data: r,
                        handler: n,
                        guid: n.guid,
                        selector: i,
                        needsContext: i && ce.expr.match.needsContext.test(i),
                        namespace: h.join(".")
                    }, o),
                    (p = u[d]) || ((p = u[d] = []).delegateCount = 0,
                    f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)),
                    f.add && (f.add.call(t, c),
                    c.handler.guid || (c.handler.guid = n.guid)),
                    i ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                    ce.event.global[d] = !0)
            }
        },
        remove: function(e, t, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, v = _.hasData(e) && _.get(e);
            if (v && (u = v.events)) {
                l = (t = (t || "").match(D) || [""]).length;
                while (l--)
                    if (d = g = (s = De.exec(t[l]) || [])[1],
                    h = (s[2] || "").split(".").sort(),
                    d) {
                        f = ce.event.special[d] || {},
                        p = u[d = (r ? f.delegateType : f.bindType) || d] || [],
                        s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                        a = o = p.length;
                        while (o--)
                            c = p[o],
                            !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1),
                            c.selector && p.delegateCount--,
                            f.remove && f.remove.call(e, c));
                        a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, v.handle) || ce.removeEvent(e, d, v.handle),
                        delete u[d])
                    } else
                        for (d in u)
                            ce.event.remove(e, d + t[l], n, r, !0);
                ce.isEmptyObject(u) && _.remove(e, "handle events")
            }
        },
        dispatch: function(e) {
            var t, n, r, i, o, a, s = new Array(arguments.length), u = ce.event.fix(e), l = (_.get(this, "events") || Object.create(null))[u.type] || [], c = ce.event.special[u.type] || {};
            for (s[0] = u,
            t = 1; t < arguments.length; t++)
                s[t] = arguments[t];
            if (u.delegateTarget = this,
            !c.preDispatch || !1 !== c.preDispatch.call(this, u)) {
                a = ce.event.handlers.call(this, u, l),
                t = 0;
                while ((i = a[t++]) && !u.isPropagationStopped()) {
                    u.currentTarget = i.elem,
                    n = 0;
                    while ((o = i.handlers[n++]) && !u.isImmediatePropagationStopped())
                        u.rnamespace && !1 !== o.namespace && !u.rnamespace.test(o.namespace) || (u.handleObj = o,
                        u.data = o.data,
                        void 0 !== (r = ((ce.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (u.result = r) && (u.preventDefault(),
                        u.stopPropagation()))
                }
                return c.postDispatch && c.postDispatch.call(this, u),
                u.result
            }
        },
        handlers: function(e, t) {
            var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target;
            if (u && l.nodeType && !("click" === e.type && 1 <= e.button))
                for (; l !== this; l = l.parentNode || this)
                    if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                        for (o = [],
                        a = {},
                        n = 0; n < u; n++)
                            void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < ce(i, this).index(l) : ce.find(i, this, null, [l]).length),
                            a[i] && o.push(r);
                        o.length && s.push({
                            elem: l,
                            handlers: o
                        })
                    }
            return l = this,
            u < t.length && s.push({
                elem: l,
                handlers: t.slice(u)
            }),
            s
        },
        addProp: function(t, e) {
            Object.defineProperty(ce.Event.prototype, t, {
                enumerable: !0,
                configurable: !0,
                get: v(e) ? function() {
                    if (this.originalEvent)
                        return e(this.originalEvent)
                }
                : function() {
                    if (this.originalEvent)
                        return this.originalEvent[t]
                }
                ,
                set: function(e) {
                    Object.defineProperty(this, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    })
                }
            })
        },
        fix: function(e) {
            return e[ce.expando] ? e : new ce.Event(e)
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                setup: function(e) {
                    var t = this || e;
                    return we.test(t.type) && t.click && fe(t, "input") && He(t, "click", !0),
                    !1
                },
                trigger: function(e) {
                    var t = this || e;
                    return we.test(t.type) && t.click && fe(t, "input") && He(t, "click"),
                    !0
                },
                _default: function(e) {
                    var t = e.target;
                    return we.test(t.type) && t.click && fe(t, "input") && _.get(t, "click") || fe(t, "a")
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                }
            }
        }
    },
    ce.removeEvent = function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n)
    }
    ,
    ce.Event = function(e, t) {
        if (!(this instanceof ce.Event))
            return new ce.Event(e,t);
        e && e.type ? (this.originalEvent = e,
        this.type = e.type,
        this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ne : qe,
        this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target,
        this.currentTarget = e.currentTarget,
        this.relatedTarget = e.relatedTarget) : this.type = e,
        t && ce.extend(this, t),
        this.timeStamp = e && e.timeStamp || Date.now(),
        this[ce.expando] = !0
    }
    ,
    ce.Event.prototype = {
        constructor: ce.Event,
        isDefaultPrevented: qe,
        isPropagationStopped: qe,
        isImmediatePropagationStopped: qe,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = Ne,
            e && !this.isSimulated && e.preventDefault()
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = Ne,
            e && !this.isSimulated && e.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = Ne,
            e && !this.isSimulated && e.stopImmediatePropagation(),
            this.stopPropagation()
        }
    },
    ce.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        "char": !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: !0
    }, ce.event.addProp),
    ce.each({
        focus: "focusin",
        blur: "focusout"
    }, function(r, i) {
        function o(e) {
            if (C.documentMode) {
                var t = _.get(this, "handle")
                  , n = ce.event.fix(e);
                n.type = "focusin" === e.type ? "focus" : "blur",
                n.isSimulated = !0,
                t(e),
                n.target === n.currentTarget && t(n)
            } else
                ce.event.simulate(i, e.target, ce.event.fix(e))
        }
        ce.event.special[r] = {
            setup: function() {
                var e;
                if (He(this, r, !0),
                !C.documentMode)
                    return !1;
                (e = _.get(this, i)) || this.addEventListener(i, o),
                _.set(this, i, (e || 0) + 1)
            },
            trigger: function() {
                return He(this, r),
                !0
            },
            teardown: function() {
                var e;
                if (!C.documentMode)
                    return !1;
                (e = _.get(this, i) - 1) ? _.set(this, i, e) : (this.removeEventListener(i, o),
                _.remove(this, i))
            },
            _default: function(e) {
                return _.get(e.target, r)
            },
            delegateType: i
        },
        ce.event.special[i] = {
            setup: function() {
                var e = this.ownerDocument || this.document || this
                  , t = C.documentMode ? this : e
                  , n = _.get(t, i);
                n || (C.documentMode ? this.addEventListener(i, o) : e.addEventListener(r, o, !0)),
                _.set(t, i, (n || 0) + 1)
            },
            teardown: function() {
                var e = this.ownerDocument || this.document || this
                  , t = C.documentMode ? this : e
                  , n = _.get(t, i) - 1;
                n ? _.set(t, i, n) : (C.documentMode ? this.removeEventListener(i, o) : e.removeEventListener(r, o, !0),
                _.remove(t, i))
            }
        }
    }),
    ce.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, i) {
        ce.event.special[e] = {
            delegateType: i,
            bindType: i,
            handle: function(e) {
                var t, n = e.relatedTarget, r = e.handleObj;
                return n && (n === this || ce.contains(this, n)) || (e.type = r.origType,
                t = r.handler.apply(this, arguments),
                e.type = i),
                t
            }
        }
    }),
    ce.fn.extend({
        on: function(e, t, n, r) {
            return Le(this, e, t, n, r)
        },
        one: function(e, t, n, r) {
            return Le(this, e, t, n, r, 1)
        },
        off: function(e, t, n) {
            var r, i;
            if (e && e.preventDefault && e.handleObj)
                return r = e.handleObj,
                ce(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler),
                this;
            if ("object" == typeof e) {
                for (i in e)
                    this.off(i, t, e[i]);
                return this
            }
            return !1 !== t && "function" != typeof t || (n = t,
            t = void 0),
            !1 === n && (n = qe),
            this.each(function() {
                ce.event.remove(this, e, n, t)
            })
        }
    });
    var Oe = /<script|<style|<link/i
      , Pe = /checked\s*(?:[^=]|=\s*.checked.)/i
      , Me = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Re(e, t) {
        return fe(e, "table") && fe(11 !== t.nodeType ? t : t.firstChild, "tr") && ce(e).children("tbody")[0] || e
    }
    function Ie(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type,
        e
    }
    function We(e) {
        return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"),
        e
    }
    function Fe(e, t) {
        var n, r, i, o, a, s;
        if (1 === t.nodeType) {
            if (_.hasData(e) && (s = _.get(e).events))
                for (i in _.remove(t, "handle events"),
                s)
                    for (n = 0,
                    r = s[i].length; n < r; n++)
                        ce.event.add(t, i, s[i][n]);
            z.hasData(e) && (o = z.access(e),
            a = ce.extend({}, o),
            z.set(t, a))
        }
    }
    function $e(n, r, i, o) {
        r = g(r);
        var e, t, a, s, u, l, c = 0, f = n.length, p = f - 1, d = r[0], h = v(d);
        if (h || 1 < f && "string" == typeof d && !le.checkClone && Pe.test(d))
            return n.each(function(e) {
                var t = n.eq(e);
                h && (r[0] = d.call(this, e, t.html())),
                $e(t, r, i, o)
            });
        if (f && (t = (e = Ae(r, n[0].ownerDocument, !1, n, o)).firstChild,
        1 === e.childNodes.length && (e = t),
        t || o)) {
            for (s = (a = ce.map(Se(e, "script"), Ie)).length; c < f; c++)
                u = e,
                c !== p && (u = ce.clone(u, !0, !0),
                s && ce.merge(a, Se(u, "script"))),
                i.call(n[c], u, c);
            if (s)
                for (l = a[a.length - 1].ownerDocument,
                ce.map(a, We),
                c = 0; c < s; c++)
                    u = a[c],
                    Ce.test(u.type || "") && !_.access(u, "globalEval") && ce.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? ce._evalUrl && !u.noModule && ce._evalUrl(u.src, {
                        nonce: u.nonce || u.getAttribute("nonce")
                    }, l) : m(u.textContent.replace(Me, ""), u, l))
        }
        return n
    }
    function Be(e, t, n) {
        for (var r, i = t ? ce.filter(t, e) : e, o = 0; null != (r = i[o]); o++)
            n || 1 !== r.nodeType || ce.cleanData(Se(r)),
            r.parentNode && (n && K(r) && Ee(Se(r, "script")),
            r.parentNode.removeChild(r));
        return e
    }
    ce.extend({
        htmlPrefilter: function(e) {
            return e
        },
        clone: function(e, t, n) {
            var r, i, o, a, s, u, l, c = e.cloneNode(!0), f = K(e);
            if (!(le.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || ce.isXMLDoc(e)))
                for (a = Se(c),
                r = 0,
                i = (o = Se(e)).length; r < i; r++)
                    s = o[r],
                    u = a[r],
                    void 0,
                    "input" === (l = u.nodeName.toLowerCase()) && we.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue);
            if (t)
                if (n)
                    for (o = o || Se(e),
                    a = a || Se(c),
                    r = 0,
                    i = o.length; r < i; r++)
                        Fe(o[r], a[r]);
                else
                    Fe(e, c);
            return 0 < (a = Se(c, "script")).length && Ee(a, !f && Se(e, "script")),
            c
        },
        cleanData: function(e) {
            for (var t, n, r, i = ce.event.special, o = 0; void 0 !== (n = e[o]); o++)
                if ($(n)) {
                    if (t = n[_.expando]) {
                        if (t.events)
                            for (r in t.events)
                                i[r] ? ce.event.remove(n, r) : ce.removeEvent(n, r, t.handle);
                        n[_.expando] = void 0
                    }
                    n[z.expando] && (n[z.expando] = void 0)
                }
        }
    }),
    ce.fn.extend({
        detach: function(e) {
            return Be(this, e, !0)
        },
        remove: function(e) {
            return Be(this, e)
        },
        text: function(e) {
            return M(this, function(e) {
                return void 0 === e ? ce.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                })
            }, null, e, arguments.length)
        },
        append: function() {
            return $e(this, arguments, function(e) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Re(this, e).appendChild(e)
            })
        },
        prepend: function() {
            return $e(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = Re(this, e);
                    t.insertBefore(e, t.firstChild)
                }
            })
        },
        before: function() {
            return $e(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this)
            })
        },
        after: function() {
            return $e(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
            })
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++)
                1 === e.nodeType && (ce.cleanData(Se(e, !1)),
                e.textContent = "");
            return this
        },
        clone: function(e, t) {
            return e = null != e && e,
            t = null == t ? e : t,
            this.map(function() {
                return ce.clone(this, e, t)
            })
        },
        html: function(e) {
            return M(this, function(e) {
                var t = this[0] || {}
                  , n = 0
                  , r = this.length;
                if (void 0 === e && 1 === t.nodeType)
                    return t.innerHTML;
                if ("string" == typeof e && !Oe.test(e) && !ke[(Te.exec(e) || ["", ""])[1].toLowerCase()]) {
                    e = ce.htmlPrefilter(e);
                    try {
                        for (; n < r; n++)
                            1 === (t = this[n] || {}).nodeType && (ce.cleanData(Se(t, !1)),
                            t.innerHTML = e);
                        t = 0
                    } catch (e) {}
                }
                t && this.empty().append(e)
            }, null, e, arguments.length)
        },
        replaceWith: function() {
            var n = [];
            return $e(this, arguments, function(e) {
                var t = this.parentNode;
                ce.inArray(this, n) < 0 && (ce.cleanData(Se(this)),
                t && t.replaceChild(e, this))
            }, n)
        }
    }),
    ce.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, a) {
        ce.fn[e] = function(e) {
            for (var t, n = [], r = ce(e), i = r.length - 1, o = 0; o <= i; o++)
                t = o === i ? this : this.clone(!0),
                ce(r[o])[a](t),
                s.apply(n, t.get());
            return this.pushStack(n)
        }
    });
    var _e = new RegExp("^(" + G + ")(?!px)[a-z%]+$","i")
      , ze = /^--/
      , Xe = function(e) {
        var t = e.ownerDocument.defaultView;
        return t && t.opener || (t = ie),
        t.getComputedStyle(e)
    }
      , Ue = function(e, t, n) {
        var r, i, o = {};
        for (i in t)
            o[i] = e.style[i],
            e.style[i] = t[i];
        for (i in r = n.call(e),
        t)
            e.style[i] = o[i];
        return r
    }
      , Ve = new RegExp(Q.join("|"),"i");
    function Ge(e, t, n) {
        var r, i, o, a, s = ze.test(t), u = e.style;
        return (n = n || Xe(e)) && (a = n.getPropertyValue(t) || n[t],
        s && a && (a = a.replace(ve, "$1") || void 0),
        "" !== a || K(e) || (a = ce.style(e, t)),
        !le.pixelBoxStyles() && _e.test(a) && Ve.test(t) && (r = u.width,
        i = u.minWidth,
        o = u.maxWidth,
        u.minWidth = u.maxWidth = u.width = a,
        a = n.width,
        u.width = r,
        u.minWidth = i,
        u.maxWidth = o)),
        void 0 !== a ? a + "" : a
    }
    function Ye(e, t) {
        return {
            get: function() {
                if (!e())
                    return (this.get = t).apply(this, arguments);
                delete this.get
            }
        }
    }
    !function() {
        function e() {
            if (l) {
                u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",
                l.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",
                J.appendChild(u).appendChild(l);
                var e = ie.getComputedStyle(l);
                n = "1%" !== e.top,
                s = 12 === t(e.marginLeft),
                l.style.right = "60%",
                o = 36 === t(e.right),
                r = 36 === t(e.width),
                l.style.position = "absolute",
                i = 12 === t(l.offsetWidth / 3),
                J.removeChild(u),
                l = null
            }
        }
        function t(e) {
            return Math.round(parseFloat(e))
        }
        var n, r, i, o, a, s, u = C.createElement("div"), l = C.createElement("div");
        l.style && (l.style.backgroundClip = "content-box",
        l.cloneNode(!0).style.backgroundClip = "",
        le.clearCloneStyle = "content-box" === l.style.backgroundClip,
        ce.extend(le, {
            boxSizingReliable: function() {
                return e(),
                r
            },
            pixelBoxStyles: function() {
                return e(),
                o
            },
            pixelPosition: function() {
                return e(),
                n
            },
            reliableMarginLeft: function() {
                return e(),
                s
            },
            scrollboxSize: function() {
                return e(),
                i
            },
            reliableTrDimensions: function() {
                var e, t, n, r;
                return null == a && (e = C.createElement("table"),
                t = C.createElement("tr"),
                n = C.createElement("div"),
                e.style.cssText = "position:absolute;left:-11111px;border-collapse:separate",
                t.style.cssText = "box-sizing:content-box;border:1px solid",
                t.style.height = "1px",
                n.style.height = "9px",
                n.style.display = "block",
                J.appendChild(e).appendChild(t).appendChild(n),
                r = ie.getComputedStyle(t),
                a = parseInt(r.height, 10) + parseInt(r.borderTopWidth, 10) + parseInt(r.borderBottomWidth, 10) === t.offsetHeight,
                J.removeChild(e)),
                a
            }
        }))
    }();
    var Qe = ["Webkit", "Moz", "ms"]
      , Je = C.createElement("div").style
      , Ke = {};
    function Ze(e) {
        var t = ce.cssProps[e] || Ke[e];
        return t || (e in Je ? e : Ke[e] = function(e) {
            var t = e[0].toUpperCase() + e.slice(1)
              , n = Qe.length;
            while (n--)
                if ((e = Qe[n] + t)in Je)
                    return e
        }(e) || e)
    }
    var et = /^(none|table(?!-c[ea]).+)/
      , tt = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }
      , nt = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function rt(e, t, n) {
        var r = Y.exec(t);
        return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t
    }
    function it(e, t, n, r, i, o) {
        var a = "width" === t ? 1 : 0
          , s = 0
          , u = 0
          , l = 0;
        if (n === (r ? "border" : "content"))
            return 0;
        for (; a < 4; a += 2)
            "margin" === n && (l += ce.css(e, n + Q[a], !0, i)),
            r ? ("content" === n && (u -= ce.css(e, "padding" + Q[a], !0, i)),
            "margin" !== n && (u -= ce.css(e, "border" + Q[a] + "Width", !0, i))) : (u += ce.css(e, "padding" + Q[a], !0, i),
            "padding" !== n ? u += ce.css(e, "border" + Q[a] + "Width", !0, i) : s += ce.css(e, "border" + Q[a] + "Width", !0, i));
        return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0),
        u + l
    }
    function ot(e, t, n) {
        var r = Xe(e)
          , i = (!le.boxSizingReliable() || n) && "border-box" === ce.css(e, "boxSizing", !1, r)
          , o = i
          , a = Ge(e, t, r)
          , s = "offset" + t[0].toUpperCase() + t.slice(1);
        if (_e.test(a)) {
            if (!n)
                return a;
            a = "auto"
        }
        return (!le.boxSizingReliable() && i || !le.reliableTrDimensions() && fe(e, "tr") || "auto" === a || !parseFloat(a) && "inline" === ce.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === ce.css(e, "boxSizing", !1, r),
        (o = s in e) && (a = e[s])),
        (a = parseFloat(a) || 0) + it(e, t, n || (i ? "border" : "content"), o, r, a) + "px"
    }
    function at(e, t, n, r, i) {
        return new at.prototype.init(e,t,n,r,i)
    }
    ce.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = Ge(e, "opacity");
                        return "" === n ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageSlice: !0,
            columnCount: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            scale: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0
        },
        cssProps: {},
        style: function(e, t, n, r) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var i, o, a, s = F(t), u = ze.test(t), l = e.style;
                if (u || (t = Ze(s)),
                a = ce.cssHooks[t] || ce.cssHooks[s],
                void 0 === n)
                    return a && "get"in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                "string" === (o = typeof n) && (i = Y.exec(n)) && i[1] && (n = te(e, t, i),
                o = "number"),
                null != n && n == n && ("number" !== o || u || (n += i && i[3] || (ce.cssNumber[s] ? "" : "px")),
                le.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"),
                a && "set"in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n))
            }
        },
        css: function(e, t, n, r) {
            var i, o, a, s = F(t);
            return ze.test(t) || (t = Ze(s)),
            (a = ce.cssHooks[t] || ce.cssHooks[s]) && "get"in a && (i = a.get(e, !0, n)),
            void 0 === i && (i = Ge(e, t, r)),
            "normal" === i && t in nt && (i = nt[t]),
            "" === n || n ? (o = parseFloat(i),
            !0 === n || isFinite(o) ? o || 0 : i) : i
        }
    }),
    ce.each(["height", "width"], function(e, u) {
        ce.cssHooks[u] = {
            get: function(e, t, n) {
                if (t)
                    return !et.test(ce.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? ot(e, u, n) : Ue(e, tt, function() {
                        return ot(e, u, n)
                    })
            },
            set: function(e, t, n) {
                var r, i = Xe(e), o = !le.scrollboxSize() && "absolute" === i.position, a = (o || n) && "border-box" === ce.css(e, "boxSizing", !1, i), s = n ? it(e, u, n, a, i) : 0;
                return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - it(e, u, "border", !1, i) - .5)),
                s && (r = Y.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t,
                t = ce.css(e, u)),
                rt(0, t, s)
            }
        }
    }),
    ce.cssHooks.marginLeft = Ye(le.reliableMarginLeft, function(e, t) {
        if (t)
            return (parseFloat(Ge(e, "marginLeft")) || e.getBoundingClientRect().left - Ue(e, {
                marginLeft: 0
            }, function() {
                return e.getBoundingClientRect().left
            })) + "px"
    }),
    ce.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(i, o) {
        ce.cssHooks[i + o] = {
            expand: function(e) {
                for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++)
                    n[i + Q[t] + o] = r[t] || r[t - 2] || r[0];
                return n
            }
        },
        "margin" !== i && (ce.cssHooks[i + o].set = rt)
    }),
    ce.fn.extend({
        css: function(e, t) {
            return M(this, function(e, t, n) {
                var r, i, o = {}, a = 0;
                if (Array.isArray(t)) {
                    for (r = Xe(e),
                    i = t.length; a < i; a++)
                        o[t[a]] = ce.css(e, t[a], !1, r);
                    return o
                }
                return void 0 !== n ? ce.style(e, t, n) : ce.css(e, t)
            }, e, t, 1 < arguments.length)
        }
    }),
    ((ce.Tween = at).prototype = {
        constructor: at,
        init: function(e, t, n, r, i, o) {
            this.elem = e,
            this.prop = n,
            this.easing = i || ce.easing._default,
            this.options = t,
            this.start = this.now = this.cur(),
            this.end = r,
            this.unit = o || (ce.cssNumber[n] ? "" : "px")
        },
        cur: function() {
            var e = at.propHooks[this.prop];
            return e && e.get ? e.get(this) : at.propHooks._default.get(this)
        },
        run: function(e) {
            var t, n = at.propHooks[this.prop];
            return this.options.duration ? this.pos = t = ce.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
            this.now = (this.end - this.start) * t + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            n && n.set ? n.set(this) : at.propHooks._default.set(this),
            this
        }
    }).init.prototype = at.prototype,
    (at.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = ce.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0
            },
            set: function(e) {
                ce.fx.step[e.prop] ? ce.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !ce.cssHooks[e.prop] && null == e.elem.style[Ze(e.prop)] ? e.elem[e.prop] = e.now : ce.style(e.elem, e.prop, e.now + e.unit)
            }
        }
    }).scrollTop = at.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
        }
    },
    ce.easing = {
        linear: function(e) {
            return e
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2
        },
        _default: "swing"
    },
    ce.fx = at.prototype.init,
    ce.fx.step = {};
    var st, ut, lt, ct, ft = /^(?:toggle|show|hide)$/, pt = /queueHooks$/;
    function dt() {
        ut && (!1 === C.hidden && ie.requestAnimationFrame ? ie.requestAnimationFrame(dt) : ie.setTimeout(dt, ce.fx.interval),
        ce.fx.tick())
    }
    function ht() {
        return ie.setTimeout(function() {
            st = void 0
        }),
        st = Date.now()
    }
    function gt(e, t) {
        var n, r = 0, i = {
            height: e
        };
        for (t = t ? 1 : 0; r < 4; r += 2 - t)
            i["margin" + (n = Q[r])] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e),
        i
    }
    function vt(e, t, n) {
        for (var r, i = (yt.tweeners[t] || []).concat(yt.tweeners["*"]), o = 0, a = i.length; o < a; o++)
            if (r = i[o].call(n, t, e))
                return r
    }
    function yt(o, e, t) {
        var n, a, r = 0, i = yt.prefilters.length, s = ce.Deferred().always(function() {
            delete u.elem
        }), u = function() {
            if (a)
                return !1;
            for (var e = st || ht(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++)
                l.tweens[r].run(n);
            return s.notifyWith(o, [l, n, t]),
            n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]),
            s.resolveWith(o, [l]),
            !1)
        }, l = s.promise({
            elem: o,
            props: ce.extend({}, e),
            opts: ce.extend(!0, {
                specialEasing: {},
                easing: ce.easing._default
            }, t),
            originalProperties: e,
            originalOptions: t,
            startTime: st || ht(),
            duration: t.duration,
            tweens: [],
            createTween: function(e, t) {
                var n = ce.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing);
                return l.tweens.push(n),
                n
            },
            stop: function(e) {
                var t = 0
                  , n = e ? l.tweens.length : 0;
                if (a)
                    return this;
                for (a = !0; t < n; t++)
                    l.tweens[t].run(1);
                return e ? (s.notifyWith(o, [l, 1, 0]),
                s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]),
                this
            }
        }), c = l.props;
        for (!function(e, t) {
            var n, r, i, o, a;
            for (n in e)
                if (i = t[r = F(n)],
                o = e[n],
                Array.isArray(o) && (i = o[1],
                o = e[n] = o[0]),
                n !== r && (e[r] = o,
                delete e[n]),
                (a = ce.cssHooks[r]) && "expand"in a)
                    for (n in o = a.expand(o),
                    delete e[r],
                    o)
                        n in e || (e[n] = o[n],
                        t[n] = i);
                else
                    t[r] = i
        }(c, l.opts.specialEasing); r < i; r++)
            if (n = yt.prefilters[r].call(l, o, c, l.opts))
                return v(n.stop) && (ce._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)),
                n;
        return ce.map(c, vt, l),
        v(l.opts.start) && l.opts.start.call(o, l),
        l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always),
        ce.fx.timer(ce.extend(u, {
            elem: o,
            anim: l,
            queue: l.opts.queue
        })),
        l
    }
    ce.Animation = ce.extend(yt, {
        tweeners: {
            "*": [function(e, t) {
                var n = this.createTween(e, t);
                return te(n.elem, e, Y.exec(t), n),
                n
            }
            ]
        },
        tweener: function(e, t) {
            v(e) ? (t = e,
            e = ["*"]) : e = e.match(D);
            for (var n, r = 0, i = e.length; r < i; r++)
                n = e[r],
                yt.tweeners[n] = yt.tweeners[n] || [],
                yt.tweeners[n].unshift(t)
        },
        prefilters: [function(e, t, n) {
            var r, i, o, a, s, u, l, c, f = "width"in t || "height"in t, p = this, d = {}, h = e.style, g = e.nodeType && ee(e), v = _.get(e, "fxshow");
            for (r in n.queue || (null == (a = ce._queueHooks(e, "fx")).unqueued && (a.unqueued = 0,
            s = a.empty.fire,
            a.empty.fire = function() {
                a.unqueued || s()
            }
            ),
            a.unqueued++,
            p.always(function() {
                p.always(function() {
                    a.unqueued--,
                    ce.queue(e, "fx").length || a.empty.fire()
                })
            })),
            t)
                if (i = t[r],
                ft.test(i)) {
                    if (delete t[r],
                    o = o || "toggle" === i,
                    i === (g ? "hide" : "show")) {
                        if ("show" !== i || !v || void 0 === v[r])
                            continue;
                        g = !0
                    }
                    d[r] = v && v[r] || ce.style(e, r)
                }
            if ((u = !ce.isEmptyObject(t)) || !ce.isEmptyObject(d))
                for (r in f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY],
                null == (l = v && v.display) && (l = _.get(e, "display")),
                "none" === (c = ce.css(e, "display")) && (l ? c = l : (re([e], !0),
                l = e.style.display || l,
                c = ce.css(e, "display"),
                re([e]))),
                ("inline" === c || "inline-block" === c && null != l) && "none" === ce.css(e, "float") && (u || (p.done(function() {
                    h.display = l
                }),
                null == l && (c = h.display,
                l = "none" === c ? "" : c)),
                h.display = "inline-block")),
                n.overflow && (h.overflow = "hidden",
                p.always(function() {
                    h.overflow = n.overflow[0],
                    h.overflowX = n.overflow[1],
                    h.overflowY = n.overflow[2]
                })),
                u = !1,
                d)
                    u || (v ? "hidden"in v && (g = v.hidden) : v = _.access(e, "fxshow", {
                        display: l
                    }),
                    o && (v.hidden = !g),
                    g && re([e], !0),
                    p.done(function() {
                        for (r in g || re([e]),
                        _.remove(e, "fxshow"),
                        d)
                            ce.style(e, r, d[r])
                    })),
                    u = vt(g ? v[r] : 0, r, p),
                    r in v || (v[r] = u.start,
                    g && (u.end = u.start,
                    u.start = 0))
        }
        ],
        prefilter: function(e, t) {
            t ? yt.prefilters.unshift(e) : yt.prefilters.push(e)
        }
    }),
    ce.speed = function(e, t, n) {
        var r = e && "object" == typeof e ? ce.extend({}, e) : {
            complete: n || !n && t || v(e) && e,
            duration: e,
            easing: n && t || t && !v(t) && t
        };
        return ce.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in ce.fx.speeds ? r.duration = ce.fx.speeds[r.duration] : r.duration = ce.fx.speeds._default),
        null != r.queue && !0 !== r.queue || (r.queue = "fx"),
        r.old = r.complete,
        r.complete = function() {
            v(r.old) && r.old.call(this),
            r.queue && ce.dequeue(this, r.queue)
        }
        ,
        r
    }
    ,
    ce.fn.extend({
        fadeTo: function(e, t, n, r) {
            return this.filter(ee).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, r)
        },
        animate: function(t, e, n, r) {
            var i = ce.isEmptyObject(t)
              , o = ce.speed(e, n, r)
              , a = function() {
                var e = yt(this, ce.extend({}, t), o);
                (i || _.get(this, "finish")) && e.stop(!0)
            };
            return a.finish = a,
            i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a)
        },
        stop: function(i, e, o) {
            var a = function(e) {
                var t = e.stop;
                delete e.stop,
                t(o)
            };
            return "string" != typeof i && (o = e,
            e = i,
            i = void 0),
            e && this.queue(i || "fx", []),
            this.each(function() {
                var e = !0
                  , t = null != i && i + "queueHooks"
                  , n = ce.timers
                  , r = _.get(this);
                if (t)
                    r[t] && r[t].stop && a(r[t]);
                else
                    for (t in r)
                        r[t] && r[t].stop && pt.test(t) && a(r[t]);
                for (t = n.length; t--; )
                    n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o),
                    e = !1,
                    n.splice(t, 1));
                !e && o || ce.dequeue(this, i)
            })
        },
        finish: function(a) {
            return !1 !== a && (a = a || "fx"),
            this.each(function() {
                var e, t = _.get(this), n = t[a + "queue"], r = t[a + "queueHooks"], i = ce.timers, o = n ? n.length : 0;
                for (t.finish = !0,
                ce.queue(this, a, []),
                r && r.stop && r.stop.call(this, !0),
                e = i.length; e--; )
                    i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0),
                    i.splice(e, 1));
                for (e = 0; e < o; e++)
                    n[e] && n[e].finish && n[e].finish.call(this);
                delete t.finish
            })
        }
    }),
    ce.each(["toggle", "show", "hide"], function(e, r) {
        var i = ce.fn[r];
        ce.fn[r] = function(e, t, n) {
            return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(gt(r, !0), e, t, n)
        }
    }),
    ce.each({
        slideDown: gt("show"),
        slideUp: gt("hide"),
        slideToggle: gt("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, r) {
        ce.fn[e] = function(e, t, n) {
            return this.animate(r, e, t, n)
        }
    }),
    ce.timers = [],
    ce.fx.tick = function() {
        var e, t = 0, n = ce.timers;
        for (st = Date.now(); t < n.length; t++)
            (e = n[t])() || n[t] !== e || n.splice(t--, 1);
        n.length || ce.fx.stop(),
        st = void 0
    }
    ,
    ce.fx.timer = function(e) {
        ce.timers.push(e),
        ce.fx.start()
    }
    ,
    ce.fx.interval = 13,
    ce.fx.start = function() {
        ut || (ut = !0,
        dt())
    }
    ,
    ce.fx.stop = function() {
        ut = null
    }
    ,
    ce.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    ce.fn.delay = function(r, e) {
        return r = ce.fx && ce.fx.speeds[r] || r,
        e = e || "fx",
        this.queue(e, function(e, t) {
            var n = ie.setTimeout(e, r);
            t.stop = function() {
                ie.clearTimeout(n)
            }
        })
    }
    ,
    lt = C.createElement("input"),
    ct = C.createElement("select").appendChild(C.createElement("option")),
    lt.type = "checkbox",
    le.checkOn = "" !== lt.value,
    le.optSelected = ct.selected,
    (lt = C.createElement("input")).value = "t",
    lt.type = "radio",
    le.radioValue = "t" === lt.value;
    var mt, xt = ce.expr.attrHandle;
    ce.fn.extend({
        attr: function(e, t) {
            return M(this, ce.attr, e, t, 1 < arguments.length)
        },
        removeAttr: function(e) {
            return this.each(function() {
                ce.removeAttr(this, e)
            })
        }
    }),
    ce.extend({
        attr: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
                return "undefined" == typeof e.getAttribute ? ce.prop(e, t, n) : (1 === o && ce.isXMLDoc(e) || (i = ce.attrHooks[t.toLowerCase()] || (ce.expr.match.bool.test(t) ? mt : void 0)),
                void 0 !== n ? null === n ? void ce.removeAttr(e, t) : i && "set"in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""),
                n) : i && "get"in i && null !== (r = i.get(e, t)) ? r : null == (r = ce.find.attr(e, t)) ? void 0 : r)
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!le.radioValue && "radio" === t && fe(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t),
                        n && (e.value = n),
                        t
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var n, r = 0, i = t && t.match(D);
            if (i && 1 === e.nodeType)
                while (n = i[r++])
                    e.removeAttribute(n)
        }
    }),
    mt = {
        set: function(e, t, n) {
            return !1 === t ? ce.removeAttr(e, n) : e.setAttribute(n, n),
            n
        }
    },
    ce.each(ce.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var a = xt[t] || ce.find.attr;
        xt[t] = function(e, t, n) {
            var r, i, o = t.toLowerCase();
            return n || (i = xt[o],
            xt[o] = r,
            r = null != a(e, t, n) ? o : null,
            xt[o] = i),
            r
        }
    });
    var bt = /^(?:input|select|textarea|button)$/i
      , wt = /^(?:a|area)$/i;
    function Tt(e) {
        return (e.match(D) || []).join(" ")
    }
    function Ct(e) {
        return e.getAttribute && e.getAttribute("class") || ""
    }
    function kt(e) {
        return Array.isArray(e) ? e : "string" == typeof e && e.match(D) || []
    }
    ce.fn.extend({
        prop: function(e, t) {
            return M(this, ce.prop, e, t, 1 < arguments.length)
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[ce.propFix[e] || e]
            })
        }
    }),
    ce.extend({
        prop: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o)
                return 1 === o && ce.isXMLDoc(e) || (t = ce.propFix[t] || t,
                i = ce.propHooks[t]),
                void 0 !== n ? i && "set"in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get"in i && null !== (r = i.get(e, t)) ? r : e[t]
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = ce.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : bt.test(e.nodeName) || wt.test(e.nodeName) && e.href ? 0 : -1
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    }),
    le.optSelected || (ce.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex,
            null
        },
        set: function(e) {
            var t = e.parentNode;
            t && (t.selectedIndex,
            t.parentNode && t.parentNode.selectedIndex)
        }
    }),
    ce.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        ce.propFix[this.toLowerCase()] = this
    }),
    ce.fn.extend({
        addClass: function(t) {
            var e, n, r, i, o, a;
            return v(t) ? this.each(function(e) {
                ce(this).addClass(t.call(this, e, Ct(this)))
            }) : (e = kt(t)).length ? this.each(function() {
                if (r = Ct(this),
                n = 1 === this.nodeType && " " + Tt(r) + " ") {
                    for (o = 0; o < e.length; o++)
                        i = e[o],
                        n.indexOf(" " + i + " ") < 0 && (n += i + " ");
                    a = Tt(n),
                    r !== a && this.setAttribute("class", a)
                }
            }) : this
        },
        removeClass: function(t) {
            var e, n, r, i, o, a;
            return v(t) ? this.each(function(e) {
                ce(this).removeClass(t.call(this, e, Ct(this)))
            }) : arguments.length ? (e = kt(t)).length ? this.each(function() {
                if (r = Ct(this),
                n = 1 === this.nodeType && " " + Tt(r) + " ") {
                    for (o = 0; o < e.length; o++) {
                        i = e[o];
                        while (-1 < n.indexOf(" " + i + " "))
                            n = n.replace(" " + i + " ", " ")
                    }
                    a = Tt(n),
                    r !== a && this.setAttribute("class", a)
                }
            }) : this : this.attr("class", "")
        },
        toggleClass: function(t, n) {
            var e, r, i, o, a = typeof t, s = "string" === a || Array.isArray(t);
            return v(t) ? this.each(function(e) {
                ce(this).toggleClass(t.call(this, e, Ct(this), n), n)
            }) : "boolean" == typeof n && s ? n ? this.addClass(t) : this.removeClass(t) : (e = kt(t),
            this.each(function() {
                if (s)
                    for (o = ce(this),
                    i = 0; i < e.length; i++)
                        r = e[i],
                        o.hasClass(r) ? o.removeClass(r) : o.addClass(r);
                else
                    void 0 !== t && "boolean" !== a || ((r = Ct(this)) && _.set(this, "__className__", r),
                    this.setAttribute && this.setAttribute("class", r || !1 === t ? "" : _.get(this, "__className__") || ""))
            }))
        },
        hasClass: function(e) {
            var t, n, r = 0;
            t = " " + e + " ";
            while (n = this[r++])
                if (1 === n.nodeType && -1 < (" " + Tt(Ct(n)) + " ").indexOf(t))
                    return !0;
            return !1
        }
    });
    var St = /\r/g;
    ce.fn.extend({
        val: function(n) {
            var r, e, i, t = this[0];
            return arguments.length ? (i = v(n),
            this.each(function(e) {
                var t;
                1 === this.nodeType && (null == (t = i ? n.call(this, e, ce(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = ce.map(t, function(e) {
                    return null == e ? "" : e + ""
                })),
                (r = ce.valHooks[this.type] || ce.valHooks[this.nodeName.toLowerCase()]) && "set"in r && void 0 !== r.set(this, t, "value") || (this.value = t))
            })) : t ? (r = ce.valHooks[t.type] || ce.valHooks[t.nodeName.toLowerCase()]) && "get"in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof (e = t.value) ? e.replace(St, "") : null == e ? "" : e : void 0
        }
    }),
    ce.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = ce.find.attr(e, "value");
                    return null != t ? t : Tt(ce.text(e))
                }
            },
            select: {
                get: function(e) {
                    var t, n, r, i = e.options, o = e.selectedIndex, a = "select-one" === e.type, s = a ? null : [], u = a ? o + 1 : i.length;
                    for (r = o < 0 ? u : a ? o : 0; r < u; r++)
                        if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !fe(n.parentNode, "optgroup"))) {
                            if (t = ce(n).val(),
                            a)
                                return t;
                            s.push(t)
                        }
                    return s
                },
                set: function(e, t) {
                    var n, r, i = e.options, o = ce.makeArray(t), a = i.length;
                    while (a--)
                        ((r = i[a]).selected = -1 < ce.inArray(ce.valHooks.option.get(r), o)) && (n = !0);
                    return n || (e.selectedIndex = -1),
                    o
                }
            }
        }
    }),
    ce.each(["radio", "checkbox"], function() {
        ce.valHooks[this] = {
            set: function(e, t) {
                if (Array.isArray(t))
                    return e.checked = -1 < ce.inArray(ce(e).val(), t)
            }
        },
        le.checkOn || (ce.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value
        }
        )
    });
    var Et = ie.location
      , jt = {
        guid: Date.now()
    }
      , At = /\?/;
    ce.parseXML = function(e) {
        var t, n;
        if (!e || "string" != typeof e)
            return null;
        try {
            t = (new ie.DOMParser).parseFromString(e, "text/xml")
        } catch (e) {}
        return n = t && t.getElementsByTagName("parsererror")[0],
        t && !n || ce.error("Invalid XML: " + (n ? ce.map(n.childNodes, function(e) {
            return e.textContent
        }).join("\n") : e)),
        t
    }
    ;
    var Dt = /^(?:focusinfocus|focusoutblur)$/
      , Nt = function(e) {
        e.stopPropagation()
    };
    ce.extend(ce.event, {
        trigger: function(e, t, n, r) {
            var i, o, a, s, u, l, c, f, p = [n || C], d = ue.call(e, "type") ? e.type : e, h = ue.call(e, "namespace") ? e.namespace.split(".") : [];
            if (o = f = a = n = n || C,
            3 !== n.nodeType && 8 !== n.nodeType && !Dt.test(d + ce.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(),
            h.sort()),
            u = d.indexOf(":") < 0 && "on" + d,
            (e = e[ce.expando] ? e : new ce.Event(d,"object" == typeof e && e)).isTrigger = r ? 2 : 3,
            e.namespace = h.join("."),
            e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
            e.result = void 0,
            e.target || (e.target = n),
            t = null == t ? [e] : ce.makeArray(t, [e]),
            c = ce.event.special[d] || {},
            r || !c.trigger || !1 !== c.trigger.apply(n, t))) {
                if (!r && !c.noBubble && !y(n)) {
                    for (s = c.delegateType || d,
                    Dt.test(s + d) || (o = o.parentNode); o; o = o.parentNode)
                        p.push(o),
                        a = o;
                    a === (n.ownerDocument || C) && p.push(a.defaultView || a.parentWindow || ie)
                }
                i = 0;
                while ((o = p[i++]) && !e.isPropagationStopped())
                    f = o,
                    e.type = 1 < i ? s : c.bindType || d,
                    (l = (_.get(o, "events") || Object.create(null))[e.type] && _.get(o, "handle")) && l.apply(o, t),
                    (l = u && o[u]) && l.apply && $(o) && (e.result = l.apply(o, t),
                    !1 === e.result && e.preventDefault());
                return e.type = d,
                r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !$(n) || u && v(n[d]) && !y(n) && ((a = n[u]) && (n[u] = null),
                ce.event.triggered = d,
                e.isPropagationStopped() && f.addEventListener(d, Nt),
                n[d](),
                e.isPropagationStopped() && f.removeEventListener(d, Nt),
                ce.event.triggered = void 0,
                a && (n[u] = a)),
                e.result
            }
        },
        simulate: function(e, t, n) {
            var r = ce.extend(new ce.Event, n, {
                type: e,
                isSimulated: !0
            });
            ce.event.trigger(r, null, t)
        }
    }),
    ce.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                ce.event.trigger(e, t, this)
            })
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n)
                return ce.event.trigger(e, t, n, !0)
        }
    });
    var qt = /\[\]$/
      , Lt = /\r?\n/g
      , Ht = /^(?:submit|button|image|reset|file)$/i
      , Ot = /^(?:input|select|textarea|keygen)/i;
    function Pt(n, e, r, i) {
        var t;
        if (Array.isArray(e))
            ce.each(e, function(e, t) {
                r || qt.test(n) ? i(n, t) : Pt(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, i)
            });
        else if (r || "object" !== x(e))
            i(n, e);
        else
            for (t in e)
                Pt(n + "[" + t + "]", e[t], r, i)
    }
    ce.param = function(e, t) {
        var n, r = [], i = function(e, t) {
            var n = v(t) ? t() : t;
            r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n)
        };
        if (null == e)
            return "";
        if (Array.isArray(e) || e.jquery && !ce.isPlainObject(e))
            ce.each(e, function() {
                i(this.name, this.value)
            });
        else
            for (n in e)
                Pt(n, e[n], t, i);
        return r.join("&")
    }
    ,
    ce.fn.extend({
        serialize: function() {
            return ce.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var e = ce.prop(this, "elements");
                return e ? ce.makeArray(e) : this
            }).filter(function() {
                var e = this.type;
                return this.name && !ce(this).is(":disabled") && Ot.test(this.nodeName) && !Ht.test(e) && (this.checked || !we.test(e))
            }).map(function(e, t) {
                var n = ce(this).val();
                return null == n ? null : Array.isArray(n) ? ce.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(Lt, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace(Lt, "\r\n")
                }
            }).get()
        }
    });
    var Mt = /%20/g
      , Rt = /#.*$/
      , It = /([?&])_=[^&]*/
      , Wt = /^(.*?):[ \t]*([^\r\n]*)$/gm
      , Ft = /^(?:GET|HEAD)$/
      , $t = /^\/\//
      , Bt = {}
      , _t = {}
      , zt = "*/".concat("*")
      , Xt = C.createElement("a");
    function Ut(o) {
        return function(e, t) {
            "string" != typeof e && (t = e,
            e = "*");
            var n, r = 0, i = e.toLowerCase().match(D) || [];
            if (v(t))
                while (n = i[r++])
                    "+" === n[0] ? (n = n.slice(1) || "*",
                    (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t)
        }
    }
    function Vt(t, i, o, a) {
        var s = {}
          , u = t === _t;
        function l(e) {
            var r;
            return s[e] = !0,
            ce.each(t[e] || [], function(e, t) {
                var n = t(i, o, a);
                return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n),
                l(n),
                !1)
            }),
            r
        }
        return l(i.dataTypes[0]) || !s["*"] && l("*")
    }
    function Gt(e, t) {
        var n, r, i = ce.ajaxSettings.flatOptions || {};
        for (n in t)
            void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
        return r && ce.extend(!0, e, r),
        e
    }
    Xt.href = Et.href,
    ce.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Et.href,
            type: "GET",
            isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": zt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": ce.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? Gt(Gt(e, ce.ajaxSettings), t) : Gt(ce.ajaxSettings, e)
        },
        ajaxPrefilter: Ut(Bt),
        ajaxTransport: Ut(_t),
        ajax: function(e, t) {
            "object" == typeof e && (t = e,
            e = void 0),
            t = t || {};
            var c, f, p, n, d, r, h, g, i, o, v = ce.ajaxSetup({}, t), y = v.context || v, m = v.context && (y.nodeType || y.jquery) ? ce(y) : ce.event, x = ce.Deferred(), b = ce.Callbacks("once memory"), w = v.statusCode || {}, a = {}, s = {}, u = "canceled", T = {
                readyState: 0,
                getResponseHeader: function(e) {
                    var t;
                    if (h) {
                        if (!n) {
                            n = {};
                            while (t = Wt.exec(p))
                                n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2])
                        }
                        t = n[e.toLowerCase() + " "]
                    }
                    return null == t ? null : t.join(", ")
                },
                getAllResponseHeaders: function() {
                    return h ? p : null
                },
                setRequestHeader: function(e, t) {
                    return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e,
                    a[e] = t),
                    this
                },
                overrideMimeType: function(e) {
                    return null == h && (v.mimeType = e),
                    this
                },
                statusCode: function(e) {
                    var t;
                    if (e)
                        if (h)
                            T.always(e[T.status]);
                        else
                            for (t in e)
                                w[t] = [w[t], e[t]];
                    return this
                },
                abort: function(e) {
                    var t = e || u;
                    return c && c.abort(t),
                    l(0, t),
                    this
                }
            };
            if (x.promise(T),
            v.url = ((e || v.url || Et.href) + "").replace($t, Et.protocol + "//"),
            v.type = t.method || t.type || v.method || v.type,
            v.dataTypes = (v.dataType || "*").toLowerCase().match(D) || [""],
            null == v.crossDomain) {
                r = C.createElement("a");
                try {
                    r.href = v.url,
                    r.href = r.href,
                    v.crossDomain = Xt.protocol + "//" + Xt.host != r.protocol + "//" + r.host
                } catch (e) {
                    v.crossDomain = !0
                }
            }
            if (v.data && v.processData && "string" != typeof v.data && (v.data = ce.param(v.data, v.traditional)),
            Vt(Bt, v, t, T),
            h)
                return T;
            for (i in (g = ce.event && v.global) && 0 == ce.active++ && ce.event.trigger("ajaxStart"),
            v.type = v.type.toUpperCase(),
            v.hasContent = !Ft.test(v.type),
            f = v.url.replace(Rt, ""),
            v.hasContent ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(Mt, "+")) : (o = v.url.slice(f.length),
            v.data && (v.processData || "string" == typeof v.data) && (f += (At.test(f) ? "&" : "?") + v.data,
            delete v.data),
            !1 === v.cache && (f = f.replace(It, "$1"),
            o = (At.test(f) ? "&" : "?") + "_=" + jt.guid++ + o),
            v.url = f + o),
            v.ifModified && (ce.lastModified[f] && T.setRequestHeader("If-Modified-Since", ce.lastModified[f]),
            ce.etag[f] && T.setRequestHeader("If-None-Match", ce.etag[f])),
            (v.data && v.hasContent && !1 !== v.contentType || t.contentType) && T.setRequestHeader("Content-Type", v.contentType),
            T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + zt + "; q=0.01" : "") : v.accepts["*"]),
            v.headers)
                T.setRequestHeader(i, v.headers[i]);
            if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h))
                return T.abort();
            if (u = "abort",
            b.add(v.complete),
            T.done(v.success),
            T.fail(v.error),
            c = Vt(_t, v, t, T)) {
                if (T.readyState = 1,
                g && m.trigger("ajaxSend", [T, v]),
                h)
                    return T;
                v.async && 0 < v.timeout && (d = ie.setTimeout(function() {
                    T.abort("timeout")
                }, v.timeout));
                try {
                    h = !1,
                    c.send(a, l)
                } catch (e) {
                    if (h)
                        throw e;
                    l(-1, e)
                }
            } else
                l(-1, "No Transport");
            function l(e, t, n, r) {
                var i, o, a, s, u, l = t;
                h || (h = !0,
                d && ie.clearTimeout(d),
                c = void 0,
                p = r || "",
                T.readyState = 0 < e ? 4 : 0,
                i = 200 <= e && e < 300 || 304 === e,
                n && (s = function(e, t, n) {
                    var r, i, o, a, s = e.contents, u = e.dataTypes;
                    while ("*" === u[0])
                        u.shift(),
                        void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                    if (r)
                        for (i in s)
                            if (s[i] && s[i].test(r)) {
                                u.unshift(i);
                                break
                            }
                    if (u[0]in n)
                        o = u[0];
                    else {
                        for (i in n) {
                            if (!u[0] || e.converters[i + " " + u[0]]) {
                                o = i;
                                break
                            }
                            a || (a = i)
                        }
                        o = o || a
                    }
                    if (o)
                        return o !== u[0] && u.unshift(o),
                        n[o]
                }(v, T, n)),
                !i && -1 < ce.inArray("script", v.dataTypes) && ce.inArray("json", v.dataTypes) < 0 && (v.converters["text script"] = function() {}
                ),
                s = function(e, t, n, r) {
                    var i, o, a, s, u, l = {}, c = e.dataTypes.slice();
                    if (c[1])
                        for (a in e.converters)
                            l[a.toLowerCase()] = e.converters[a];
                    o = c.shift();
                    while (o)
                        if (e.responseFields[o] && (n[e.responseFields[o]] = t),
                        !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
                        u = o,
                        o = c.shift())
                            if ("*" === o)
                                o = u;
                            else if ("*" !== u && u !== o) {
                                if (!(a = l[u + " " + o] || l["* " + o]))
                                    for (i in l)
                                        if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                                            !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0],
                                            c.unshift(s[1]));
                                            break
                                        }
                                if (!0 !== a)
                                    if (a && e["throws"])
                                        t = a(t);
                                    else
                                        try {
                                            t = a(t)
                                        } catch (e) {
                                            return {
                                                state: "parsererror",
                                                error: a ? e : "No conversion from " + u + " to " + o
                                            }
                                        }
                            }
                    return {
                        state: "success",
                        data: t
                    }
                }(v, s, T, i),
                i ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (ce.lastModified[f] = u),
                (u = T.getResponseHeader("etag")) && (ce.etag[f] = u)),
                204 === e || "HEAD" === v.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state,
                o = s.data,
                i = !(a = s.error))) : (a = l,
                !e && l || (l = "error",
                e < 0 && (e = 0))),
                T.status = e,
                T.statusText = (t || l) + "",
                i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]),
                T.statusCode(w),
                w = void 0,
                g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]),
                b.fireWith(y, [T, l]),
                g && (m.trigger("ajaxComplete", [T, v]),
                --ce.active || ce.event.trigger("ajaxStop")))
            }
            return T
        },
        getJSON: function(e, t, n) {
            return ce.get(e, t, n, "json")
        },
        getScript: function(e, t) {
            return ce.get(e, void 0, t, "script")
        }
    }),
    ce.each(["get", "post"], function(e, i) {
        ce[i] = function(e, t, n, r) {
            return v(t) && (r = r || n,
            n = t,
            t = void 0),
            ce.ajax(ce.extend({
                url: e,
                type: i,
                dataType: r,
                data: t,
                success: n
            }, ce.isPlainObject(e) && e))
        }
    }),
    ce.ajaxPrefilter(function(e) {
        var t;
        for (t in e.headers)
            "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "")
    }),
    ce._evalUrl = function(e, t, n) {
        return ce.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            converters: {
                "text script": function() {}
            },
            dataFilter: function(e) {
                ce.globalEval(e, t, n)
            }
        })
    }
    ,
    ce.fn.extend({
        wrapAll: function(e) {
            var t;
            return this[0] && (v(e) && (e = e.call(this[0])),
            t = ce(e, this[0].ownerDocument).eq(0).clone(!0),
            this[0].parentNode && t.insertBefore(this[0]),
            t.map(function() {
                var e = this;
                while (e.firstElementChild)
                    e = e.firstElementChild;
                return e
            }).append(this)),
            this
        },
        wrapInner: function(n) {
            return v(n) ? this.each(function(e) {
                ce(this).wrapInner(n.call(this, e))
            }) : this.each(function() {
                var e = ce(this)
                  , t = e.contents();
                t.length ? t.wrapAll(n) : e.append(n)
            })
        },
        wrap: function(t) {
            var n = v(t);
            return this.each(function(e) {
                ce(this).wrapAll(n ? t.call(this, e) : t)
            })
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                ce(this).replaceWith(this.childNodes)
            }),
            this
        }
    }),
    ce.expr.pseudos.hidden = function(e) {
        return !ce.expr.pseudos.visible(e)
    }
    ,
    ce.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
    }
    ,
    ce.ajaxSettings.xhr = function() {
        try {
            return new ie.XMLHttpRequest
        } catch (e) {}
    }
    ;
    var Yt = {
        0: 200,
        1223: 204
    }
      , Qt = ce.ajaxSettings.xhr();
    le.cors = !!Qt && "withCredentials"in Qt,
    le.ajax = Qt = !!Qt,
    ce.ajaxTransport(function(i) {
        var o, a;
        if (le.cors || Qt && !i.crossDomain)
            return {
                send: function(e, t) {
                    var n, r = i.xhr();
                    if (r.open(i.type, i.url, i.async, i.username, i.password),
                    i.xhrFields)
                        for (n in i.xhrFields)
                            r[n] = i.xhrFields[n];
                    for (n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType),
                    i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"),
                    e)
                        r.setRequestHeader(n, e[n]);
                    o = function(e) {
                        return function() {
                            o && (o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null,
                            "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(Yt[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? {
                                binary: r.response
                            } : {
                                text: r.responseText
                            }, r.getAllResponseHeaders()))
                        }
                    }
                    ,
                    r.onload = o(),
                    a = r.onerror = r.ontimeout = o("error"),
                    void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function() {
                        4 === r.readyState && ie.setTimeout(function() {
                            o && a()
                        })
                    }
                    ,
                    o = o("abort");
                    try {
                        r.send(i.hasContent && i.data || null)
                    } catch (e) {
                        if (o)
                            throw e
                    }
                },
                abort: function() {
                    o && o()
                }
            }
    }),
    ce.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1)
    }),
    ce.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return ce.globalEval(e),
                e
            }
        }
    }),
    ce.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1),
        e.crossDomain && (e.type = "GET")
    }),
    ce.ajaxTransport("script", function(n) {
        var r, i;
        if (n.crossDomain || n.scriptAttrs)
            return {
                send: function(e, t) {
                    r = ce("<script>").attr(n.scriptAttrs || {}).prop({
                        charset: n.scriptCharset,
                        src: n.url
                    }).on("load error", i = function(e) {
                        r.remove(),
                        i = null,
                        e && t("error" === e.type ? 404 : 200, e.type)
                    }
                    ),
                    C.head.appendChild(r[0])
                },
                abort: function() {
                    i && i()
                }
            }
    });
    var Jt, Kt = [], Zt = /(=)\?(?=&|$)|\?\?/;
    ce.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Kt.pop() || ce.expando + "_" + jt.guid++;
            return this[e] = !0,
            e
        }
    }),
    ce.ajaxPrefilter("json jsonp", function(e, t, n) {
        var r, i, o, a = !1 !== e.jsonp && (Zt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Zt.test(e.data) && "data");
        if (a || "jsonp" === e.dataTypes[0])
            return r = e.jsonpCallback = v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback,
            a ? e[a] = e[a].replace(Zt, "$1" + r) : !1 !== e.jsonp && (e.url += (At.test(e.url) ? "&" : "?") + e.jsonp + "=" + r),
            e.converters["script json"] = function() {
                return o || ce.error(r + " was not called"),
                o[0]
            }
            ,
            e.dataTypes[0] = "json",
            i = ie[r],
            ie[r] = function() {
                o = arguments
            }
            ,
            n.always(function() {
                void 0 === i ? ce(ie).removeProp(r) : ie[r] = i,
                e[r] && (e.jsonpCallback = t.jsonpCallback,
                Kt.push(r)),
                o && v(i) && i(o[0]),
                o = i = void 0
            }),
            "script"
    }),
    le.createHTMLDocument = ((Jt = C.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>",
    2 === Jt.childNodes.length),
    ce.parseHTML = function(e, t, n) {
        return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t,
        t = !1),
        t || (le.createHTMLDocument ? ((r = (t = C.implementation.createHTMLDocument("")).createElement("base")).href = C.location.href,
        t.head.appendChild(r)) : t = C),
        o = !n && [],
        (i = w.exec(e)) ? [t.createElement(i[1])] : (i = Ae([e], t, o),
        o && o.length && ce(o).remove(),
        ce.merge([], i.childNodes)));
        var r, i, o
    }
    ,
    ce.fn.load = function(e, t, n) {
        var r, i, o, a = this, s = e.indexOf(" ");
        return -1 < s && (r = Tt(e.slice(s)),
        e = e.slice(0, s)),
        v(t) ? (n = t,
        t = void 0) : t && "object" == typeof t && (i = "POST"),
        0 < a.length && ce.ajax({
            url: e,
            type: i || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            o = arguments,
            a.html(r ? ce("<div>").append(ce.parseHTML(e)).find(r) : e)
        }).always(n && function(e, t) {
            a.each(function() {
                n.apply(this, o || [e.responseText, t, e])
            })
        }
        ),
        this
    }
    ,
    ce.expr.pseudos.animated = function(t) {
        return ce.grep(ce.timers, function(e) {
            return t === e.elem
        }).length
    }
    ,
    ce.offset = {
        setOffset: function(e, t, n) {
            var r, i, o, a, s, u, l = ce.css(e, "position"), c = ce(e), f = {};
            "static" === l && (e.style.position = "relative"),
            s = c.offset(),
            o = ce.css(e, "top"),
            u = ce.css(e, "left"),
            ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top,
            i = r.left) : (a = parseFloat(o) || 0,
            i = parseFloat(u) || 0),
            v(t) && (t = t.call(e, n, ce.extend({}, s))),
            null != t.top && (f.top = t.top - s.top + a),
            null != t.left && (f.left = t.left - s.left + i),
            "using"in t ? t.using.call(e, f) : c.css(f)
        }
    },
    ce.fn.extend({
        offset: function(t) {
            if (arguments.length)
                return void 0 === t ? this : this.each(function(e) {
                    ce.offset.setOffset(this, t, e)
                });
            var e, n, r = this[0];
            return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(),
            n = r.ownerDocument.defaultView,
            {
                top: e.top + n.pageYOffset,
                left: e.left + n.pageXOffset
            }) : {
                top: 0,
                left: 0
            } : void 0
        },
        position: function() {
            if (this[0]) {
                var e, t, n, r = this[0], i = {
                    top: 0,
                    left: 0
                };
                if ("fixed" === ce.css(r, "position"))
                    t = r.getBoundingClientRect();
                else {
                    t = this.offset(),
                    n = r.ownerDocument,
                    e = r.offsetParent || n.documentElement;
                    while (e && (e === n.body || e === n.documentElement) && "static" === ce.css(e, "position"))
                        e = e.parentNode;
                    e && e !== r && 1 === e.nodeType && ((i = ce(e).offset()).top += ce.css(e, "borderTopWidth", !0),
                    i.left += ce.css(e, "borderLeftWidth", !0))
                }
                return {
                    top: t.top - i.top - ce.css(r, "marginTop", !0),
                    left: t.left - i.left - ce.css(r, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var e = this.offsetParent;
                while (e && "static" === ce.css(e, "position"))
                    e = e.offsetParent;
                return e || J
            })
        }
    }),
    ce.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(t, i) {
        var o = "pageYOffset" === i;
        ce.fn[t] = function(e) {
            return M(this, function(e, t, n) {
                var r;
                if (y(e) ? r = e : 9 === e.nodeType && (r = e.defaultView),
                void 0 === n)
                    return r ? r[i] : e[t];
                r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n
            }, t, e, arguments.length)
        }
    }),
    ce.each(["top", "left"], function(e, n) {
        ce.cssHooks[n] = Ye(le.pixelPosition, function(e, t) {
            if (t)
                return t = Ge(e, n),
                _e.test(t) ? ce(e).position()[n] + "px" : t
        })
    }),
    ce.each({
        Height: "height",
        Width: "width"
    }, function(a, s) {
        ce.each({
            padding: "inner" + a,
            content: s,
            "": "outer" + a
        }, function(r, o) {
            ce.fn[o] = function(e, t) {
                var n = arguments.length && (r || "boolean" != typeof e)
                  , i = r || (!0 === e || !0 === t ? "margin" : "border");
                return M(this, function(e, t, n) {
                    var r;
                    return y(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement,
                    Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? ce.css(e, t, i) : ce.style(e, t, n, i)
                }, s, n ? e : void 0, n)
            }
        })
    }),
    ce.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, t) {
        ce.fn[t] = function(e) {
            return this.on(t, e)
        }
    }),
    ce.fn.extend({
        bind: function(e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null, t)
        },
        delegate: function(e, t, n, r) {
            return this.on(t, e, n, r)
        },
        undelegate: function(e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
        },
        hover: function(e, t) {
            return this.on("mouseenter", e).on("mouseleave", t || e)
        }
    }),
    ce.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, n) {
        ce.fn[n] = function(e, t) {
            return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n)
        }
    });
    var en = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    ce.proxy = function(e, t) {
        var n, r, i;
        if ("string" == typeof t && (n = e[t],
        t = e,
        e = n),
        v(e))
            return r = ae.call(arguments, 2),
            (i = function() {
                return e.apply(t || this, r.concat(ae.call(arguments)))
            }
            ).guid = e.guid = e.guid || ce.guid++,
            i
    }
    ,
    ce.holdReady = function(e) {
        e ? ce.readyWait++ : ce.ready(!0)
    }
    ,
    ce.isArray = Array.isArray,
    ce.parseJSON = JSON.parse,
    ce.nodeName = fe,
    ce.isFunction = v,
    ce.isWindow = y,
    ce.camelCase = F,
    ce.type = x,
    ce.now = Date.now,
    ce.isNumeric = function(e) {
        var t = ce.type(e);
        return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
    }
    ,
    ce.trim = function(e) {
        return null == e ? "" : (e + "").replace(en, "$1")
    }
    ,
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return ce
    });
    var tn = ie.jQuery
      , nn = ie.$;
    return ce.noConflict = function(e) {
        return ie.$ === ce && (ie.$ = nn),
        e && ie.jQuery === ce && (ie.jQuery = tn),
        ce
    }
    ,
    "undefined" == typeof e && (ie.jQuery = ie.$ = ce),
    ce
});
var KAJAXP = 'unk';
var KAJAXPWHITELISTEDPAGES = [];
var KAJAXPOFFNB = 0;
var KAJAXPOFFMODULO = 5;
function xdsTryFallback() {
    if (KAJAXP == 'unk') {
        jQuery.ajax({
            cache: false,
            url: "https://tags.clickintext.net/xds/?fallback=1",
            dataType: "jsonp"
        }).done(function(data) {
            if (KAJAXP != 'unk')
                return;
            KAJAXP = 'on';
            if (typeof KLOIS_IS_IP_RANO != 'undefined' && KLOIS_IS_IP_RANO)
                jQuery('.menubarv2block:eq(1) > div').append('Pas de bloqueur');
        }).fail(function(jqXHR, textStatus, errorThrown) {
            if (KAJAXP != 'unk')
                return;
            KAJAXP = 'off2';
            if (typeof KLOIS_IS_IP_RANO != 'undefined' && KLOIS_IS_IP_RANO) {
                jQuery('.menubarv2block:eq(1) > div').append('BloqueurFallback&nbsp;!');
                KAJAXP = 'off';
            }
        });
    }
}
setTimeout(xdsTryFallback, 2000);
(function($) {
    $.getScriptCached = function(url, callback) {
        return $.ajax({
            url: url,
            dataType: "script",
            cache: true
        }).done(callback)
    }
}
)(jQuery);
$.ajaxSetup({
    'headers': {
        'KAJAX': '1',
    }
});
jQuery(function() {
    jQuery.ajaxSetup({
        'headers': {
            'KAJAX': '1',
        }
    });
});
var allowAjaxClic = true;
var lastMobileOrDesktop = false;
var mobileOrDesktop;
var onMobile, onDesktop;
var kajaxTemporisedLoading;
var kajaxOnXdsClick = function() {
    document.location.href = '/';
};
function afterLoadContent(force, opts) {
    if (typeof opts == 'undefined' || opts == null)
        opts = {};
    mobileOrDesktop = jQuery('#mobileTester:visible').length ? 'mobile' : 'desktop';
    onMobile = (mobileOrDesktop == 'mobile');
    onDesktop = (mobileOrDesktop != 'mobile');
    if ((force === true) || mobileOrDesktop != lastMobileOrDesktop) {
        if (mobileOrDesktop == 'mobile') {
            jQuery(document.body).addClass('onMobile').removeClass('onDesktop');
            jQuery.each(onThisSite.onMobileDesktopChange, function(a, b) {
                b('mobile');
            });
        } else {
            jQuery(document.body).removeClass('onMobile').addClass('onDesktop');
            jQuery.each(onThisSite.onMobileDesktopChange, function(a, b) {
                b('desktop');
            });
        }
        lastMobileOrDesktop = mobileOrDesktop;
    }
    if (allowAjaxClic) {
        jQuery('a:not(.clickupdated):not([href^="#"]):not([href^="http"]):not([href^="ftp"]):not([href^="admin/"]):not([href*="portal.php"]):not(.sceditor-button)').addClass('clickupdated').click(function(evnt) {
            if (jQuery.data(this, 'previousOnclick')) {
                var res = jQuery.data(this, 'previousOnclick').call(this);
                if (res === false)
                    return false;
            }
            if (!allowAjaxClic)
                return true;
            if (jQuery(this).attr('target'))
                return true;
            if (evnt.ctrlKey || evnt.shiftKey || evnt.metaKey || (evnt.button && evnt.button == 1)) {
                return true;
            }
            var href = jQuery(this).attr('href');
            if (href.indexOf('javascript:') === 0)
                return true;
            var kajaxoptions;
            if (kajaxoptions = jQuery(this).attr('kajaxoptions')) {
                try {
                    kajaxoptions = JSON.parse(kajaxoptions);
                } catch (e) {
                    kajaxoptions = {};
                }
            } else
                kajaxoptions = {};
            var nohistory = (typeof kajaxoptions.nohistory != 'undefined' ? kajaxoptions.nohistory : false);
            clearTimeout(kajaxTemporisedLoading);
            var INFOSXDS = false;
            if (false && (typeof KLOIS_IS_IP_RANO != 'undefined') && KLOIS_IS_IP_RANO && (KAJAXP == "off") && (!USERPERMS.is_premium)) {
                INFOSXDS = true;
                var wh = 0;
                while (typeof KAJAXPWHITELISTEDPAGES[wh] != 'undefined') {
                    if (href.indexOf(KAJAXPWHITELISTEDPAGES[wh]) === 0 || ("/" + href).indexOf(KAJAXPWHITELISTEDPAGES[wh]) === 0) {
                        INFOSXDS = false;
                        break;
                    }
                    wh++;
                }
                if (INFOSXDS) {
                    KAJAXPOFFNB++;
                    if (KAJAXPOFFNB % KAJAXPOFFMODULO != 0)
                        INFOSXDS = false;
                }
            }
            if (INFOSXDS) {
                kajaxOnXdsClick = function() {
                    return traiteChangementDePageKajax(href, nohistory, kajaxoptions);
                }
                ;
                return traiteChangementDePageKajax('/nolog.infosxds.php', 1, {
                    'nourlchange': 1,
                    'nohistory': 1,
                    'nocheckwebversion': 1,
                    'fctafter': function() {}
                });
            } else
                return traiteChangementDePageKajax(href, nohistory, kajaxoptions);
        }).each(function() {
            jQuery.data(this, 'previousOnclick', jQuery(this)[0].onclick);
            jQuery(this).attr('onclick', '');
        });
        jQuery('form.kajaxable:not(.clickupdated)').addClass('clickupdated').submit(function(evnt) {
            if (jQuery.data(this, 'previousOnSubmit')) {
                var res = jQuery.data(this, 'previousOnSubmit').call(this);
                if (res === false)
                    return false;
            }
            var formdatas = {};
            formdatas.method = jQuery(this).attr('method').toLowerCase();
            formdatas.target = jQuery(this).attr('target');
            formdatas.action = jQuery(this).attr('action');
            if (!formdatas.action)
                formdatas.action = document.documentURI;
            var kajaxoptions;
            if (kajaxoptions = jQuery(this).attr('kajaxoptions')) {
                try {
                    kajaxoptions = JSON.parse(kajaxoptions);
                } catch (e) {
                    kajaxoptions = {};
                }
            } else
                kajaxoptions = {};
            if (formdatas.method == 'post')
                kajaxoptions.post = jQuery(this).serializeArray();
            else
                kajaxoptions.get = jQuery(this).serializeArray();
            var nohistory = (typeof kajaxoptions.nohistory != 'undefined' ? kajaxoptions.nohistory : false);
            return traiteChangementDePageKajax(formdatas.action, nohistory, kajaxoptions);
        }).each(function() {
            jQuery.data(this, 'previousOnSubmit', jQuery(this)[0].onsubmit);
            jQuery(this).attr('onsubmit', '');
            var o = this;
            jQuery(this).find('input[type=submit],input[type=button],button').click(function() {
                jQuery(o).append(jQuery('<input type="hidden">').attr('name', jQuery(this).attr('name')).val(jQuery(this).val()));
            });
        });
    }
    jQuery('.dynamicsquared').each(function() {
        jQuery(this).css('height', jQuery(this).outerWidth());
    });
    jQuery('img[srctrue]').one('load', function() {
        jQuery(this).css({
            'opacity': 1
        });
    }).each(function() {
        var suffix = '';
        if (onMobile && jQuery(this).attr('srctruemobile')) {
            suffix = 'mobile';
        }
        jQuery(this).attr('srcset', jQuery(this).attr('srcsettrue' + suffix));
        jQuery(this).css({
            'opacity': 0
        }).attr('src', jQuery(this).attr('srctrue' + suffix));
    }).removeAttr('srctrue').removeAttr('srcsettrue').removeAttr('srctruemobile').removeAttr('srcsettruemobile');
    jQuery(window).scroll();
}
function kajaxdocumentlocationhref(href, kajaxoptions) {
    if (!allowAjaxClic) {
        document.location.href = href;
        return true;
    }
    if (typeof kajaxoptions == "undefined")
        kajaxoptions = {};
    var nohistory = (typeof kajaxoptions.nohistory != 'undefined' ? kajaxoptions.nohistory : false);
    return traiteChangementDePageKajax(href, nohistory, kajaxoptions);
}
var waitingContent = 0;
var oldTitle = false;
var currentHref = '';
var kajaxLastOpts = {};
function traiteChangementDePageKajax(href, nohistory, opts) {
    clearTimeout(document.metaRefresh);
    jQuery.each(onThisSite.onBeforeTraiteChangementDePageKajax, function(a, b) {
        b(href);
    });
    if (typeof opts == 'undefined' || opts == null)
        opts = {};
    if (oldTitle === false)
        oldTitle = document.title;
    kajaxLastOpts = opts;
    if (typeof opts.nohistory != 'undefined')
        nohistory = opts.nohistory;
    waitingContent++;
    var mywaitingContent = waitingContent + 0;
    if (!opts.noloading) {
        if (typeof showLoading == 'function')
            showLoading(opts.forceLoading);
    }
    var oldHref = document.location.href;
    var onSuccess = function(html, status, jqXHR) {
        currentHref = href;
        if (typeof opts.fctbefore == 'function') {
            if (!opts.fctbefore(html))
                return;
        }
        var optsSave = (onThisPage.optsSave ? onThisPage.optsSave : {});
        optsSave.scrollTop = jQuery(window).scrollTop();
        var websiteversion = jqXHR.getResponseHeader('websiteversion');
        var kajaxunavailable = (html.indexOf("KAJAXUNAVAILABLE" + websiteversion) != -1);
        if (!opts.nocheckwebversion || kajaxunavailable)
            if (kajaxunavailable || (websiteversion && websiteversion != WEBSITEVERSION)) {
                allowAjaxClic = false;
                document.location.href = href;
                return false;
            }
        if (waitingContent != mywaitingContent)
            return;
        resetOnThisPage();
        if (opts.ids) {
            var newPage = jQuery('<div></div>').html(html);
            jQuery.each(opts.ids, function(a, id) {
                var anim = false;
                var toid = id;
                if (typeof id == 'object') {
                    var anim = id.anim;
                    var toid = (id.toid ? id.toid : id.id);
                    var id = id.id;
                }
                var newHtml = jQuery(newPage).find(id + ':eq(0)').html();
                jQuery(toid).each(function() {
                    var o = this;
                    var oldHtml = jQuery(o).html();
                    var compareNew = newHtml;
                    var compareOld = oldHtml;
                    var newRefreshKey = jQuery(newPage).find(id + ':eq(0)').attr('refreshkey');
                    if (jQuery(o).attr('refreshkey')) {
                        compareNew = newRefreshKey;
                        compareOld = jQuery(o).attr('refreshkey');
                    }
                    if (newRefreshKey) {
                        jQuery(o).attr('refreshkey', newRefreshKey);
                    } else
                        jQuery(o).removeAttr('refreshkey');
                    if (compareNew != compareOld) {
                        if (anim == 'slide') {
                            (function(o, newHtml) {
                                jQuery(o).slideUp(function() {
                                    jQuery(o).html(newHtml);
                                    jQuery(o).slideDown();
                                });
                            }
                            )(o, newHtml);
                        } else if (anim == 'fade') {
                            (function(o, newHtml) {
                                jQuery(o).fadeOut('fast', function() {
                                    jQuery(o).html(newHtml);
                                    jQuery(o).fadeIn('fast');
                                });
                            }
                            )(o, newHtml);
                        } else
                            jQuery(o).html(newHtml);
                    }
                });
            });
            newPage.find('script').each(function() {
                jQuery('#content').append(this);
            });
            newPage.remove();
        } else {
            jQuery('#content').html(html);
        }
        var hashtag = href.split('#');
        if (hashtag[1])
            hashtag = '#' + hashtag[1];
        else
            hashtag = '';
        if (!nohistory) {
            window.history.replaceState(optsSave, oldTitle, oldHref);
            window.history.pushState(null, document.title, (url ? url + hashtag : href));
        } else if (!opts.nourlchange) {
            window.history.replaceState(null, document.title, (url ? url + hashtag : href));
        }
        if (hashtag && jQuery('[name="' + hashtag.split('#')[1] + '"]').length) {
            jQuery(function() {
                window.scrollTo(0, jQuery('[name="' + hashtag.split('#')[1] + '"]').offset().top - 70);
                setTimeout(function() {
                    window.scrollTo(0, jQuery('[name="' + hashtag.split('#')[1] + '"]').offset().top - 70);
                }, 100);
                setTimeout(function() {
                    window.scrollTo(0, jQuery('[name="' + hashtag.split('#')[1] + '"]').offset().top - 70);
                }, 200);
            });
        } else {
            if (!opts.noScrollTop) {
                if (typeof opts.scrollTop != 'undefined') {
                    jQuery(function() {
                        window.scrollTo(0, opts.scrollTop);
                    });
                } else {
                    window.scrollTo(0, 0);
                }
            }
        }
        if (typeof opts.fctafter == 'function')
            opts.fctafter();
        afterLoadContent();
        if (typeof hideLoading == 'function')
            hideLoading();
        oldTitle = false;
        gtag('event', 'page_view', {
            'page_location': location.protocol + '//' + location.host + url
        });
    };
    if (opts.post) {
        var params = opts.post;
        if (Array.isArray(params)) {
            params.push({
                'name': 'KAJAX',
                'value': WEBSITEVERSION
            });
            params.push({
                'name': 'KAJAXT',
                'value': (new Date()).getTime()
            });
            params.push({
                'name': 'KAJAXC',
                'value': (XOOIT_USER_CONNECTED ? 1 : 0)
            });
            params.push({
                'name': 'KAJAXP',
                'value': KAJAXP
            });
        } else if (typeof params === 'object' && params !== null) {
            params.KAJAX = WEBSITEVERSION;
            params.KAJAXT = (new Date()).getTime();
            params.KAJAXC = (XOOIT_USER_CONNECTED ? 1 : 0);
            params.KAJAXP = KAJAXP;
        }
        var afterGetPost = jQuery.post(href, params, onSuccess);
    } else {
        if (!opts.get)
            opts.get = {};
        var params = opts.get;
        if (Array.isArray(params)) {
            params.push({
                'name': 'KAJAX',
                'value': WEBSITEVERSION
            });
            params.push({
                'name': 'KAJAXT',
                'value': (new Date()).getTime()
            });
            params.push({
                'name': 'KAJAXC',
                'value': (XOOIT_USER_CONNECTED ? 1 : 0)
            });
            params.push({
                'name': 'KAJAXP',
                'value': KAJAXP
            });
        } else if (typeof params === 'object' && params !== null) {
            params.KAJAX = WEBSITEVERSION;
            params.KAJAXT = (new Date()).getTime();
            params.KAJAXC = (XOOIT_USER_CONNECTED ? 1 : 0);
            params.KAJAXP = KAJAXP;
        }
        var afterGetPost = jQuery.get(href, params, onSuccess);
    }
    afterGetPost.fail(function() {
        document.title = oldTitle;
        oldTitle = false;
        if (typeof hideLoading == 'function')
            hideLoading();
    });
    return false;
}
window.onpopstate = function(e) {
    traiteChangementDePageKajax(document.location.href, true, e.state);
    e.preventDefault();
}
;
var onThisPage;
function resetOnThisPage() {
    onThisPage = {
        'scroll': [],
        'scrollingUp': [],
        'scrollingDown': [],
        'bodyClick': [],
        'footerDo': [],
        'onWindowVisibilityChange': [],
        '_prevent': {}
    };
}
resetOnThisPage();
function onThisPageFooterDo() {
    jQuery.each(onThisPage.footerDo, function(a, b) {
        b();
    });
}
function fctOnThisPage(type, fct, key) {
    if (typeof key != 'undefined') {
        if (typeof onThisPage._prevent[type + '/' + key] != 'undefined') {
            return;
        }
        onThisPage._prevent[type + '/' + key] = 1;
    }
    onThisPage[type].push(fct);
}
var onThisSite = {
    onMobileDesktopChange: [],
    onBeforeTraiteChangementDePageKajax: [],
    onWindowVisibilityChange: []
};
jQuery(function() {
    afterLoadContent();
    jQuery(window).resize(function() {
        afterLoadContent(false, {
            fromResize: 1
        });
        jQuery.each(onThisPage.scroll, function(a, b) {
            b();
        });
    });
    var scrollDirection = false;
    var lastScrollPosition = 0;
    var lastScrollPositionDirectionChanged = 0;
    var lastPositionHiddenHeader = null;
    jQuery(window).scroll(function() {
        var scrollPosition = jQuery(window).scrollTop();
        if (onMobile) {
            var movement = 0;
            if (scrollPosition > lastScrollPosition) {
                if (scrollDirection != 1) {
                    scrollDirection = 1;
                    lastScrollPositionDirectionChanged = scrollPosition;
                }
                movement = scrollPosition - lastScrollPositionDirectionChanged;
            } else {
                if (scrollDirection != -1) {
                    scrollDirection = -1;
                    lastScrollPositionDirectionChanged = scrollPosition;
                }
                movement = lastScrollPositionDirectionChanged - scrollPosition;
            }
            lastScrollPosition = scrollPosition;
            if (scrollPosition < 100 || (scrollDirection == -1 && movement > 100)) {
                if (lastPositionHiddenHeader != 'shown') {
                    jQuery.each(onThisPage.scrollingUp, function(a, b) {
                        b();
                    });
                    lastPositionHiddenHeader = 'shown';
                }
            } else if (scrollDirection == 1 && movement > 100) {
                if (lastPositionHiddenHeader != 'hidden') {
                    jQuery.each(onThisPage.scrollingDown, function(a, b) {
                        b();
                    });
                    lastPositionHiddenHeader = 'hidden';
                }
            }
        }
        jQuery.each(onThisPage.scroll, function(a, b) {
            b();
        });
    });
});
var frameWorkVisibilityChange = (function(window) {
    var inView = false;
    return function(fn) {
        window.onfocus = window.onblur = window.onpageshow = window.onpagehide = function(e) {
            if ({
                focus: 1,
                pageshow: 1
            }[e.type]) {
                if (inView)
                    return;
                fn("visible");
                inView = true;
            } else if (inView) {
                fn("hidden");
                inView = false;
            }
        }
        ;
    }
    ;
}(this));
frameWorkVisibilityChange(function(state) {
    jQuery.each(onThisSite.onWindowVisibilityChange, function(a, b) {
        b(state);
    });
});
document.write_canceled = function(write) {
    console.log('document.write(' + write + ')');
}
;
var showLoadingTimeout;
function showLoading(forceLoading, logo, text) {
    clearTimeout(showLoadingTimeout);
    showLoadingTimeout = setTimeout(function() {
        jQuery('#mlkqsdfmljqsdfDiv').stop().remove();
        jQuery(document.body).append('<div id="mlkqsdfmljqsdfDiv" style="z-index: 9999999; position: fixed; border-radius: 10px; background-color: rgba(0,0,0,0.7); top: calc( 50vh - 70px ); text-align: center; backdrop-filter: blur(5px); left: calc( 50vw - ' + (text ? '150px' : '50px') + ' );' + (text ? 'width: 300px;' : '') + ' color: white; font-size: 40px; padding: 30px;">' + '<i class="fas ' + (logo ? logo : 'fa-circle-notch fa-spin') + '" style="opacity: 0.9"></i>' + (text ? '<div style="font-size: 13px;;">' + text + '</div>' : '') + '</div>');
    }, forceLoading ? 1 : 300);
}
function hideLoading() {
    clearTimeout(showLoadingTimeout);
    jQuery('#mlkqsdfmljqsdfDiv').fadeOut(function() {
        jQuery(this).remove();
    })
}
var checkIfAutoLoadMore = function() {
    do {
        if (nbPage && autoLoadedPageMinPage > 1) {
            if (jQuery('#autoLoadPreviousPageClic').length && typeof autoLoadPreviousButton != 'undefined') {
                jQuery('#autoLoadPreviousPageClic').attr('id', 'autoLoadPreviousPageClicTmp').html(autoLoadPreviousButton);
            }
            if (!jQuery('#autoLoadPreviousPage').length)
                break;
            var scrollPosition = jQuery(window).scrollTop();
            var loadMorePosition = jQuery('#autoLoadPreviousPage').offset().top;
            if (scrollPosition < loadMorePosition + 500) {
                jQuery('#autoLoadPreviousPage').attr('id', 'autoLoadPreviousPageTmp').html(autoLoadingContent);
                var autoLoadPreviousPageTmp = jQuery('#autoLoadPreviousPageTmp');
                var scrollTopMemo;
                traiteChangementDePageKajax(previousPage, true, {
                    ids: [{
                        'id': '#autoLoadList:last',
                        'toid': '#autoLoadPreviousPageTmp'
                    }],
                    noScrollTop: true,
                    nourlchange: true,
                    noloading: true,
                    nocheckwebversion: true,
                    fctbefore: function() {
                        scrollTopMemo = jQuery('#autoLoadPositionHelper').offset().top;
                        return true;
                    },
                    fctafter: function() {
                        scrollTopMemo = jQuery('#autoLoadPositionHelper').offset().top - scrollTopMemo;
                        jQuery(window).scrollTop(jQuery(window).scrollTop() + scrollTopMemo);
                        if (autoLoadedPageMinPage > 1) {
                            if (typeof autoLoadPreviousButton == 'undefined') {
                                jQuery('#autoLoadPreviousPageTmp').before('<div id="autoLoadPreviousPage"></div>');
                                checkIfAutoLoadMore();
                            } else {
                                jQuery('#autoLoadPreviousPageTmp').before('<div id="autoLoadPreviousPageClic"></div>');
                                checkIfAutoLoadMore();
                            }
                        }
                        autoLoadPreviousPageTmp.removeAttr('id');
                    }
                });
            }
        }
    } while (false);
    do {
        if (nbPage && autoLoadedPageMaxPage < nbPage) {
            if (!jQuery('#autoLoadNextPage').length)
                break;
            var scrollPosition = jQuery(window).scrollTop();
            var loadMorePosition = jQuery('#autoLoadNextPage').offset().top;
            scrollPosition += window.innerHeight;
            if (scrollPosition > (loadMorePosition - 1000)) {
                jQuery('#autoLoadNextPage').attr('id', 'autoLoadNextPageTmp').html(autoLoadingContent);
                traiteChangementDePageKajax(nextPage, true, {
                    ids: [{
                        'id': '#autoLoadList:last',
                        'toid': '#autoLoadNextPageTmp'
                    }],
                    noScrollTop: true,
                    nourlchange: true,
                    noloading: true,
                    noAfterMainHeaderRemove: true,
                    nocheckwebversion: true,
                    fctafter: function() {
                        if (nbPage > autoLoadedPageMaxPage) {
                            if (true || onMobile || autoLoadedPageMaxPage % 4 != 1) {
                                jQuery('#autoLoadNextPageTmp').after('<div id="autoLoadNextPage"></div>');
                                checkIfAutoLoadMore();
                            } else {
                                jQuery('#autoLoadNextPageTmp').after('<div class="ibc moreProducts" onclick="jQuery(this).attr(\'onclick\', \'\').attr(\'id\', \'autoLoadNextPage\'); checkIfAutoLoadMore(); "><div style="width: 100%; text-align: center; margin-top: 20px;"><button class="ok">Charger les réponses suivantes</button></div></div>');
                            }
                        }
                        jQuery('#autoLoadNextPageTmp').removeAttr('id');
                    }
                });
            }
        }
        break;
    } while (false);
}
var checkAutoPageCursor = function() {
    var static = this;
    if (!static.timedout) {
        static.timedout = true;
        static.timeout = setTimeout(function() {
            static.timedout = false;
            var scrollPosition = jQuery(window).scrollTop();
            var pages = jQuery('[page]');
            var iPage = 0;
            pages.each(function(i, o) {
                var topPosition = jQuery(o).offset().top;
                if (scrollPosition > topPosition)
                    iPage = i;
                else
                    return false;
            });
            var page = jQuery(pages[iPage]);
            var curPage = parseInt(page.attr('page'));
            var pagesHTML = '';
            var a = 1;
            while (a <= nbPage) {
                pagesHTML += '<a href="' + list_pages[a] + '" page="' + a + '" style="display: inline-block; width: calc( 100% / ' + nbPage + ' ); height: inherit;"></a>';
                a++;
            }
            var perc = (curPage - 0.5) / nbPage;
            jQuery('#autoPagination').html('<div style="user-select: none; background-color: var(--var-tr-color-soft); border-radius: 5px; height: 3px; position: relative; width: 90%; margin: auto;">' + '<div class="cursorCurPage" style="background-color: var(--var-tr-color-contrast); border-radius: 5px; width: 3px; height: 18px; position: absolute; top: -9px; left: calc( 100% * ' + perc + ' - 1.5px );">' + '<div style="position: absolute; width: 100px; margin-left: -50px; margin-top: -20px; text-align: center;">' + '<div style="display: inline-block; background-color: var(--var-tr-color-soft); color: var(--var-tr-color-contrast-soft); border-radius: 3px; border-radius: 2px; font-size: 0.85em; padding: 2px 5px;">Page <b class="curPageText">' + curPage + '</b> / ' + nbPage + '</div>' + '</div>' + '</div>' + '<div style="position: absolute; left:0; right: 0; top: -9px; height: 18px; text-align: center;">' + pagesHTML + '</div>' + '</div>').find('a').mouseenter(function() {
                var curPage = parseInt(jQuery(this).attr('page'));
                var perc = (curPage - 0.5) / nbPage;
                jQuery('.curPageText').html(jQuery(this).attr('page'));
                jQuery('.cursorCurPage').css('left', 'calc( 100% * ' + perc + ' - 1.5px )');
            }).mouseleave(function() {
                jQuery('.curPageText').html(curPage);
                jQuery('.cursorCurPage').css('left', 'calc( 100% * ' + perc + ' - 1.5px )');
            }).click(function() {});
            afterLoadContent();
            window.history.replaceState(null, document.title, page.attr('pageurl'));
        }, (!static.everLaunched ? 0 : 500));
        static.everLaunched = true;
    }
}
function smartDate(now, d) {
    var minutes = Math.round((now.getTime() - d.getTime()) / 1000 / 60);
    var keyword = 'il y a ';
    var keyword2 = 'hier ';
    if (minutes < 0) {
        keyword = 'dans ';
        keyword2 = 'demain ';
        minutes = -minutes;
    }
    if (minutes < 30) {
        return keyword + (minutes > 1 ? minutes + ' minutes' : '1 minute');
    } else if (minutes < 60) {
        return keyword + 'moins d\'une heure';
    } else if (minutes < 90) {
        return keyword + 'une heure';
    } else if (minutes < 60 * 6) {
        var h = Math.round(minutes / 60);
        return keyword + h + ' heures';
    } else if (minutes < 60 * 24) {
        var m = d.getMinutes() + 0;
        var h = d.getHours() + 0;
        m = (m > 9 ? m : '0' + m);
        h = (h > 9 ? h : '0' + h);
        if (now.toLocaleDateString() == d.toLocaleDateString()) {
            return 'à ' + h + ':' + m;
        } else {
            return keyword2 + 'à ' + h + ':' + m;
        }
    } else if (d.getYear() == now.getYear()) {
        const options = {
            weekday: 'short',
            month: 'short',
            day: 'numeric',
        };
        return 'le ' + d.toLocaleDateString(undefined, options);
    } else {
        const options = {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
        };
        return 'le ' + d.toLocaleDateString(undefined, options);
    }
}
function checkAutoTimestamp() {
    var now = (new Date());
    jQuery('[timestamp]').each(function(i, o) {
        var d = new Date(parseInt(jQuery(this).attr('timestamp')) * 1000);
        jQuery(this).html(smartDate(now, d));
        jQuery(this).attr('title', d.toLocaleDateString(undefined, {
            weekday: 'short',
            year: 'numeric',
            month: 'short',
            day: 'numeric',
        }) + ' à ' + (d.getHours() > 9 ? '' : '0') + d.getHours() + ':' + (d.getMinutes() > 9 ? '' : '0') + d.getMinutes());
    });
}
fctOnThisPage('footerDo', checkAutoTimestamp, 'checkAutoTimestamp');
setInterval(checkAutoTimestamp, 1000 * 15);
window.addEventListener("message", (event) => {
    try {
        let message = JSON.parse(event.data);
        if (message.msg_type == 'resize-me') {
            let shouldCollapseAd = false;
            var keyValues = {};
            for (let index in message.key_value) {
                let key = message.key_value[index].key;
                let value = message.key_value[index].value;
                keyValues[key] = value;
                if (key == 'r_nh' && value == '0') {
                    shouldCollapseAd = true;
                }
            }
            if (shouldCollapseAd) {
                adsenseTryEmpty(keyValues['qid'], 0);
                gtag('event', 'adsense_unfilled', {
                    'event_label': window.location.host
                });
            }
        }
    } catch (e) {}
}
);
function adsenseTryEmpty(qid, n) {
    var objs = jQuery('ins.adsbygoogle').find('iframe').filter(function() {
        return jQuery(this).attr('data-google-query-id') == qid || jQuery(this).contents().find('iframe[data-google-query-id="' + qid + '"]').length >= 1;
    }).parents('.onEmptyAdsense');
    if (objs.length) {
        var sobjs = objs.find('script:contains("onEmptyAdsenseJS"):not(.launched)');
        if (sobjs.length) {
            sobjs.addClass('launched');
            var e;
            try {
                (function() {
                    var abc = objs;
                    eval(sobjs.text() + '(abc)');
                }
                )();
            } catch (e) {}
        } else
            objs.hide();
    } else {
        if (n < 50) {
            setTimeout(function() {
                adsenseTryEmpty(qid, n + 1);
            }, n + 1);
        }
    }
}
(function($) {
    'use strict';
    function _interopDefaultLegacy(e) {
        return e && typeof e === 'object' && 'default'in e ? e : {
            default: e
        };
    }
    var $__default = _interopDefaultLegacy($);
    function isTypeof(type, arg) {
        return typeof arg === type;
    }
    var isString = isTypeof.bind(null, 'string');
    var isUndefined = isTypeof.bind(null, 'undefined');
    var isFunction = isTypeof.bind(null, 'function');
    var isNumber = isTypeof.bind(null, 'number');
    function isEmptyObject(obj) {
        return !Object.keys(obj).length;
    }
    function extend(targetArg, sourceArg) {
        var isTargetBoolean = targetArg === !!targetArg;
        var i = isTargetBoolean ? 2 : 1;
        var target = isTargetBoolean ? sourceArg : targetArg;
        var isDeep = isTargetBoolean ? targetArg : false;
        function isObject(value) {
            return value !== null && typeof value === 'object' && Object.getPrototypeOf(value) === Object.prototype;
        }
        for (; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
                var targetValue = target[key];
                var value = source[key];
                if (isUndefined(value)) {
                    continue;
                }
                if (key === '__proto__' || key === 'constructor') {
                    continue;
                }
                var isValueObject = isObject(value);
                var isValueArray = Array.isArray(value);
                if (isDeep && (isValueObject || isValueArray)) {
                    var isSameType = isObject(targetValue) === isValueObject && Array.isArray(targetValue) === isValueArray;
                    target[key] = extend(true, isSameType ? targetValue : (isValueArray ? [] : {}), value);
                } else {
                    target[key] = value;
                }
            }
        }
        return target;
    }
    function arrayRemove(arr, item) {
        var i = arr.indexOf(item);
        if (i > -1) {
            arr.splice(i, 1);
        }
    }
    function each(obj, fn) {
        if (Array.isArray(obj) || 'length'in obj && isNumber(obj.length)) {
            for (var i = 0; i < obj.length; i++) {
                fn(i, obj[i]);
            }
        } else {
            Object.keys(obj).forEach(function(key) {
                fn(key, obj[key]);
            });
        }
    }
    var cssPropertyNameCache = {};
    var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    function toFloat(value) {
        value = parseFloat(value);
        return isFinite(value) ? value : 0;
    }
    function createElement(tag, attributes, context) {
        var node = (context || document).createElement(tag);
        each(attributes || {}, function(key, value) {
            if (key === 'style') {
                node.style.cssText = value;
            } else if (key in node) {
                node[key] = value;
            } else {
                node.setAttribute(key, value);
            }
        });
        return node;
    }
    function parent(node, selector) {
        var parent = node || {};
        while ((parent = parent.parentNode) && !/(9|11)/.test(parent.nodeType)) {
            if (!selector || is(parent, selector)) {
                return parent;
            }
        }
    }
    function closest(node, selector) {
        return is(node, selector) ? node : parent(node, selector);
    }
    function remove(node) {
        if (node.parentNode) {
            node.parentNode.removeChild(node);
        }
    }
    function appendChild(node, child) {
        node.appendChild(child);
    }
    function find(node, selector) {
        return node.querySelectorAll(selector);
    }
    var EVENT_CAPTURE = true;
    function on(node, events, selector, fn, capture) {
        events.split(' ').forEach(function(event) {
            var handler;
            if (isString(selector)) {
                handler = fn['_sce-event-' + event + selector] || function(e) {
                    var target = e.target;
                    while (target && target !== node) {
                        if (is(target, selector)) {
                            fn.call(target, e);
                            return;
                        }
                        target = target.parentNode;
                    }
                }
                ;
                fn['_sce-event-' + event + selector] = handler;
            } else {
                handler = selector;
                capture = fn;
            }
            node.addEventListener(event, handler, capture || false);
        });
    }
    function off(node, events, selector, fn, capture) {
        events.split(' ').forEach(function(event) {
            var handler;
            if (isString(selector)) {
                handler = fn['_sce-event-' + event + selector];
            } else {
                handler = selector;
                capture = fn;
            }
            node.removeEventListener(event, handler, capture || false);
        });
    }
    function attr(node, attr, value) {
        if (arguments.length < 3) {
            return node.getAttribute(attr);
        }
        if (value == null) {
            removeAttr(node, attr);
        } else {
            node.setAttribute(attr, value);
        }
    }
    function removeAttr(node, attr) {
        node.removeAttribute(attr);
    }
    function hide(node) {
        css(node, 'display', 'none');
    }
    function show(node) {
        css(node, 'display', '');
    }
    function toggle(node) {
        if (isVisible(node)) {
            hide(node);
        } else {
            show(node);
        }
    }
    function css(node, rule, value) {
        if (arguments.length < 3) {
            if (isString(rule)) {
                return node.nodeType === 1 ? getComputedStyle(node)[rule] : null;
            }
            each(rule, function(key, value) {
                css(node, key, value);
            });
        } else {
            var isNumeric = (value || value === 0) && !isNaN(value);
            node.style[rule] = isNumeric ? value + 'px' : value;
        }
    }
    function data(node, key, value) {
        var argsLength = arguments.length;
        var data = {};
        if (node.nodeType === ELEMENT_NODE) {
            if (argsLength === 1) {
                each(node.attributes, function(_, attr) {
                    if (/^data\-/i.test(attr.name)) {
                        data[attr.name.substr(5)] = attr.value;
                    }
                });
                return data;
            }
            if (argsLength === 2) {
                return attr(node, 'data-' + key);
            }
            attr(node, 'data-' + key, String(value));
        }
    }
    function is(node, selector) {
        var result = false;
        if (node && node.nodeType === ELEMENT_NODE) {
            result = (node.matches || node.msMatchesSelector || node.webkitMatchesSelector).call(node, selector);
        }
        return result;
    }
    function contains(node, child) {
        return node !== child && node.contains && node.contains(child);
    }
    function previousElementSibling(node, selector) {
        var prev = node.previousElementSibling;
        if (selector && prev) {
            return is(prev, selector) ? prev : null;
        }
        return prev;
    }
    function insertBefore(node, refNode) {
        return refNode.parentNode.insertBefore(node, refNode);
    }
    function classes(node) {
        return node.className.trim().split(/\s+/);
    }
    function hasClass(node, className) {
        return is(node, '.' + className);
    }
    function addClass(node, className) {
        var classList = classes(node);
        if (classList.indexOf(className) < 0) {
            classList.push(className);
        }
        node.className = classList.join(' ');
    }
    function removeClass(node, className) {
        var classList = classes(node);
        arrayRemove(classList, className);
        node.className = classList.join(' ');
    }
    function toggleClass(node, className, state) {
        state = isUndefined(state) ? !hasClass(node, className) : state;
        if (state) {
            addClass(node, className);
        } else {
            removeClass(node, className);
        }
    }
    function width(node, value) {
        if (isUndefined(value)) {
            var cs = getComputedStyle(node);
            var padding = toFloat(cs.paddingLeft) + toFloat(cs.paddingRight);
            var border = toFloat(cs.borderLeftWidth) + toFloat(cs.borderRightWidth);
            return node.offsetWidth - padding - border;
        }
        css(node, 'width', value);
    }
    function height(node, value) {
        if (isUndefined(value)) {
            var cs = getComputedStyle(node);
            var padding = toFloat(cs.paddingTop) + toFloat(cs.paddingBottom);
            var border = toFloat(cs.borderTopWidth) + toFloat(cs.borderBottomWidth);
            return node.offsetHeight - padding - border;
        }
        css(node, 'height', value);
    }
    function trigger(node, eventName, data) {
        var event;
        if (isFunction(window.CustomEvent)) {
            event = new CustomEvent(eventName,{
                bubbles: true,
                cancelable: true,
                detail: data
            });
        } else {
            event = node.ownerDocument.createEvent('CustomEvent');
            event.initCustomEvent(eventName, true, true, data);
        }
        node.dispatchEvent(event);
    }
    function isVisible(node) {
        return !!node.getClientRects().length;
    }
    function camelCase(string) {
        return string.replace(/^-ms-/, 'ms-').replace(/-(\w)/g, function(match, char) {
            return char.toUpperCase();
        });
    }
    function traverse(node, func, innermostFirst, siblingsOnly, reverse) {
        node = reverse ? node.lastChild : node.firstChild;
        while (node) {
            var next = reverse ? node.previousSibling : node.nextSibling;
            if ((!innermostFirst && func(node) === false) || (!siblingsOnly && traverse(node, func, innermostFirst, siblingsOnly, reverse) === false) || (innermostFirst && func(node) === false)) {
                return false;
            }
            node = next;
        }
    }
    function rTraverse(node, func, innermostFirst, siblingsOnly) {
        traverse(node, func, innermostFirst, siblingsOnly, true);
    }
    function parseHTML(html, context) {
        context = context || document;
        var ret = context.createDocumentFragment();
        var tmp = createElement('div', {}, context);
        tmp.innerHTML = html;
        while (tmp.firstChild) {
            appendChild(ret, tmp.firstChild);
        }
        return ret;
    }
    function hasStyling(node) {
        return node && (!is(node, 'p,div') || node.className || attr(node, 'style') || !isEmptyObject(data(node)));
    }
    function convertElement(element, toTagName) {
        var newElement = createElement(toTagName, {}, element.ownerDocument);
        each(element.attributes, function(_, attribute) {
            try {
                attr(newElement, attribute.name, attribute.value);
            } catch (ex) {}
        });
        while (element.firstChild) {
            appendChild(newElement, element.firstChild);
        }
        element.parentNode.replaceChild(newElement, element);
        return newElement;
    }
    var blockLevelList = '|body|hr|p|div|h1|h2|h3|h4|h5|h6|address|pre|' + 'form|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|blockquote|center|' + 'details|section|article|aside|nav|main|header|hgroup|footer|fieldset|' + 'dl|dt|dd|figure|figcaption|';
    function canHaveChildren(node) {
        if (!/11?|9/.test(node.nodeType)) {
            return false;
        }
        return ('|iframe|area|base|basefont|br|col|frame|hr|img|input|wbr' + '|isindex|link|meta|param|command|embed|keygen|source|track|' + 'object|').indexOf('|' + node.nodeName.toLowerCase() + '|') < 0;
    }
    function isInline(elm, includeCodeAsBlock) {
        var tagName, nodeType = (elm || {}).nodeType || TEXT_NODE;
        if (nodeType !== ELEMENT_NODE) {
            return nodeType === TEXT_NODE;
        }
        tagName = elm.tagName.toLowerCase();
        if (tagName === 'code') {
            return !includeCodeAsBlock;
        }
        return blockLevelList.indexOf('|' + tagName + '|') < 0;
    }
    function copyCSS(from, to) {
        if (to.style && from.style) {
            to.style.cssText = from.style.cssText + to.style.cssText;
        }
    }
    function isEmpty(node) {
        if (node.lastChild && isEmpty(node.lastChild)) {
            remove(node.lastChild);
        }
        return node.nodeType === 3 ? !node.nodeValue : (canHaveChildren(node) && !node.childNodes.length);
    }
    function fixNesting(node) {
        traverse(node, function(node) {
            var list = 'ul,ol'
              , isBlock = !isInline(node, true) && node.nodeType !== COMMENT_NODE
              , parent = node.parentNode;
            if (isBlock && (isInline(parent, true) || parent.tagName === 'P')) {
                var lastInlineParent = node;
                while (isInline(lastInlineParent.parentNode, true) || lastInlineParent.parentNode.tagName === 'P') {
                    lastInlineParent = lastInlineParent.parentNode;
                }
                var before = extractContents(lastInlineParent, node);
                var middle = node;
                while (parent && isInline(parent, true)) {
                    if (parent.nodeType === ELEMENT_NODE) {
                        var clone = parent.cloneNode();
                        while (middle.firstChild) {
                            appendChild(clone, middle.firstChild);
                        }
                        appendChild(middle, clone);
                    }
                    parent = parent.parentNode;
                }
                insertBefore(middle, lastInlineParent);
                if (!isEmpty(before)) {
                    insertBefore(before, middle);
                }
                if (isEmpty(lastInlineParent)) {
                    remove(lastInlineParent);
                }
            }
            if (isBlock && is(node, list) && is(node.parentNode, list)) {
                var li = previousElementSibling(node, 'li');
                if (!li) {
                    li = createElement('li');
                    insertBefore(li, node);
                }
                appendChild(li, node);
            }
        });
    }
    function findCommonAncestor(node1, node2) {
        while ((node1 = node1.parentNode)) {
            if (contains(node1, node2)) {
                return node1;
            }
        }
    }
    function getSibling(node, previous) {
        if (!node) {
            return null;
        }
        return (previous ? node.previousSibling : node.nextSibling) || getSibling(node.parentNode, previous);
    }
    function removeWhiteSpace(root) {
        var nodeValue, nodeType, next, previous, previousSibling, nextNode, trimStart, cssWhiteSpace = css(root, 'whiteSpace'), preserveNewLines = /line$/i.test(cssWhiteSpace), node = root.firstChild;
        if (/pre(\-wrap)?$/i.test(cssWhiteSpace)) {
            return;
        }
        while (node) {
            nextNode = node.nextSibling;
            nodeValue = node.nodeValue;
            nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE && node.firstChild) {
                removeWhiteSpace(node);
            }
            if (nodeType === TEXT_NODE) {
                next = getSibling(node);
                previous = getSibling(node, true);
                trimStart = false;
                while (hasClass(previous, 'sceditor-ignore')) {
                    previous = getSibling(previous, true);
                }
                if (isInline(node) && previous) {
                    previousSibling = previous;
                    while (previousSibling.lastChild) {
                        previousSibling = previousSibling.lastChild;
                        while (hasClass(previousSibling, 'sceditor-ignore')) {
                            previousSibling = getSibling(previousSibling, true);
                        }
                    }
                    trimStart = previousSibling.nodeType === TEXT_NODE ? /[\t\n\r ]$/.test(previousSibling.nodeValue) : !isInline(previousSibling);
                }
                nodeValue = nodeValue.replace(/\u200B/g, '');
                if (!previous || !isInline(previous) || trimStart) {
                    nodeValue = nodeValue.replace(preserveNewLines ? /^[\t ]+/ : /^[\t\n\r ]+/, '');
                }
                if (!next || !isInline(next)) {
                    nodeValue = nodeValue.replace(preserveNewLines ? /[\t ]+$/ : /[\t\n\r ]+$/, '');
                }
                if (!nodeValue.length) {
                    remove(node);
                } else {
                    node.nodeValue = nodeValue.replace(preserveNewLines ? /[\t ]+/g : /[\t\n\r ]+/g, ' ');
                }
            }
            node = nextNode;
        }
    }
    function extractContents(startNode, endNode) {
        var range = startNode.ownerDocument.createRange();
        range.setStartBefore(startNode);
        range.setEndAfter(endNode);
        return range.extractContents();
    }
    function getOffset(node) {
        var left = 0
          , top = 0;
        while (node) {
            left += node.offsetLeft;
            top += node.offsetTop;
            node = node.offsetParent;
        }
        return {
            left: left,
            top: top
        };
    }
    function getStyle(elm, property) {
        var styleValue, elmStyle = elm.style;
        if (!cssPropertyNameCache[property]) {
            cssPropertyNameCache[property] = camelCase(property);
        }
        property = cssPropertyNameCache[property];
        styleValue = elmStyle[property];
        if ('textAlign' === property) {
            styleValue = styleValue || css(elm, property);
            if (css(elm.parentNode, property) === styleValue || css(elm, 'display') !== 'block' || is(elm, 'hr,th')) {
                return '';
            }
        }
        return styleValue;
    }
    function hasStyle(elm, property, values) {
        var styleValue = getStyle(elm, property);
        if (!styleValue) {
            return false;
        }
        return !values || styleValue === values || (Array.isArray(values) && values.indexOf(styleValue) > -1);
    }
    function stylesMatch(nodeA, nodeB) {
        var i = nodeA.style.length;
        if (i !== nodeB.style.length) {
            return false;
        }
        while (i--) {
            var prop = nodeA.style[i];
            if (nodeA.style[prop] !== nodeB.style[prop]) {
                return false;
            }
        }
        return true;
    }
    function attributesMatch(nodeA, nodeB) {
        var i = nodeA.attributes.length;
        if (i !== nodeB.attributes.length) {
            return false;
        }
        while (i--) {
            var prop = nodeA.attributes[i];
            var notMatches = prop.name === 'style' ? !stylesMatch(nodeA, nodeB) : prop.value !== attr(nodeB, prop.name);
            if (notMatches) {
                return false;
            }
        }
        return true;
    }
    function removeKeepChildren(node) {
        while (node.firstChild) {
            insertBefore(node.firstChild, node);
        }
        remove(node);
    }
    function merge(node) {
        if (node.nodeType !== ELEMENT_NODE) {
            return;
        }
        var parent = node.parentNode;
        var tagName = node.tagName;
        var mergeTags = /B|STRONG|EM|SPAN|FONT/;
        var i = node.childNodes.length;
        while (i--) {
            merge(node.childNodes[i]);
        }
        if (!isInline(node) || tagName === 'BR') {
            return;
        }
        i = node.style.length;
        while (i--) {
            var prop = node.style[i];
            if (css(parent, prop) === css(node, prop)) {
                node.style.removeProperty(prop);
            }
        }
        if (!node.style.length) {
            removeAttr(node, 'style');
            if (tagName === 'FONT') {
                if (css(node, 'fontFamily').toLowerCase() === css(parent, 'fontFamily').toLowerCase()) {
                    removeAttr(node, 'face');
                }
                if (css(node, 'color') === css(parent, 'color')) {
                    removeAttr(node, 'color');
                }
                if (css(node, 'fontSize') === css(parent, 'fontSize')) {
                    removeAttr(node, 'size');
                }
            }
            if (!node.attributes.length && /SPAN|FONT/.test(tagName)) {
                removeKeepChildren(node);
            } else if (mergeTags.test(tagName)) {
                var isBold = /B|STRONG/.test(tagName);
                var isItalic = tagName === 'EM';
                while (parent && isInline(parent) && (!isBold || /bold|700/i.test(css(parent, 'fontWeight'))) && (!isItalic || css(parent, 'fontStyle') === 'italic')) {
                    if ((parent.tagName === tagName || (isBold && /B|STRONG/.test(parent.tagName))) && attributesMatch(parent, node)) {
                        removeKeepChildren(node);
                        break;
                    }
                    parent = parent.parentNode;
                }
            }
        }
        var next = node.nextSibling;
        if (next && next.tagName === tagName && attributesMatch(next, node)) {
            appendChild(node, next);
            removeKeepChildren(next);
        }
    }
    var defaultOptions = {
        toolbar: 'bold,italic,underline,strike,subscript,superscript|' + 'left,center,right,justify|font,size,color,removeformat|' + 'cut,copy,pastetext|bulletlist,orderedlist,indent,outdent|' + 'table|code,quote|horizontalrule,image,email,link,unlink|' + 'emoticon,youtube,date,time|ltr,rtl|print,maximize,source',
        toolbarExclude: null,
        style: 'jquery.sceditor.default.css',
        fonts: 'Arial,Arial Black,Comic Sans MS,Courier New,Georgia,Impact,' + 'Sans-serif,Serif,Times New Roman,Trebuchet MS,Verdana',
        colors: '#000000,#44B8FF,#1E92F7,#0074D9,#005DC2,#00369B,#b3d5f4|' + '#444444,#C3FFFF,#9DF9FF,#7FDBFF,#68C4E8,#419DC1,#d9f4ff|' + '#666666,#72FF84,#4CEA5E,#2ECC40,#17B529,#008E02,#c0f0c6|' + '#888888,#FFFF44,#FFFA1E,#FFDC00,#E8C500,#C19E00,#fff5b3|' + '#aaaaaa,#FFC95F,#FFA339,#FF851B,#E86E04,#C14700,#ffdbbb|' + '#cccccc,#FF857A,#FF5F54,#FF4136,#E82A1F,#C10300,#ffc6c3|' + '#eeeeee,#FF56FF,#FF30DC,#F012BE,#D900A7,#B20080,#fbb8ec|' + '#ffffff,#F551FF,#CF2BE7,#B10DC9,#9A00B2,#9A00B2,#e8b6ef',
        locale: attr(document.documentElement, 'lang') || 'en',
        charset: 'utf-8',
        emoticonsCompat: false,
        emoticonsEnabled: true,
        emoticonsRoot: '',
        emoticons: {
            dropdown: {
                ':)': 'emoticons/smile.png',
                ':angel:': 'emoticons/angel.png',
                ':angry:': 'emoticons/angry.png',
                '8-)': 'emoticons/cool.png',
                ':\'(': 'emoticons/cwy.png',
                ':ermm:': 'emoticons/ermm.png',
                ':D': 'emoticons/grin.png',
                '<3': 'emoticons/heart.png',
                ':(': 'emoticons/sad.png',
                ':O': 'emoticons/shocked.png',
                ':P': 'emoticons/tongue.png',
                ';)': 'emoticons/wink.png'
            },
            more: {
                ':alien:': 'emoticons/alien.png',
                ':blink:': 'emoticons/blink.png',
                ':blush:': 'emoticons/blush.png',
                ':cheerful:': 'emoticons/cheerful.png',
                ':devil:': 'emoticons/devil.png',
                ':dizzy:': 'emoticons/dizzy.png',
                ':getlost:': 'emoticons/getlost.png',
                ':happy:': 'emoticons/happy.png',
                ':kissing:': 'emoticons/kissing.png',
                ':ninja:': 'emoticons/ninja.png',
                ':pinch:': 'emoticons/pinch.png',
                ':pouty:': 'emoticons/pouty.png',
                ':sick:': 'emoticons/sick.png',
                ':sideways:': 'emoticons/sideways.png',
                ':silly:': 'emoticons/silly.png',
                ':sleeping:': 'emoticons/sleeping.png',
                ':unsure:': 'emoticons/unsure.png',
                ':woot:': 'emoticons/w00t.png',
                ':wassat:': 'emoticons/wassat.png'
            },
            hidden: {
                ':whistling:': 'emoticons/whistling.png',
                ':love:': 'emoticons/wub.png'
            }
        },
        width: null,
        height: null,
        resizeEnabled: true,
        resizeMinWidth: null,
        resizeMinHeight: null,
        resizeMaxHeight: null,
        resizeMaxWidth: null,
        resizeHeight: true,
        resizeWidth: true,
        dateFormat: 'year-month-day',
        toolbarContainer: null,
        enablePasteFiltering: false,
        disablePasting: false,
        readOnly: false,
        rtl: false,
        autofocus: false,
        autofocusEnd: true,
        autoExpand: false,
        autoUpdate: false,
        spellcheck: true,
        runWithoutWysiwygSupport: false,
        startInSourceMode: false,
        id: null,
        plugins: '',
        zIndex: null,
        bbcodeTrim: false,
        disableBlockRemove: false,
        allowedIframeUrls: [],
        parserOptions: {},
        dropDownCss: {},
        allowedTags: [],
        allowedAttributes: []
    };
    var VALID_SCHEME_REGEX = /^(https?|s?ftp|mailto|spotify|skype|ssh|teamspeak|tel):|(\/\/)|data:image\/(png|bmp|gif|p?jpe?g);/i;
    function regex(str) {
        return str.replace(/([\-.*+?^=!:${}()|\[\]\/\\])/g, '\\$1');
    }
    function entities(str, noQuotes) {
        if (!str) {
            return str;
        }
        var replacements = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '  ': '&nbsp; ',
            '\r\n': '<br />',
            '\r': '<br />',
            '\n': '<br />'
        };
        if (noQuotes !== false) {
            replacements['"'] = '&#34;';
            replacements['\''] = '&#39;';
            replacements['`'] = '&#96;';
        }
        str = str.replace(/ {2}|\r\n|[&<>\r\n'"`]/g, function(match) {
            return replacements[match] || match;
        });
        return str;
    }
    function uriScheme(url) {
        var path, hasScheme = /^[^\/]*:/i, location = window.location;
        if ((!url || !hasScheme.test(url)) || VALID_SCHEME_REGEX.test(url)) {
            return url;
        }
        path = location.pathname.split('/');
        path.pop();
        return location.protocol + '//' + location.host + path.join('/') + '/' + url;
    }
    var _templates = {
        html: '<!DOCTYPE html>' + '<html{attrs}>' + '<head>' + '<meta http-equiv="Content-Type" ' + 'content="text/html;charset={charset}" />' + '<link rel="stylesheet" type="text/css" href="{style}" />' + '</head>' + '<body contenteditable="true" {spellcheck}><p></p></body>' + '</html>',
        toolbarButton: '<a class="sceditor-button sceditor-button-{name}" ' + 'data-sceditor-command="{name}" unselectable="on">' + '<div unselectable="on">{dispName}</div></a>',
        emoticon: '<img src="{url}" data-sceditor-emoticon="{key}" ' + 'alt="{key}" title="{tooltip}" />',
        fontOpt: '<a class="sceditor-font-option" href="#" ' + 'data-font="{font}"><font face="{font}">{font}</font></a>',
        sizeOpt: '<a class="sceditor-fontsize-option" data-size="{size}" ' + 'href="#"><font size="{size}">{size}</font></a>',
        pastetext: '<div><label for="txt">{label}</label> ' + '<textarea cols="20" rows="7" id="txt"></textarea></div>' + '<div><input type="button" class="button" value="{insert}" />' + '</div>',
        table: '<div><label for="rows">{rows}</label><input type="text" ' + 'id="rows" value="2" style=" color: black;" /></div>' + '<div><label for="cols">{cols}</label><input type="text" ' + 'id="cols" value="2" style=" color: black;"/></div>' + '<div><input type="button" class="button" value="{insert}"' + ' /></div>',
        image: '<div style="font-size: 0.9em"><div id="imageuploadError"></div>' + '<div><label for="imageupload">Image ou Vidéo</label> ' + '<input type="file" id="imageupload" dir="ltr"/></div>' + '<div><label for="image">Ou {url}</label> ' + '<input type="text" id="image" dir="ltr" placeholder="https://" style="font-size: 0.8em; color: black;" /></div>' + '<div><label for="width">{width}</label> ' + '<input type="text" id="width" size="2" dir="ltr" style="font-size: 0.8em; width: 4em; color: black;"/></div>' + '<div><label for="height">{height}</label> ' + '<input type="text" id="height" size="2" dir="ltr" style="font-size: 0.8em; width: 4em; color: black;" /></div>' + '<div><input type="button" class="button" value="{insert}" />' + '</div></div>',
        file: '<div style="font-size: 0.9em"><div id="imageuploadError"></div>' + '<div><label for="imageupload">Joindre un fichier</label> ' + '<input type="file" id="imageupload" dir="ltr"/></div>' + '<div><input type="button" class="button" value="{insert}" />' + '</div></div>',
        email: '<div><label for="email">{label}</label> ' + '<input type="text" id="email" dir="ltr" style=" color: black;"/></div>' + '<div><label for="des">{desc}</label> ' + '<input type="text" id="des" style=" color: black;"/></div>' + '<div><input type="button" class="button" value="{insert}" />' + '</div>',
        link: '<div><label for="link">{url}</label> ' + '<input type="text" id="link" dir="ltr" placeholder="https://" style=" color: black;"/></div>' + '<div><label for="des">{desc}</label> ' + '<input type="text" id="des" style=" color: black;"/></div>' + '<div><input type="button" class="button" value="{ins}" /></div>',
        youtubeMenu: '<div><label for="link">{label}</label> ' + '<input type="text" id="link" dir="ltr" placeholder="https://" style=" color: black;"/></div>' + '<div><input type="button" class="button" value="{insert}" />' + '</div>',
        youtube: '<iframe width="560" height="315" frameborder="0" allowfullscreen ' + 'src="https://www.youtube-nocookie.com/embed/{id}?wmode=opaque&start={time}" ' + 'data-youtube-id="{id}"></iframe>'
    };
    function _tmpl(name, params, createHtml) {
        var template = _templates[name];
        Object.keys(params).forEach(function(name) {
            template = template.replace(new RegExp(regex('{' + name + '}'),'g'), params[name]);
        });
        if (createHtml) {
            template = parseHTML(template);
        }
        return template;
    }
    function fixFirefoxListBug(editor) {
        if ('mozHidden'in document) {
            var node = editor.getBody();
            var next;
            while (node) {
                next = node;
                if (next.firstChild) {
                    next = next.firstChild;
                } else {
                    while (next && !next.nextSibling) {
                        next = next.parentNode;
                    }
                    if (next) {
                        next = next.nextSibling;
                    }
                }
                if (node.nodeType === 3 && /[\n\r\t]+/.test(node.nodeValue)) {
                    if (!/^pre/.test(css(node.parentNode, 'whiteSpace'))) {
                        remove(node);
                    }
                }
                node = next;
            }
        }
    }
    var defaultCmds = {
        bold: {
            exec: 'bold',
            tooltip: 'Bold',
            shortcut: 'Ctrl+B'
        },
        italic: {
            exec: 'italic',
            tooltip: 'Italic',
            shortcut: 'Ctrl+I'
        },
        underline: {
            exec: 'underline',
            tooltip: 'Underline',
            shortcut: 'Ctrl+U'
        },
        strike: {
            exec: 'strikethrough',
            tooltip: 'Strikethrough'
        },
        subscript: {
            exec: 'subscript',
            tooltip: 'Subscript'
        },
        superscript: {
            exec: 'superscript',
            tooltip: 'Superscript'
        },
        left: {
            state: function(node) {
                if (node && node.nodeType === 3) {
                    node = node.parentNode;
                }
                if (node) {
                    var isLtr = css(node, 'direction') === 'ltr';
                    var align = css(node, 'textAlign');
                    return /left/.test(align) || align === (isLtr ? 'start' : 'end');
                }
            },
            exec: 'justifyleft',
            tooltip: 'Align left'
        },
        center: {
            exec: 'justifycenter',
            tooltip: 'Center'
        },
        right: {
            state: function(node) {
                if (node && node.nodeType === 3) {
                    node = node.parentNode;
                }
                if (node) {
                    var isLtr = css(node, 'direction') === 'ltr';
                    var align = css(node, 'textAlign');
                    return /right/.test(align) || align === (isLtr ? 'end' : 'start');
                }
            },
            exec: 'justifyright',
            tooltip: 'Align right'
        },
        justify: {
            exec: 'justifyfull',
            tooltip: 'Justify'
        },
        font: {
            _dropDown: function(editor, caller, callback) {
                var content = createElement('div');
                on(content, 'click', 'a', function(e) {
                    callback(data(this, 'font'));
                    editor.closeDropDown(true);
                    e.preventDefault();
                });
                editor.opts.fonts.split(',').forEach(function(font) {
                    appendChild(content, _tmpl('fontOpt', {
                        font: font
                    }, true));
                });
                editor.createDropDown(caller, 'font-picker', content);
            },
            exec: function(caller) {
                var editor = this;
                defaultCmds.font._dropDown(editor, caller, function(fontName) {
                    editor.execCommand('fontname', fontName);
                });
            },
            tooltip: 'Font Name'
        },
        size: {
            _dropDown: function(editor, caller, callback) {
                var content = createElement('div');
                on(content, 'click', 'a', function(e) {
                    callback(data(this, 'size'));
                    editor.closeDropDown(true);
                    e.preventDefault();
                });
                for (var i = 1; i <= 7; i++) {
                    appendChild(content, _tmpl('sizeOpt', {
                        size: i
                    }, true));
                }
                editor.createDropDown(caller, 'fontsize-picker', content);
            },
            exec: function(caller) {
                var editor = this;
                defaultCmds.size._dropDown(editor, caller, function(fontSize) {
                    editor.execCommand('fontsize', fontSize);
                });
            },
            tooltip: 'Font Size'
        },
        color: {
            _dropDown: function(editor, caller, callback) {
                var content = createElement('div')
                  , html = ''
                  , cmd = defaultCmds.color;
                if (!cmd._htmlCache) {
                    editor.opts.colors.split('|').forEach(function(column) {
                        html += '<div class="sceditor-color-column">';
                        column.split(',').forEach(function(color) {
                            html += '<a href="#" class="sceditor-color-option"' + ' style="background-color: ' + color + '"' + ' data-color="' + color + '"></a>';
                        });
                        html += '</div>';
                    });
                    cmd._htmlCache = html;
                }
                appendChild(content, parseHTML(cmd._htmlCache));
                on(content, 'click', 'a', function(e) {
                    callback(data(this, 'color'));
                    editor.closeDropDown(true);
                    e.preventDefault();
                });
                editor.createDropDown(caller, 'color-picker', content);
            },
            exec: function(caller) {
                var editor = this;
                defaultCmds.color._dropDown(editor, caller, function(color) {
                    editor.execCommand('forecolor', color);
                });
            },
            tooltip: 'Font Color'
        },
        removeformat: {
            exec: 'removeformat',
            tooltip: 'Remove Formatting'
        },
        cut: {
            exec: 'cut',
            tooltip: 'Cut',
            errorMessage: 'Your browser does not allow the cut command. ' + 'Please use the keyboard shortcut Ctrl/Cmd-X'
        },
        copy: {
            exec: 'copy',
            tooltip: 'Copy',
            errorMessage: 'Your browser does not allow the copy command. ' + 'Please use the keyboard shortcut Ctrl/Cmd-C'
        },
        paste: {
            exec: 'paste',
            tooltip: 'Paste',
            errorMessage: 'Your browser does not allow the paste command. ' + 'Please use the keyboard shortcut Ctrl/Cmd-V'
        },
        pastetext: {
            exec: function(caller) {
                var val, content = createElement('div'), editor = this;
                appendChild(content, _tmpl('pastetext', {
                    label: editor._('Paste your text inside the following box:'),
                    insert: editor._('Insert')
                }, true));
                on(content, 'click', '.button', function(e) {
                    val = find(content, '#txt')[0].value;
                    if (val) {
                        editor.wysiwygEditorInsertText(val);
                    }
                    editor.closeDropDown(true);
                    e.preventDefault();
                });
                editor.createDropDown(caller, 'pastetext', content);
            },
            tooltip: 'Paste Text'
        },
        bulletlist: {
            exec: function() {
                fixFirefoxListBug(this);
                this.execCommand('insertunorderedlist');
            },
            tooltip: 'Bullet list'
        },
        orderedlist: {
            exec: function() {
                fixFirefoxListBug(this);
                this.execCommand('insertorderedlist');
            },
            tooltip: 'Numbered list'
        },
        indent: {
            state: function(parent, firstBlock) {
                var range, startParent, endParent;
                if (is(firstBlock, 'li')) {
                    return 0;
                }
                if (is(firstBlock, 'ul,ol,menu')) {
                    range = this.getRangeHelper().selectedRange();
                    startParent = range.startContainer.parentNode;
                    endParent = range.endContainer.parentNode;
                    if (startParent !== startParent.parentNode.firstElementChild || (is(endParent, 'li') && endParent !== endParent.parentNode.lastElementChild)) {
                        return 0;
                    }
                }
                return -1;
            },
            exec: function() {
                var editor = this
                  , block = editor.getRangeHelper().getFirstBlockParent();
                editor.focus();
                if (closest(block, 'ul,ol,menu')) {
                    editor.execCommand('indent');
                }
            },
            tooltip: 'Add indent'
        },
        outdent: {
            state: function(parents, firstBlock) {
                return closest(firstBlock, 'ul,ol,menu') ? 0 : -1;
            },
            exec: function() {
                var block = this.getRangeHelper().getFirstBlockParent();
                if (closest(block, 'ul,ol,menu')) {
                    this.execCommand('outdent');
                }
            },
            tooltip: 'Remove one indent'
        },
        table: {
            exec: function(caller) {
                var editor = this
                  , content = createElement('div');
                appendChild(content, _tmpl('table', {
                    rows: editor._('Rows:'),
                    cols: editor._('Cols:'),
                    insert: editor._('Insert')
                }, true));
                var xooitFct = function(e) {
                    var rows = Number(find(content, '#rows')[0].value)
                      , cols = Number(find(content, '#cols')[0].value)
                      , html = '<table>';
                    if (rows > 0 && cols > 0) {
                        html += Array(rows + 1).join('<tr>' + Array(cols + 1).join('<td><br /></td>') + '</tr>');
                        html += '</table>';
                        editor.wysiwygEditorInsertHtml(html);
                    }
                    editor.closeDropDown(true);
                    e.preventDefault();
                };
                on(content, 'click', '.button', xooitFct);
                on(content, 'keypress', function(e) {
                    if (e.which === 13) {
                        xooitFct(e);
                    }
                }, EVENT_CAPTURE);
                editor.createDropDown(caller, 'inserttable', content);
            },
            tooltip: 'Insert a table'
        },
        horizontalrule: {
            exec: 'inserthorizontalrule',
            tooltip: 'Insert a horizontal rule'
        },
        code: {
            exec: function() {
                this.wysiwygEditorInsertHtml('<code>', '<br /></code>');
            },
            tooltip: 'Code'
        },
        image: {
            _dropDown: function(editor, caller, selected, cb, uploadType) {
                if (typeof uploadType == 'undefined')
                    uploadType = '';
                var content = createElement('div');
                appendChild(content, _tmpl((uploadType == 'file' ? 'file' : 'image'), {
                    url: editor._('URL:'),
                    width: editor._('Width (optional):'),
                    height: editor._('Height (optional):'),
                    insert: editor._('Insert')
                }, true));
                try {
                    var urlInput = find(content, '#image')[0];
                    urlInput.value = selected;
                } catch (e) {
                    var urlInput = {
                        'value': ''
                    };
                }
                ;var xooitFct = function(e) {
                    if (urlInput.value) {
                        cb(editor, urlInput.value, find(content, '#width')[0].value, find(content, '#height')[0].value);
                    } else {
                        var fd = new FormData();
                        var files = jQuery('#imageupload')[0].files[0];
                        var upload_max_file_size = USERPERMS.upload_max_file_size * 1024 * 1024;
                        if (files.size > upload_max_file_size) {
                            alertPremium({
                                'error': 'upload_image',
                                'filesize': (Math.round(files.size / 1024 / 1024 * 10) / 10) + 'Mo',
                                'maxfilesize': USERPERMS.upload_max_file_size + 'Mo'
                            });
                            return false;
                        }
                        fd.append('upload', files);
                        fd.append('rci', upload_userdata_rci);
                        fd.append('ajaxed', 1);
                        showLoading();
                        jQuery.ajax({
                            url: '/upload_frame_xooimage.php',
                            type: 'post',
                            data: fd,
                            contentType: false,
                            processData: false,
                            complete: function() {
                                hideLoading();
                            },
                            success: function(response) {
                                if (response.err) {
                                    jQuery('#imageuploadError').html(response.errstr);
                                } else {
                                    cb(editor, response.code, (uploadType == 'file' ? '' : find(content, '#width')[0].value), (uploadType == 'file' ? '' : find(content, '#height')[0].value), response.knownDatas);
                                    editor.closeDropDown(true);
                                }
                            },
                        });
                        e.preventDefault();
                        return;
                    }
                    editor.closeDropDown(true);
                    e.preventDefault();
                };
                on(content, 'click', '.button', xooitFct);
                on(content, 'keypress', function(e) {
                    if (e.which === 13) {
                        xooitFct(e);
                    }
                }, EVENT_CAPTURE);
                editor.createDropDown(caller, 'insertimage', content);
            },
            exec: function(caller) {
                var editor = this;
                defaultCmds.image._dropDown(editor, caller, '', function(url, width, height) {
                    var attrs = '';
                    if (width) {
                        attrs += ' width="' + parseInt(width, 10) + '"';
                    }
                    if (height) {
                        attrs += ' height="' + parseInt(height, 10) + '"';
                    }
                    attrs += ' src="' + entities(url) + '"';
                    editor.wysiwygEditorInsertHtml('<img' + attrs + ' />');
                });
            },
            tooltip: 'Insert an image'
        },
        email: {
            _dropDown: function(editor, caller, cb) {
                var content = createElement('div');
                appendChild(content, _tmpl('email', {
                    label: editor._('E-mail:'),
                    desc: editor._('Description (optional):'),
                    insert: editor._('Insert')
                }, true));
                var xooitFct = function(e) {
                    var email = find(content, '#email')[0].value;
                    if (email) {
                        cb(email, find(content, '#des')[0].value);
                    }
                    editor.closeDropDown(true);
                    e.preventDefault();
                };
                on(content, 'click', '.button', xooitFct);
                on(content, 'keypress', function(e) {
                    if (e.which === 13) {
                        xooitFct(e);
                    }
                }, EVENT_CAPTURE);
                editor.createDropDown(caller, 'insertemail', content);
            },
            exec: function(caller) {
                var editor = this;
                defaultCmds.email._dropDown(editor, caller, function(email, text) {
                    if (!editor.getRangeHelper().selectedHtml() || text) {
                        editor.wysiwygEditorInsertHtml('<a href="' + 'mailto:' + entities(email) + '">' + entities((text || email)) + '</a>');
                    } else {
                        editor.execCommand('createlink', 'mailto:' + email);
                    }
                });
            },
            tooltip: 'Insert an email'
        },
        link: {
            _dropDown: function(editor, caller, cb) {
                var content = createElement('div');
                appendChild(content, _tmpl('link', {
                    url: editor._('URL:'),
                    desc: editor._('Description (optional):'),
                    ins: editor._('Insert')
                }, true));
                var linkInput = find(content, '#link')[0];
                function insertUrl(e) {
                    if (linkInput.value) {
                        cb(linkInput.value, find(content, '#des')[0].value);
                    }
                    editor.closeDropDown(true);
                    e.preventDefault();
                }
                on(content, 'click', '.button', insertUrl);
                on(content, 'keypress', function(e) {
                    if (e.which === 13) {
                        insertUrl(e);
                    }
                }, EVENT_CAPTURE);
                editor.createDropDown(caller, 'insertlink', content);
            },
            exec: function(caller) {
                var editor = this;
                defaultCmds.link._dropDown(editor, caller, function(url, text) {
                    if (text || !editor.getRangeHelper().selectedHtml()) {
                        editor.wysiwygEditorInsertHtml('<a href="' + entities(url) + '">' + entities(text || url) + '</a>');
                    } else {
                        editor.execCommand('createlink', url);
                    }
                });
            },
            tooltip: 'Insert a link'
        },
        unlink: {
            state: function() {
                return closest(this.currentNode(), 'a') ? 0 : -1;
            },
            exec: function() {
                var anchor = closest(this.currentNode(), 'a');
                if (anchor) {
                    while (anchor.firstChild) {
                        insertBefore(anchor.firstChild, anchor);
                    }
                    remove(anchor);
                }
            },
            tooltip: 'Unlink'
        },
        quote: {
            exec: function(caller, html, author) {
                var before = '<blockquote>'
                  , end = '</blockquote>';
                if (html) {
                    author = (author ? '<cite>' + entities(author) + '</cite>' : '');
                    before = before + author + html + end;
                    end = null;
                } else if (this.getRangeHelper().selectedHtml() === '') {
                    end = '<br />' + end;
                }
                this.wysiwygEditorInsertHtml(before, end);
            },
            tooltip: 'Insert a Quote'
        },
        emoticon: {
            exec: function(caller) {
                var editor = this;
                var createContent = function(includeMore) {
                    var moreLink, opts = editor.opts, emoticonsRoot = opts.emoticonsRoot || '', emoticonsCompat = opts.emoticonsCompat, rangeHelper = editor.getRangeHelper(), startSpace = emoticonsCompat && rangeHelper.getOuterText(true, 1) !== ' ' ? ' ' : '', endSpace = emoticonsCompat && rangeHelper.getOuterText(false, 1) !== ' ' ? ' ' : '', content = createElement('div'), line = createElement('div'), perLine = 0, emoticons = extend({}, opts.emoticons.dropdown, includeMore ? opts.emoticons.more : {});
                    appendChild(content, line);
                    perLine = Math.sqrt(Object.keys(emoticons).length);
                    on(content, 'click', 'img', function(e) {
                        editor.insert(startSpace + attr(this, 'alt') + endSpace, null, false).closeDropDown(true);
                        e.preventDefault();
                    });
                    each(emoticons, function(code, emoticon) {
                        appendChild(line, createElement('img', {
                            src: emoticonsRoot + (emoticon.url || emoticon),
                            alt: code,
                            title: emoticon.tooltip || code
                        }));
                        if (line.children.length >= perLine) {
                            line = createElement('div');
                            appendChild(content, line);
                        }
                    });
                    if (!includeMore && opts.emoticons.more) {
                        moreLink = createElement('a', {
                            className: 'sceditor-more'
                        });
                        appendChild(moreLink, document.createTextNode(editor._('More')));
                        on(moreLink, 'click', function(e) {
                            editor.createDropDown(caller, 'more-emoticons', createContent(true));
                            e.preventDefault();
                        });
                        appendChild(content, moreLink);
                    }
                    return content;
                };
                var createContentXooitStyle = function() {
                    var opts = editor.opts
                      , emoticonsRoot = opts.emoticonsRoot || ''
                      , emoticonsCompat = opts.emoticonsCompat
                      , rangeHelper = editor.getRangeHelper()
                      , startSpace = emoticonsCompat && rangeHelper.getOuterText(true, 1) !== ' ' ? ' ' : ''
                      , endSpace = emoticonsCompat && rangeHelper.getOuterText(false, 1) !== ' ' ? ' ' : ''
                      , content = jQuery('<div style="display: flex;gap: 5px;flex-wrap: wrap;flex-direction: row;justify-content: space-between;align-items: center;min-width: 300px;max-width: 400px;overflow: auto;max-height: 200px;">')[0]
                      , emoticons = extend({}, opts.emoticons.dropdown, opts.emoticons.more);
                    on(content, 'click', 'img', function(e) {
                        editor.insert(startSpace + attr(this, 'alt') + endSpace, null, false).closeDropDown(true);
                        e.preventDefault();
                    });
                    each(opts.emoticons.xooitStyle, function(i, categorie) {
                        console.log(categorie);
                        var catTitle = jQuery('<div style="font-weight: bold; width: 100%; padding: 10px; border-bottom: 1px solid silver; margin-top: 5px;"></div>');
                        catTitle.html(categorie.name);
                        appendChild(content, catTitle[0]);
                        each(categorie.list, function(code, emoticon) {
                            appendChild(content, createElement('img', {
                                src: emoticonsRoot + (emoticon.url || emoticon),
                                alt: code,
                                title: emoticon.tooltip || code
                            }));
                        });
                    });
                    return content;
                };
                editor.createDropDown(caller, 'emoticons', createContentXooitStyle());
            },
            txtExec: function(caller) {
                defaultCmds.emoticon.exec.call(this, caller);
            },
            tooltip: 'Insert an emoticon'
        },
        youtube: {
            _dropDown: function(editor, caller, callback) {
                var content = createElement('div');
                appendChild(content, _tmpl('youtubeMenu', {
                    label: editor._('Video URL:'),
                    insert: editor._('Insert')
                }, true));
                var xooitFct = function(e) {
                    var val = find(content, '#link')[0].value;
                    var idMatch = val.match(/(?:v=|v\/|embed\/|youtu.be\/)?([a-zA-Z0-9_-]{11})/);
                    var timeMatch = val.match(/[&|?](?:star)?t=((\d+[hms]?){1,3})/);
                    var time = 0;
                    if (timeMatch) {
                        each(timeMatch[1].split(/[hms]/), function(i, val) {
                            if (val !== '') {
                                time = (time * 60) + Number(val);
                            }
                        });
                    }
                    if (idMatch && /^[a-zA-Z0-9_\-]{11}$/.test(idMatch[1])) {
                        callback(idMatch[1], time);
                    }
                    editor.closeDropDown(true);
                    e.preventDefault();
                };
                on(content, 'click', '.button', xooitFct);
                on(content, 'keypress', function(e) {
                    if (e.which === 13) {
                        xooitFct(e);
                    }
                }, EVENT_CAPTURE);
                editor.createDropDown(caller, 'insertlink', content);
            },
            exec: function(btn) {
                var editor = this;
                defaultCmds.youtube._dropDown(editor, btn, function(id, time) {
                    editor.wysiwygEditorInsertHtml(_tmpl('youtube', {
                        id: id,
                        time: time
                    }));
                });
            },
            tooltip: 'Insert a YouTube video'
        },
        date: {
            _date: function(editor) {
                var now = new Date()
                  , year = now.getYear()
                  , month = now.getMonth() + 1
                  , day = now.getDate();
                if (year < 2000) {
                    year = 1900 + year;
                }
                if (month < 10) {
                    month = '0' + month;
                }
                if (day < 10) {
                    day = '0' + day;
                }
                return editor.opts.dateFormat.replace(/year/i, year).replace(/month/i, month).replace(/day/i, day);
            },
            exec: function() {
                this.insertText(defaultCmds.date._date(this));
            },
            txtExec: function() {
                this.insertText(defaultCmds.date._date(this));
            },
            tooltip: 'Insert current date'
        },
        time: {
            _time: function() {
                var now = new Date()
                  , hours = now.getHours()
                  , mins = now.getMinutes()
                  , secs = now.getSeconds();
                if (hours < 10) {
                    hours = '0' + hours;
                }
                if (mins < 10) {
                    mins = '0' + mins;
                }
                if (secs < 10) {
                    secs = '0' + secs;
                }
                return hours + ':' + mins + ':' + secs;
            },
            exec: function() {
                this.insertText(defaultCmds.time._time());
            },
            txtExec: function() {
                this.insertText(defaultCmds.time._time());
            },
            tooltip: 'Insert current time'
        },
        ltr: {
            state: function(parents, firstBlock) {
                return firstBlock && firstBlock.style.direction === 'ltr';
            },
            exec: function() {
                var editor = this
                  , rangeHelper = editor.getRangeHelper()
                  , node = rangeHelper.getFirstBlockParent();
                editor.focus();
                if (!node || is(node, 'body')) {
                    editor.execCommand('formatBlock', 'p');
                    node = rangeHelper.getFirstBlockParent();
                    if (!node || is(node, 'body')) {
                        return;
                    }
                }
                var toggleValue = css(node, 'direction') === 'ltr' ? '' : 'ltr';
                css(node, 'direction', toggleValue);
            },
            tooltip: 'Left-to-Right'
        },
        rtl: {
            state: function(parents, firstBlock) {
                return firstBlock && firstBlock.style.direction === 'rtl';
            },
            exec: function() {
                var editor = this
                  , rangeHelper = editor.getRangeHelper()
                  , node = rangeHelper.getFirstBlockParent();
                editor.focus();
                if (!node || is(node, 'body')) {
                    editor.execCommand('formatBlock', 'p');
                    node = rangeHelper.getFirstBlockParent();
                    if (!node || is(node, 'body')) {
                        return;
                    }
                }
                var toggleValue = css(node, 'direction') === 'rtl' ? '' : 'rtl';
                css(node, 'direction', toggleValue);
            },
            tooltip: 'Right-to-Left'
        },
        print: {
            exec: 'print',
            tooltip: 'Print'
        },
        maximize: {
            state: function() {
                return this.maximize();
            },
            exec: function() {
                this.maximize(!this.maximize());
                this.focus();
            },
            txtExec: function() {
                this.maximize(!this.maximize());
                this.focus();
            },
            tooltip: 'Maximize',
            shortcut: 'Ctrl+Shift+M'
        },
        source: {
            state: function() {
                return this.sourceMode();
            },
            exec: function() {
                this.toggleSourceMode();
                this.focus();
            },
            txtExec: function() {
                this.toggleSourceMode();
                this.focus();
            },
            tooltip: 'View source',
            shortcut: 'Ctrl+Shift+S'
        },
        ignore: {}
    };
    var plugins = {};
    function PluginManager(thisObj) {
        var base = this;
        var registeredPlugins = [];
        var formatSignalName = function(signal) {
            return 'signal' + signal.charAt(0).toUpperCase() + signal.slice(1);
        };
        var callHandlers = function(args, returnAtFirst) {
            args = [].slice.call(args);
            var idx, ret, signal = formatSignalName(args.shift());
            for (idx = 0; idx < registeredPlugins.length; idx++) {
                if (signal in registeredPlugins[idx]) {
                    ret = registeredPlugins[idx][signal].apply(thisObj, args);
                    if (returnAtFirst) {
                        return ret;
                    }
                }
            }
        };
        base.call = function() {
            callHandlers(arguments, false);
        }
        ;
        base.callOnlyFirst = function() {
            return callHandlers(arguments, true);
        }
        ;
        base.hasHandler = function(signal) {
            var i = registeredPlugins.length;
            signal = formatSignalName(signal);
            while (i--) {
                if (signal in registeredPlugins[i]) {
                    return true;
                }
            }
            return false;
        }
        ;
        base.exists = function(plugin) {
            if (plugin in plugins) {
                plugin = plugins[plugin];
                return typeof plugin === 'function' && typeof plugin.prototype === 'object';
            }
            return false;
        }
        ;
        base.isRegistered = function(plugin) {
            if (base.exists(plugin)) {
                var idx = registeredPlugins.length;
                while (idx--) {
                    if (registeredPlugins[idx]instanceof plugins[plugin]) {
                        return true;
                    }
                }
            }
            return false;
        }
        ;
        base.register = function(plugin) {
            if (!base.exists(plugin) || base.isRegistered(plugin)) {
                return false;
            }
            plugin = new plugins[plugin]();
            registeredPlugins.push(plugin);
            if ('init'in plugin) {
                plugin.init.call(thisObj);
            }
            return true;
        }
        ;
        base.deregister = function(plugin) {
            var removedPlugin, pluginIdx = registeredPlugins.length, removed = false;
            if (!base.isRegistered(plugin)) {
                return removed;
            }
            while (pluginIdx--) {
                if (registeredPlugins[pluginIdx]instanceof plugins[plugin]) {
                    removedPlugin = registeredPlugins.splice(pluginIdx, 1)[0];
                    removed = true;
                    if ('destroy'in removedPlugin) {
                        removedPlugin.destroy.call(thisObj);
                    }
                }
            }
            return removed;
        }
        ;
        base.destroy = function() {
            var i = registeredPlugins.length;
            while (i--) {
                if ('destroy'in registeredPlugins[i]) {
                    registeredPlugins[i].destroy.call(thisObj);
                }
            }
            registeredPlugins = [];
            thisObj = null;
        }
        ;
    }
    PluginManager.plugins = plugins;
    var outerText = function(range, isLeft, length) {
        var nodeValue, remaining, start, end, node, text = '', next = range.startContainer, offset = range.startOffset;
        if (next && next.nodeType !== 3) {
            next = next.childNodes[offset];
            offset = 0;
        }
        start = end = offset;
        while (length > text.length && next && next.nodeType === 3) {
            nodeValue = next.nodeValue;
            remaining = length - text.length;
            if (node) {
                end = nodeValue.length;
                start = 0;
            }
            node = next;
            if (isLeft) {
                start = Math.max(end - remaining, 0);
                offset = start;
                text = nodeValue.substr(start, end - start) + text;
                next = node.previousSibling;
            } else {
                end = Math.min(remaining, nodeValue.length);
                offset = start + end;
                text += nodeValue.substr(start, end);
                next = node.nextSibling;
            }
        }
        return {
            node: node || next,
            offset: offset,
            text: text
        };
    };
    function RangeHelper(win, d, sanitize) {
        var _createMarker, _prepareInput, doc = d || win.contentDocument || win.document, startMarker = 'sceditor-start-marker', endMarker = 'sceditor-end-marker', base = this;
        base.insertHTML = function(html, endHTML) {
            var node, div, range = base.selectedRange();
            if (!range) {
                return false;
            }
            if (endHTML) {
                html += base.selectedHtml() + endHTML;
            }
            div = createElement('p', {}, doc);
            node = doc.createDocumentFragment();
            div.innerHTML = sanitize(html);
            while (div.firstChild) {
                appendChild(node, div.firstChild);
            }
            base.insertNode(node);
        }
        ;
        _prepareInput = function(node, endNode, returnHtml) {
            var lastChild, frag = doc.createDocumentFragment();
            if (typeof node === 'string') {
                if (endNode) {
                    node += base.selectedHtml() + endNode;
                }
                frag = parseHTML(node);
            } else {
                appendChild(frag, node);
                if (endNode) {
                    appendChild(frag, base.selectedRange().extractContents());
                    appendChild(frag, endNode);
                }
            }
            if (!(lastChild = frag.lastChild)) {
                return;
            }
            while (!isInline(lastChild.lastChild, true)) {
                lastChild = lastChild.lastChild;
            }
            if (canHaveChildren(lastChild)) {
                if (!lastChild.lastChild) {
                    appendChild(lastChild, document.createTextNode('\u200B'));
                }
            } else {
                lastChild = frag;
            }
            base.removeMarkers();
            appendChild(lastChild, _createMarker(startMarker));
            appendChild(lastChild, _createMarker(endMarker));
            if (returnHtml) {
                var div = createElement('div');
                appendChild(div, frag);
                return div.innerHTML;
            }
            return frag;
        }
        ;
        base.insertNode = function(node, endNode) {
            var first, last, input = _prepareInput(node, endNode), range = base.selectedRange(), parent = range.commonAncestorContainer, emptyNodes = [];
            if (!input) {
                return false;
            }
            function removeIfEmpty(node) {
                if (node && isEmpty(node) && emptyNodes.indexOf(node) < 0) {
                    remove(node);
                }
            }
            if (range.startContainer !== range.endContainer) {
                each(parent.childNodes, function(_, node) {
                    if (isEmpty(node)) {
                        emptyNodes.push(node);
                    }
                });
                first = input.firstChild;
                last = input.lastChild;
            }
            range.deleteContents();
            if (parent && parent.nodeType !== 3 && !canHaveChildren(parent)) {
                insertBefore(input, parent);
            } else {
                range.insertNode(input);
                removeIfEmpty(first && first.previousSibling);
                removeIfEmpty(last && last.nextSibling);
            }
            base.restoreRange();
        }
        ;
        base.cloneSelected = function() {
            var range = base.selectedRange();
            if (range) {
                return range.cloneRange();
            }
        }
        ;
        base.selectedRange = function() {
            var range, firstChild, sel = win.getSelection();
            if (!sel) {
                return;
            }
            if (sel.rangeCount <= 0) {
                firstChild = doc.body;
                while (firstChild.firstChild) {
                    firstChild = firstChild.firstChild;
                }
                range = doc.createRange();
                range.setStartBefore(firstChild);
                sel.addRange(range);
            }
            if (sel.rangeCount > 0) {
                range = sel.getRangeAt(0);
            }
            return range;
        }
        ;
        base.hasSelection = function() {
            var sel = win.getSelection();
            return sel && sel.rangeCount > 0;
        }
        ;
        base.selectedHtml = function() {
            var div, range = base.selectedRange();
            if (range) {
                div = createElement('p', {}, doc);
                appendChild(div, range.cloneContents());
                return div.innerHTML;
            }
            return '';
        }
        ;
        base.parentNode = function() {
            var range = base.selectedRange();
            if (range) {
                return range.commonAncestorContainer;
            }
        }
        ;
        base.getFirstBlockParent = function(node) {
            var func = function(elm) {
                if (!isInline(elm, true)) {
                    return elm;
                }
                elm = elm ? elm.parentNode : null;
                return elm ? func(elm) : elm;
            };
            return func(node || base.parentNode());
        }
        ;
        base.insertNodeAt = function(start, node) {
            var currentRange = base.selectedRange()
              , range = base.cloneSelected();
            if (!range) {
                return false;
            }
            range.collapse(start);
            range.insertNode(node);
            base.selectRange(currentRange);
        }
        ;
        _createMarker = function(id) {
            base.removeMarker(id);
            var marker = createElement('span', {
                id: id,
                className: 'sceditor-selection sceditor-ignore',
                style: 'display:none;line-height:0'
            }, doc);
            marker.innerHTML = ' ';
            return marker;
        }
        ;
        base.insertMarkers = function() {
            var currentRange = base.selectedRange();
            var startNode = _createMarker(startMarker);
            base.removeMarkers();
            base.insertNodeAt(true, startNode);
            if (currentRange && currentRange.collapsed) {
                startNode.parentNode.insertBefore(_createMarker(endMarker), startNode.nextSibling);
            } else {
                base.insertNodeAt(false, _createMarker(endMarker));
            }
        }
        ;
        base.getMarker = function(id) {
            return doc.getElementById(id);
        }
        ;
        base.removeMarker = function(id) {
            var marker = base.getMarker(id);
            if (marker) {
                remove(marker);
            }
        }
        ;
        base.removeMarkers = function() {
            base.removeMarker(startMarker);
            base.removeMarker(endMarker);
        }
        ;
        base.saveRange = function() {
            base.insertMarkers();
        }
        ;
        base.selectRange = function(range) {
            var lastChild;
            var sel = win.getSelection();
            var container = range.endContainer;
            if (range.collapsed && container && !isInline(container, true)) {
                lastChild = container.lastChild;
                while (lastChild && is(lastChild, '.sceditor-ignore')) {
                    lastChild = lastChild.previousSibling;
                }
                if (is(lastChild, 'br')) {
                    var rng = doc.createRange();
                    rng.setEndAfter(lastChild);
                    rng.collapse(false);
                    if (base.compare(range, rng)) {
                        range.setStartBefore(lastChild);
                        range.collapse(true);
                    }
                }
            }
            if (sel) {
                base.clear();
                sel.addRange(range);
            }
        }
        ;
        base.restoreRange = function() {
            var isCollapsed, range = base.selectedRange(), start = base.getMarker(startMarker), end = base.getMarker(endMarker);
            if (!start || !end || !range) {
                return false;
            }
            isCollapsed = start.nextSibling === end;
            range = doc.createRange();
            range.setStartBefore(start);
            range.setEndAfter(end);
            if (isCollapsed) {
                range.collapse(true);
            }
            base.selectRange(range);
            base.removeMarkers();
        }
        ;
        base.selectOuterText = function(left, right) {
            var start, end, range = base.cloneSelected();
            if (!range) {
                return false;
            }
            range.collapse(false);
            start = outerText(range, true, left);
            end = outerText(range, false, right);
            range.setStart(start.node, start.offset);
            range.setEnd(end.node, end.offset);
            base.selectRange(range);
        }
        ;
        base.getOuterText = function(before, length) {
            var range = base.cloneSelected();
            if (!range) {
                return '';
            }
            range.collapse(!before);
            return outerText(range, before, length).text;
        }
        ;
        base.replaceKeyword = function(keywords, includeAfter, keywordsSorted, longestKeyword, requireWhitespace, keypressChar) {
            if (!keywordsSorted) {
                keywords.sort(function(a, b) {
                    return a[0].length - b[0].length;
                });
            }
            var outerText, match, matchPos, startIndex, leftLen, charsLeft, keyword, keywordLen, whitespaceRegex = '(^|[\\s\xA0\u2002\u2003\u2009])', keywordIdx = keywords.length, whitespaceLen = requireWhitespace ? 1 : 0, maxKeyLen = longestKeyword || keywords[keywordIdx - 1][0].length;
            if (requireWhitespace) {
                maxKeyLen++;
            }
            keypressChar = keypressChar || '';
            outerText = base.getOuterText(true, maxKeyLen);
            leftLen = outerText.length;
            outerText += keypressChar;
            if (includeAfter) {
                outerText += base.getOuterText(false, maxKeyLen);
            }
            while (keywordIdx--) {
                keyword = keywords[keywordIdx][0];
                keywordLen = keyword.length;
                startIndex = Math.max(0, leftLen - keywordLen - whitespaceLen);
                matchPos = -1;
                if (requireWhitespace) {
                    match = outerText.substr(startIndex).match(new RegExp(whitespaceRegex + regex(keyword) + whitespaceRegex));
                    if (match) {
                        matchPos = match.index + startIndex + match[1].length;
                    }
                } else {
                    matchPos = outerText.indexOf(keyword, startIndex);
                }
                if (matchPos > -1) {
                    if (matchPos <= leftLen && matchPos + keywordLen + whitespaceLen >= leftLen) {
                        charsLeft = leftLen - matchPos;
                        base.selectOuterText(charsLeft, keywordLen - charsLeft - (/^\S/.test(keypressChar) ? 1 : 0));
                        base.insertHTML(keywords[keywordIdx][1]);
                        return true;
                    }
                }
            }
            return false;
        }
        ;
        base.compare = function(rngA, rngB) {
            if (!rngB) {
                rngB = base.selectedRange();
            }
            if (!rngA || !rngB) {
                return !rngA && !rngB;
            }
            return rngA.compareBoundaryPoints(Range.END_TO_END, rngB) === 0 && rngA.compareBoundaryPoints(Range.START_TO_START, rngB) === 0;
        }
        ;
        base.clear = function() {
            var sel = win.getSelection();
            if (sel) {
                if (sel.removeAllRanges) {
                    sel.removeAllRanges();
                } else if (sel.empty) {
                    sel.empty();
                }
            }
        }
        ;
    }
    var USER_AGENT = navigator.userAgent;
    var ios = /iPhone|iPod|iPad| wosbrowser\//i.test(USER_AGENT);
    var isWysiwygSupported = (function() {
        var match, isUnsupported;
        var ie = !!window.document.documentMode;
        var legacyEdge = '-ms-ime-align'in document.documentElement.style;
        var div = document.createElement('div');
        div.contentEditable = true;
        if (!('contentEditable'in document.documentElement) || div.contentEditable !== 'true') {
            return false;
        }
        isUnsupported = /Opera Mobi|Opera Mini/i.test(USER_AGENT);
        if (/Android/i.test(USER_AGENT)) {
            isUnsupported = true;
            if (/Safari/.test(USER_AGENT)) {
                match = /Safari\/(\d+)/.exec(USER_AGENT);
                isUnsupported = (!match || !match[1] ? true : match[1] < 534);
            }
        }
        if (/ Silk\//i.test(USER_AGENT)) {
            match = /AppleWebKit\/(\d+)/.exec(USER_AGENT);
            isUnsupported = (!match || !match[1] ? true : match[1] < 534);
        }
        if (ios) {
            isUnsupported = /OS [0-4](_\d)+ like Mac/i.test(USER_AGENT);
        }
        if (/Firefox/i.test(USER_AGENT)) {
            isUnsupported = false;
        }
        if (/OneBrowser/i.test(USER_AGENT)) {
            isUnsupported = false;
        }
        if (navigator.vendor === 'UCWEB') {
            isUnsupported = false;
        }
        if (ie || legacyEdge) {
            isUnsupported = true;
        }
        return !isUnsupported;
    }());
    function checkWhitespace(node, rangeHelper) {
        var noneWsRegex = /[^\s\xA0\u2002\u2003\u2009]+/;
        var emoticons = node && find(node, 'img[data-sceditor-emoticon]');
        if (!node || !emoticons.length) {
            return;
        }
        for (var i = 0; i < emoticons.length; i++) {
            var emoticon = emoticons[i];
            var parent = emoticon.parentNode;
            var prev = emoticon.previousSibling;
            var next = emoticon.nextSibling;
            if ((!prev || !noneWsRegex.test(prev.nodeValue.slice(-1))) && (!next || !noneWsRegex.test((next.nodeValue || '')[0]))) {
                continue;
            }
            var range = rangeHelper.cloneSelected();
            var rangeStart = -1;
            var rangeStartContainer = range.startContainer;
            var previousText = prev.nodeValue || '';
            previousText += data(emoticon, 'sceditor-emoticon');
            if (rangeStartContainer === next) {
                rangeStart = previousText.length + range.startOffset;
            }
            if (rangeStartContainer === node && node.childNodes[range.startOffset] === next) {
                rangeStart = previousText.length;
            }
            if (rangeStartContainer === prev) {
                rangeStart = range.startOffset;
            }
            if (!next || next.nodeType !== TEXT_NODE) {
                next = parent.insertBefore(parent.ownerDocument.createTextNode(''), next);
            }
            next.insertData(0, previousText);
            remove(prev);
            remove(emoticon);
            if (rangeStart > -1) {
                range.setStart(next, rangeStart);
                range.collapse(true);
                rangeHelper.selectRange(range);
            }
        }
    }
    function replace(root, emoticons, emoticonsCompat) {
        var doc = root.ownerDocument;
        var space = '(^|\\s|\xA0|\u2002|\u2003|\u2009|$)';
        var emoticonCodes = [];
        var emoticonRegex = {};
        if (parent(root, 'code')) {
            return;
        }
        each(emoticons, function(key) {
            emoticonRegex[key] = new RegExp(space + regex(key) + space);
            emoticonCodes.push(key);
        });
        emoticonCodes.sort(function(a, b) {
            return b.length - a.length;
        });
        (function convert(node) {
            node = node.firstChild;
            while (node) {
                if (node.nodeType === ELEMENT_NODE && !is(node, 'code')) {
                    convert(node);
                }
                if (node.nodeType === TEXT_NODE) {
                    for (var i = 0; i < emoticonCodes.length; i++) {
                        var text = node.nodeValue;
                        var key = emoticonCodes[i];
                        var index = emoticonsCompat ? text.search(emoticonRegex[key]) : text.indexOf(key);
                        if (index > -1) {
                            var startIndex = text.indexOf(key, index);
                            var fragment = parseHTML(emoticons[key], doc);
                            var after = text.substr(startIndex + key.length);
                            fragment.appendChild(doc.createTextNode(after));
                            node.nodeValue = text.substr(0, startIndex);
                            node.parentNode.insertBefore(fragment, node.nextSibling);
                        }
                    }
                }
                node = node.nextSibling;
            }
        }(root));
    }
    /*! @license DOMPurify 2.4.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.3/LICENSE */
    function _typeof(obj) {
        "@babel/helpers - typeof";
        return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
            return typeof obj;
        }
        : function(obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        }
        ,
        _typeof(obj);
    }
    function _setPrototypeOf(o, p) {
        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
            o.__proto__ = p;
            return o;
        }
        ;
        return _setPrototypeOf(o, p);
    }
    function _isNativeReflectConstruct() {
        if (typeof Reflect === "undefined" || !Reflect.construct)
            return false;
        if (Reflect.construct.sham)
            return false;
        if (typeof Proxy === "function")
            return true;
        try {
            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
            return true;
        } catch (e) {
            return false;
        }
    }
    function _construct(Parent, args, Class) {
        if (_isNativeReflectConstruct()) {
            _construct = Reflect.construct;
        } else {
            _construct = function _construct(Parent, args, Class) {
                var a = [null];
                a.push.apply(a, args);
                var Constructor = Function.bind.apply(Parent, a);
                var instance = new Constructor();
                if (Class)
                    _setPrototypeOf(instance, Class.prototype);
                return instance;
            }
            ;
        }
        return _construct.apply(null, arguments);
    }
    function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr))
            return _arrayLikeToArray(arr);
    }
    function _iterableToArray(iter) {
        if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
            return Array.from(iter);
    }
    function _unsupportedIterableToArray(o, minLen) {
        if (!o)
            return;
        if (typeof o === "string")
            return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor)
            n = o.constructor.name;
        if (n === "Map" || n === "Set")
            return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
            return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length)
            len = arr.length;
        for (var i = 0, arr2 = new Array(len); i < len; i++)
            arr2[i] = arr[i];
        return arr2;
    }
    function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var hasOwnProperty = Object.hasOwnProperty
      , setPrototypeOf = Object.setPrototypeOf
      , isFrozen = Object.isFrozen
      , getPrototypeOf = Object.getPrototypeOf
      , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var freeze = Object.freeze
      , seal = Object.seal
      , create = Object.create;
    var _ref = typeof Reflect !== 'undefined' && Reflect
      , apply = _ref.apply
      , construct = _ref.construct;
    if (!apply) {
        apply = function apply(fun, thisValue, args) {
            return fun.apply(thisValue, args);
        }
        ;
    }
    if (!freeze) {
        freeze = function freeze(x) {
            return x;
        }
        ;
    }
    if (!seal) {
        seal = function seal(x) {
            return x;
        }
        ;
    }
    if (!construct) {
        construct = function construct(Func, args) {
            return _construct(Func, _toConsumableArray(args));
        }
        ;
    }
    var arrayForEach = unapply(Array.prototype.forEach);
    var arrayPop = unapply(Array.prototype.pop);
    var arrayPush = unapply(Array.prototype.push);
    var stringToLowerCase = unapply(String.prototype.toLowerCase);
    var stringToString = unapply(String.prototype.toString);
    var stringMatch = unapply(String.prototype.match);
    var stringReplace = unapply(String.prototype.replace);
    var stringIndexOf = unapply(String.prototype.indexOf);
    var stringTrim = unapply(String.prototype.trim);
    var regExpTest = unapply(RegExp.prototype.test);
    var typeErrorCreate = unconstruct(TypeError);
    function unapply(func) {
        return function(thisArg) {
            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }
            return apply(func, thisArg, args);
        }
        ;
    }
    function unconstruct(func) {
        return function() {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }
            return construct(func, args);
        }
        ;
    }
    function addToSet(set, array, transformCaseFunc) {
        transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;
        if (setPrototypeOf) {
            setPrototypeOf(set, null);
        }
        var l = array.length;
        while (l--) {
            var element = array[l];
            if (typeof element === 'string') {
                var lcElement = transformCaseFunc(element);
                if (lcElement !== element) {
                    if (!isFrozen(array)) {
                        array[l] = lcElement;
                    }
                    element = lcElement;
                }
            }
            set[element] = true;
        }
        return set;
    }
    function clone(object) {
        var newObject = create(null);
        var property;
        for (property in object) {
            if (apply(hasOwnProperty, object, [property]) === true) {
                newObject[property] = object[property];
            }
        }
        return newObject;
    }
    function lookupGetter(object, prop) {
        while (object !== null) {
            var desc = getOwnPropertyDescriptor(object, prop);
            if (desc) {
                if (desc.get) {
                    return unapply(desc.get);
                }
                if (typeof desc.value === 'function') {
                    return unapply(desc.value);
                }
            }
            object = getPrototypeOf(object);
        }
        function fallbackValue(element) {
            console.warn('fallback value for', element);
            return null;
        }
        return fallbackValue;
    }
    var html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);
    var svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);
    var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);
    var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);
    var mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);
    var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);
    var text = freeze(['#text']);
    var html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot', 'scrolling']);
    var svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);
    var mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);
    var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);
    var MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
    var ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
    var TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
    var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/);
    var ARIA_ATTR = seal(/^aria-[\-\w]+$/);
    var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i);
    var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
    var ATTR_WHITESPACE = seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g);
    var DOCTYPE_NAME = seal(/^html$/i);
    var getGlobal = function getGlobal() {
        return typeof window === 'undefined' ? null : window;
    };
    var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {
        if (_typeof(trustedTypes) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {
            return null;
        }
        var suffix = null;
        var ATTR_NAME = 'data-tt-policy-suffix';
        if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {
            suffix = document.currentScript.getAttribute(ATTR_NAME);
        }
        var policyName = 'dompurify' + (suffix ? '#' + suffix : '');
        try {
            return trustedTypes.createPolicy(policyName, {
                createHTML: function createHTML(html) {
                    return html;
                },
                createScriptURL: function createScriptURL(scriptUrl) {
                    return scriptUrl;
                }
            });
        } catch (_) {
            console.warn('TrustedTypes policy ' + policyName + ' could not be created.');
            return null;
        }
    };
    function createDOMPurify() {
        var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();
        var DOMPurify = function DOMPurify(root) {
            return createDOMPurify(root);
        };
        DOMPurify.version = '2.4.3';
        DOMPurify.removed = [];
        if (!window || !window.document || window.document.nodeType !== 9) {
            DOMPurify.isSupported = false;
            return DOMPurify;
        }
        var originalDocument = window.document;
        var document = window.document;
        var DocumentFragment = window.DocumentFragment
          , HTMLTemplateElement = window.HTMLTemplateElement
          , Node = window.Node
          , Element = window.Element
          , NodeFilter = window.NodeFilter
          , _window$NamedNodeMap = window.NamedNodeMap
          , NamedNodeMap = _window$NamedNodeMap === void 0 ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap
          , HTMLFormElement = window.HTMLFormElement
          , DOMParser = window.DOMParser
          , trustedTypes = window.trustedTypes;
        var ElementPrototype = Element.prototype;
        var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');
        var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');
        var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');
        var getParentNode = lookupGetter(ElementPrototype, 'parentNode');
        if (typeof HTMLTemplateElement === 'function') {
            var template = document.createElement('template');
            if (template.content && template.content.ownerDocument) {
                document = template.content.ownerDocument;
            }
        }
        var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);
        var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';
        var _document = document
          , implementation = _document.implementation
          , createNodeIterator = _document.createNodeIterator
          , createDocumentFragment = _document.createDocumentFragment
          , getElementsByTagName = _document.getElementsByTagName;
        var importNode = originalDocument.importNode;
        var documentMode = {};
        try {
            documentMode = clone(document).documentMode ? document.documentMode : {};
        } catch (_) {}
        var hooks = {};
        DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;
        var MUSTACHE_EXPR$1 = MUSTACHE_EXPR
          , ERB_EXPR$1 = ERB_EXPR
          , TMPLIT_EXPR$1 = TMPLIT_EXPR
          , DATA_ATTR$1 = DATA_ATTR
          , ARIA_ATTR$1 = ARIA_ATTR
          , IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA
          , ATTR_WHITESPACE$1 = ATTR_WHITESPACE;
        var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;
        var ALLOWED_TAGS = null;
        var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));
        var ALLOWED_ATTR = null;
        var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));
        var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {
            tagNameCheck: {
                writable: true,
                configurable: false,
                enumerable: true,
                value: null
            },
            attributeNameCheck: {
                writable: true,
                configurable: false,
                enumerable: true,
                value: null
            },
            allowCustomizedBuiltInElements: {
                writable: true,
                configurable: false,
                enumerable: true,
                value: false
            }
        }));
        var FORBID_TAGS = null;
        var FORBID_ATTR = null;
        var ALLOW_ARIA_ATTR = true;
        var ALLOW_DATA_ATTR = true;
        var ALLOW_UNKNOWN_PROTOCOLS = false;
        var SAFE_FOR_TEMPLATES = false;
        var WHOLE_DOCUMENT = false;
        var SET_CONFIG = false;
        var FORCE_BODY = false;
        var RETURN_DOM = false;
        var RETURN_DOM_FRAGMENT = false;
        var RETURN_TRUSTED_TYPE = false;
        var SANITIZE_DOM = true;
        var SANITIZE_NAMED_PROPS = false;
        var SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';
        var KEEP_CONTENT = true;
        var IN_PLACE = false;
        var USE_PROFILES = {};
        var FORBID_CONTENTS = null;
        var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);
        var DATA_URI_TAGS = null;
        var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);
        var URI_SAFE_ATTRIBUTES = null;
        var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);
        var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
        var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
        var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
        var NAMESPACE = HTML_NAMESPACE;
        var IS_EMPTY_INPUT = false;
        var ALLOWED_NAMESPACES = null;
        var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
        var PARSER_MEDIA_TYPE;
        var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];
        var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';
        var transformCaseFunc;
        var CONFIG = null;
        var formElement = document.createElement('form');
        var isRegexOrFunction = function isRegexOrFunction(testValue) {
            return testValue instanceof RegExp || testValue instanceof Function;
        };
        var _parseConfig = function _parseConfig(cfg) {
            if (CONFIG && CONFIG === cfg) {
                return;
            }
            if (!cfg || _typeof(cfg) !== 'object') {
                cfg = {};
            }
            cfg = clone(cfg);
            PARSER_MEDIA_TYPE = SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;
            transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;
            ALLOWED_TAGS = 'ALLOWED_TAGS'in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
            ALLOWED_ATTR = 'ALLOWED_ATTR'in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
            ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES'in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
            URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR'in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;
            DATA_URI_TAGS = 'ADD_DATA_URI_TAGS'in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;
            FORBID_CONTENTS = 'FORBID_CONTENTS'in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
            FORBID_TAGS = 'FORBID_TAGS'in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
            FORBID_ATTR = 'FORBID_ATTR'in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
            USE_PROFILES = 'USE_PROFILES'in cfg ? cfg.USE_PROFILES : false;
            ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
            ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
            ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
            SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
            WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
            RETURN_DOM = cfg.RETURN_DOM || false;
            RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
            RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
            FORCE_BODY = cfg.FORCE_BODY || false;
            SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
            SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
            KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
            IN_PLACE = cfg.IN_PLACE || false;
            IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;
            NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
            if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
                CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
            }
            if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
                CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
            }
            if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {
                CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
            }
            if (SAFE_FOR_TEMPLATES) {
                ALLOW_DATA_ATTR = false;
            }
            if (RETURN_DOM_FRAGMENT) {
                RETURN_DOM = true;
            }
            if (USE_PROFILES) {
                ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));
                ALLOWED_ATTR = [];
                if (USE_PROFILES.html === true) {
                    addToSet(ALLOWED_TAGS, html$1);
                    addToSet(ALLOWED_ATTR, html);
                }
                if (USE_PROFILES.svg === true) {
                    addToSet(ALLOWED_TAGS, svg$1);
                    addToSet(ALLOWED_ATTR, svg);
                    addToSet(ALLOWED_ATTR, xml);
                }
                if (USE_PROFILES.svgFilters === true) {
                    addToSet(ALLOWED_TAGS, svgFilters);
                    addToSet(ALLOWED_ATTR, svg);
                    addToSet(ALLOWED_ATTR, xml);
                }
                if (USE_PROFILES.mathMl === true) {
                    addToSet(ALLOWED_TAGS, mathMl$1);
                    addToSet(ALLOWED_ATTR, mathMl);
                    addToSet(ALLOWED_ATTR, xml);
                }
            }
            if (cfg.ADD_TAGS) {
                if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
                    ALLOWED_TAGS = clone(ALLOWED_TAGS);
                }
                addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
            }
            if (cfg.ADD_ATTR) {
                if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
                    ALLOWED_ATTR = clone(ALLOWED_ATTR);
                }
                addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
            }
            if (cfg.ADD_URI_SAFE_ATTR) {
                addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
            }
            if (cfg.FORBID_CONTENTS) {
                if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
                    FORBID_CONTENTS = clone(FORBID_CONTENTS);
                }
                addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
            }
            if (KEEP_CONTENT) {
                ALLOWED_TAGS['#text'] = true;
            }
            if (WHOLE_DOCUMENT) {
                addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);
            }
            if (ALLOWED_TAGS.table) {
                addToSet(ALLOWED_TAGS, ['tbody']);
                delete FORBID_TAGS.tbody;
            }
            if (freeze) {
                freeze(cfg);
            }
            CONFIG = cfg;
        };
        var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);
        var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);
        var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);
        var ALL_SVG_TAGS = addToSet({}, svg$1);
        addToSet(ALL_SVG_TAGS, svgFilters);
        addToSet(ALL_SVG_TAGS, svgDisallowed);
        var ALL_MATHML_TAGS = addToSet({}, mathMl$1);
        addToSet(ALL_MATHML_TAGS, mathMlDisallowed);
        var _checkValidNamespace = function _checkValidNamespace(element) {
            var parent = getParentNode(element);
            if (!parent || !parent.tagName) {
                parent = {
                    namespaceURI: NAMESPACE,
                    tagName: 'template'
                };
            }
            var tagName = stringToLowerCase(element.tagName);
            var parentTagName = stringToLowerCase(parent.tagName);
            if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
                return false;
            }
            if (element.namespaceURI === SVG_NAMESPACE) {
                if (parent.namespaceURI === HTML_NAMESPACE) {
                    return tagName === 'svg';
                }
                if (parent.namespaceURI === MATHML_NAMESPACE) {
                    return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
                }
                return Boolean(ALL_SVG_TAGS[tagName]);
            }
            if (element.namespaceURI === MATHML_NAMESPACE) {
                if (parent.namespaceURI === HTML_NAMESPACE) {
                    return tagName === 'math';
                }
                if (parent.namespaceURI === SVG_NAMESPACE) {
                    return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];
                }
                return Boolean(ALL_MATHML_TAGS[tagName]);
            }
            if (element.namespaceURI === HTML_NAMESPACE) {
                if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
                    return false;
                }
                if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
                    return false;
                }
                return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
            }
            if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {
                return true;
            }
            return false;
        };
        var _forceRemove = function _forceRemove(node) {
            arrayPush(DOMPurify.removed, {
                element: node
            });
            try {
                node.parentNode.removeChild(node);
            } catch (_) {
                try {
                    node.outerHTML = emptyHTML;
                } catch (_) {
                    node.remove();
                }
            }
        };
        var _removeAttribute = function _removeAttribute(name, node) {
            try {
                arrayPush(DOMPurify.removed, {
                    attribute: node.getAttributeNode(name),
                    from: node
                });
            } catch (_) {
                arrayPush(DOMPurify.removed, {
                    attribute: null,
                    from: node
                });
            }
            node.removeAttribute(name);
            if (name === 'is' && !ALLOWED_ATTR[name]) {
                if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
                    try {
                        _forceRemove(node);
                    } catch (_) {}
                } else {
                    try {
                        node.setAttribute(name, '');
                    } catch (_) {}
                }
            }
        };
        var _initDocument = function _initDocument(dirty) {
            var doc;
            var leadingWhitespace;
            if (FORCE_BODY) {
                dirty = '<remove></remove>' + dirty;
            } else {
                var matches = stringMatch(dirty, /^[\r\n\t ]+/);
                leadingWhitespace = matches && matches[0];
            }
            if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {
                dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + '</body></html>';
            }
            var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
            if (NAMESPACE === HTML_NAMESPACE) {
                try {
                    doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
                } catch (_) {}
            }
            if (!doc || !doc.documentElement) {
                doc = implementation.createDocument(NAMESPACE, 'template', null);
                try {
                    doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
                } catch (_) {}
            }
            var body = doc.body || doc.documentElement;
            if (dirty && leadingWhitespace) {
                body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);
            }
            if (NAMESPACE === HTML_NAMESPACE) {
                return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
            }
            return WHOLE_DOCUMENT ? doc.documentElement : body;
        };
        var _createIterator = function _createIterator(root) {
            return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);
        };
        var _isClobbered = function _isClobbered(elm) {
            return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');
        };
        var _isNode = function _isNode(object) {
            return _typeof(Node) === 'object' ? object instanceof Node : object && _typeof(object) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';
        };
        var _executeHook = function _executeHook(entryPoint, currentNode, data) {
            if (!hooks[entryPoint]) {
                return;
            }
            arrayForEach(hooks[entryPoint], function(hook) {
                hook.call(DOMPurify, currentNode, data, CONFIG);
            });
        };
        var _sanitizeElements = function _sanitizeElements(currentNode) {
            var content;
            _executeHook('beforeSanitizeElements', currentNode, null);
            if (_isClobbered(currentNode)) {
                _forceRemove(currentNode);
                return true;
            }
            if (regExpTest(/[\u0080-\uFFFF]/, currentNode.nodeName)) {
                _forceRemove(currentNode);
                return true;
            }
            var tagName = transformCaseFunc(currentNode.nodeName);
            _executeHook('uponSanitizeElement', currentNode, {
                tagName: tagName,
                allowedTags: ALLOWED_TAGS
            });
            if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
                _forceRemove(currentNode);
                return true;
            }
            if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {
                _forceRemove(currentNode);
                return true;
            }
            if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
                if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {
                    if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName))
                        return false;
                    if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName))
                        return false;
                }
                if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
                    var parentNode = getParentNode(currentNode) || currentNode.parentNode;
                    var childNodes = getChildNodes(currentNode) || currentNode.childNodes;
                    if (childNodes && parentNode) {
                        var childCount = childNodes.length;
                        for (var i = childCount - 1; i >= 0; --i) {
                            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));
                        }
                    }
                }
                _forceRemove(currentNode);
                return true;
            }
            if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
                _forceRemove(currentNode);
                return true;
            }
            if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\/no(script|embed)/i, currentNode.innerHTML)) {
                _forceRemove(currentNode);
                return true;
            }
            if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
                content = currentNode.textContent;
                content = stringReplace(content, MUSTACHE_EXPR$1, ' ');
                content = stringReplace(content, ERB_EXPR$1, ' ');
                content = stringReplace(content, TMPLIT_EXPR$1, ' ');
                if (currentNode.textContent !== content) {
                    arrayPush(DOMPurify.removed, {
                        element: currentNode.cloneNode()
                    });
                    currentNode.textContent = content;
                }
            }
            _executeHook('afterSanitizeElements', currentNode, null);
            return false;
        };
        var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {
            if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {
                return false;
            }
            if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName))
                ;
            else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName))
                ;
            else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
                if (_basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value)))
                    ;
                else {
                    return false;
                }
            } else if (URI_SAFE_ATTRIBUTES[lcName])
                ;
            else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, '')))
                ;
            else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag])
                ;
            else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, '')))
                ;
            else if (!value)
                ;
            else {
                return false;
            }
            return true;
        };
        var _basicCustomElementTest = function _basicCustomElementTest(tagName) {
            return tagName.indexOf('-') > 0;
        };
        var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
            var attr;
            var value;
            var lcName;
            var l;
            _executeHook('beforeSanitizeAttributes', currentNode, null);
            var attributes = currentNode.attributes;
            if (!attributes) {
                return;
            }
            var hookEvent = {
                attrName: '',
                attrValue: '',
                keepAttr: true,
                allowedAttributes: ALLOWED_ATTR
            };
            l = attributes.length;
            while (l--) {
                attr = attributes[l];
                var _attr = attr
                  , name = _attr.name
                  , namespaceURI = _attr.namespaceURI;
                value = name === 'value' ? attr.value : stringTrim(attr.value);
                lcName = transformCaseFunc(name);
                hookEvent.attrName = lcName;
                hookEvent.attrValue = value;
                hookEvent.keepAttr = true;
                hookEvent.forceKeepAttr = undefined;
                _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
                value = hookEvent.attrValue;
                if (hookEvent.forceKeepAttr) {
                    continue;
                }
                _removeAttribute(name, currentNode);
                if (!hookEvent.keepAttr) {
                    continue;
                }
                if (regExpTest(/\/>/i, value)) {
                    _removeAttribute(name, currentNode);
                    continue;
                }
                if (SAFE_FOR_TEMPLATES) {
                    value = stringReplace(value, MUSTACHE_EXPR$1, ' ');
                    value = stringReplace(value, ERB_EXPR$1, ' ');
                    value = stringReplace(value, TMPLIT_EXPR$1, ' ');
                }
                var lcTag = transformCaseFunc(currentNode.nodeName);
                if (!_isValidAttribute(lcTag, lcName, value)) {
                    continue;
                }
                if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {
                    _removeAttribute(name, currentNode);
                    value = SANITIZE_NAMED_PROPS_PREFIX + value;
                }
                if (trustedTypesPolicy && _typeof(trustedTypes) === 'object' && typeof trustedTypes.getAttributeType === 'function') {
                    if (namespaceURI)
                        ;
                    else {
                        switch (trustedTypes.getAttributeType(lcTag, lcName)) {
                        case 'TrustedHTML':
                            value = trustedTypesPolicy.createHTML(value);
                            break;
                        case 'TrustedScriptURL':
                            value = trustedTypesPolicy.createScriptURL(value);
                            break;
                        }
                    }
                }
                try {
                    if (namespaceURI) {
                        currentNode.setAttributeNS(namespaceURI, name, value);
                    } else {
                        currentNode.setAttribute(name, value);
                    }
                    arrayPop(DOMPurify.removed);
                } catch (_) {}
            }
            _executeHook('afterSanitizeAttributes', currentNode, null);
        };
        var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {
            var shadowNode;
            var shadowIterator = _createIterator(fragment);
            _executeHook('beforeSanitizeShadowDOM', fragment, null);
            while (shadowNode = shadowIterator.nextNode()) {
                _executeHook('uponSanitizeShadowNode', shadowNode, null);
                if (_sanitizeElements(shadowNode)) {
                    continue;
                }
                if (shadowNode.content instanceof DocumentFragment) {
                    _sanitizeShadowDOM(shadowNode.content);
                }
                _sanitizeAttributes(shadowNode);
            }
            _executeHook('afterSanitizeShadowDOM', fragment, null);
        };
        DOMPurify.sanitize = function(dirty) {
            var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var body;
            var importedNode;
            var currentNode;
            var oldNode;
            var returnNode;
            IS_EMPTY_INPUT = !dirty;
            if (IS_EMPTY_INPUT) {
                dirty = '<!-->';
            }
            if (typeof dirty !== 'string' && !_isNode(dirty)) {
                if (typeof dirty.toString !== 'function') {
                    throw typeErrorCreate('toString is not a function');
                } else {
                    dirty = dirty.toString();
                    if (typeof dirty !== 'string') {
                        throw typeErrorCreate('dirty is not a string, aborting');
                    }
                }
            }
            if (!DOMPurify.isSupported) {
                if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {
                    if (typeof dirty === 'string') {
                        return window.toStaticHTML(dirty);
                    }
                    if (_isNode(dirty)) {
                        return window.toStaticHTML(dirty.outerHTML);
                    }
                }
                return dirty;
            }
            if (!SET_CONFIG) {
                _parseConfig(cfg);
            }
            DOMPurify.removed = [];
            if (typeof dirty === 'string') {
                IN_PLACE = false;
            }
            if (IN_PLACE) {
                if (dirty.nodeName) {
                    var tagName = transformCaseFunc(dirty.nodeName);
                    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
                        throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');
                    }
                }
            } else if (dirty instanceof Node) {
                body = _initDocument('<!---->');
                importedNode = body.ownerDocument.importNode(dirty, true);
                if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {
                    body = importedNode;
                } else if (importedNode.nodeName === 'HTML') {
                    body = importedNode;
                } else {
                    body.appendChild(importedNode);
                }
            } else {
                if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {
                    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
                }
                body = _initDocument(dirty);
                if (!body) {
                    return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';
                }
            }
            if (body && FORCE_BODY) {
                _forceRemove(body.firstChild);
            }
            var nodeIterator = _createIterator(IN_PLACE ? dirty : body);
            while (currentNode = nodeIterator.nextNode()) {
                if (currentNode.nodeType === 3 && currentNode === oldNode) {
                    continue;
                }
                if (_sanitizeElements(currentNode)) {
                    continue;
                }
                if (currentNode.content instanceof DocumentFragment) {
                    _sanitizeShadowDOM(currentNode.content);
                }
                _sanitizeAttributes(currentNode);
                oldNode = currentNode;
            }
            oldNode = null;
            if (IN_PLACE) {
                return dirty;
            }
            if (RETURN_DOM) {
                if (RETURN_DOM_FRAGMENT) {
                    returnNode = createDocumentFragment.call(body.ownerDocument);
                    while (body.firstChild) {
                        returnNode.appendChild(body.firstChild);
                    }
                } else {
                    returnNode = body;
                }
                if (ALLOWED_ATTR.shadowroot) {
                    returnNode = importNode.call(originalDocument, returnNode, true);
                }
                return returnNode;
            }
            var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
            if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
                serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\n' + serializedHTML;
            }
            if (SAFE_FOR_TEMPLATES) {
                serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, ' ');
                serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, ' ');
                serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, ' ');
            }
            return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
        }
        ;
        DOMPurify.setConfig = function(cfg) {
            _parseConfig(cfg);
            SET_CONFIG = true;
        }
        ;
        DOMPurify.clearConfig = function() {
            CONFIG = null;
            SET_CONFIG = false;
        }
        ;
        DOMPurify.isValidAttribute = function(tag, attr, value) {
            if (!CONFIG) {
                _parseConfig({});
            }
            var lcTag = transformCaseFunc(tag);
            var lcName = transformCaseFunc(attr);
            return _isValidAttribute(lcTag, lcName, value);
        }
        ;
        DOMPurify.addHook = function(entryPoint, hookFunction) {
            if (typeof hookFunction !== 'function') {
                return;
            }
            hooks[entryPoint] = hooks[entryPoint] || [];
            arrayPush(hooks[entryPoint], hookFunction);
        }
        ;
        DOMPurify.removeHook = function(entryPoint) {
            if (hooks[entryPoint]) {
                return arrayPop(hooks[entryPoint]);
            }
        }
        ;
        DOMPurify.removeHooks = function(entryPoint) {
            if (hooks[entryPoint]) {
                hooks[entryPoint] = [];
            }
        }
        ;
        DOMPurify.removeAllHooks = function() {
            hooks = {};
        }
        ;
        return DOMPurify;
    }
    var purify = createDOMPurify();
    var globalWin = window;
    var globalDoc = document;
    var IMAGE_MIME_REGEX = /^image\/(p?jpe?g|gif|png|bmp)$/i;
    function wrapInlines(body, doc) {
        var wrapper;
        traverse(body, function(node) {
            if (isInline(node, true)) {
                if (wrapper || node.nodeType === TEXT_NODE ? /\S/.test(node.nodeValue) : !is(node, '.sceditor-ignore')) {
                    if (!wrapper) {
                        wrapper = createElement('p', {}, doc);
                        insertBefore(wrapper, node);
                    }
                    appendChild(wrapper, node);
                }
            } else {
                wrapper = null;
            }
        }, false, true);
    }
    function SCEditor(original, userOptions) {
        var base = this;
        var format;
        var editorContainer;
        var eventHandlers = {};
        var toolbar;
        var wysiwygEditor;
        var wysiwygWindow;
        var wysiwygBody;
        var wysiwygDocument;
        var sourceEditor;
        var dropdown;
        var isComposing;
        var valueChangedKeyUpTimer;
        var locale;
        var preLoadCache = [];
        var rangeHelper;
        var btnStateHandlers = [];
        var pluginManager;
        var currentNode;
        var currentBlockNode;
        var currentSelection;
        var isSelectionCheckPending;
        var isRequired;
        var inlineCss;
        var shortcutHandlers = {};
        var autoExpandBounds;
        var autoExpandThrottle;
        var toolbarButtons = {};
        var maximizeScrollPosition;
        var pasteContentFragment;
        var allEmoticons = {};
        var icons;
        var init, replaceEmoticons, handleCommand, initEditor, initLocale, initToolBar, initOptions, initEvents, initResize, initEmoticons, handlePasteEvt, handleCutCopyEvt, handlePasteData, handleKeyDown, handleBackSpace, handleKeyPress, handleFormReset, handleMouseDown, handleComposition, handleEvent, handleDocumentClick, updateToolBar, updateActiveButtons, sourceEditorSelectedText, appendNewLine, checkSelectionChanged, checkNodeChanged, autofocus, emoticonsKeyPress, emoticonsCheckWhitespace, currentStyledBlockNode, triggerValueChanged, valueChangedBlur, valueChangedKeyUp, autoUpdate, autoExpand;
        base.commands = extend(true, {}, (userOptions.commands || defaultCmds));
        var options = base.opts = extend(true, {}, defaultOptions, userOptions);
        base.opts.emoticons = userOptions.emoticons || defaultOptions.emoticons;
        if (!Array.isArray(options.allowedIframeUrls)) {
            options.allowedIframeUrls = [];
        }
        options.allowedIframeUrls.push('https://www.youtube-nocookie.com/embed/');
        options.allowedIframeUrls.push('https://img.xooimage.com/files_lottie/embedplayer.html');
        var domPurify = purify();
        domPurify.addHook('uponSanitizeElement', function(node, data) {
            var allowedUrls = options.allowedIframeUrls;
            if (data.tagName === 'iframe') {
                var src = attr(node, 'src') || '';
                for (var i = 0; i < allowedUrls.length; i++) {
                    var url = allowedUrls[i];
                    if (isString(url) && src.substr(0, url.length) === url) {
                        return;
                    }
                    if (url.test && url.test(src)) {
                        return;
                    }
                }
                remove(node);
            }
        });
        domPurify.addHook('afterSanitizeAttributes', function(node) {
            if ('target'in node) {
                attr(node, 'data-sce-target', attr(node, 'target'));
            }
            removeAttr(node, 'target');
        });
        function sanitize(html) {
            const allowedTags = ['iframe'].concat(options.allowedTags);
            const allowedAttrs = ['allowfullscreen', 'frameborder', 'target'].concat(options.allowedAttributes);
            return domPurify.sanitize(html, {
                ADD_TAGS: allowedTags,
                ADD_ATTR: allowedAttrs
            });
        }
        init = function() {
            original._sceditor = base;
            if (options.locale && options.locale !== 'en') {
                initLocale();
            }
            editorContainer = createElement('div', {
                className: 'sceditor-container'
            });
            insertBefore(editorContainer, original);
            css(editorContainer, 'z-index', options.zIndex);
            isRequired = original.required;
            original.required = false;
            var FormatCtor = SCEditor.formats[options.format];
            format = FormatCtor ? new FormatCtor() : {};
            pluginManager = new PluginManager(base);
            (options.plugins || '').split(',').forEach(function(plugin) {
                pluginManager.register(plugin.trim());
            });
            if ('init'in format) {
                format.init.call(base);
            }
            initEmoticons();
            initToolBar();
            initEditor();
            initOptions();
            initEvents();
            _initXooit(wysiwygDocument);
            if (!isWysiwygSupported) {
                base.toggleSourceMode();
            }
            updateActiveButtons();
            var loaded = function() {
                off(globalWin, 'load', loaded);
                if (options.autofocus) {
                    autofocus(!!options.autofocusEnd);
                }
                autoExpand();
                appendNewLine();
                pluginManager.call('ready');
                if ('onReady'in format) {
                    format.onReady.call(base);
                }
            };
            on(globalWin, 'load', loaded);
            if (globalDoc.readyState === 'complete') {
                loaded();
            }
        }
        ;
        initLocale = function() {
            var lang;
            locale = SCEditor.locale[options.locale];
            if (!locale) {
                lang = options.locale.split('-');
                locale = SCEditor.locale[lang[0]];
            }
            if (locale && locale.dateFormat) {
                options.dateFormat = locale.dateFormat;
            }
        }
        ;
        initEditor = function() {
            sourceEditor = createElement('textarea');
            wysiwygEditor = createElement('iframe', {
                frameborder: 0,
                allowfullscreen: true
            });
            if (options.startInSourceMode) {
                addClass(editorContainer, 'sourceMode');
                hide(wysiwygEditor);
            } else {
                addClass(editorContainer, 'wysiwygMode');
                hide(sourceEditor);
            }
            if (!options.spellcheck) {
                attr(editorContainer, 'spellcheck', 'false');
            }
            if (globalWin.location.protocol === 'https:') {
                attr(wysiwygEditor, 'src', 'about:blank');
            }
            appendChild(editorContainer, wysiwygEditor);
            appendChild(editorContainer, sourceEditor);
            base.dimensions(options.width || width(original), options.height || height(original));
            var className = ios ? ' ios' : '';
            wysiwygDocument = wysiwygEditor.contentDocument;
            wysiwygDocument.open();
            wysiwygDocument.write(_tmpl('html', {
                attrs: ' class="' + className + '"',
                spellcheck: options.spellcheck ? '' : 'spellcheck="false"',
                charset: options.charset,
                style: options.style
            }));
            wysiwygDocument.close();
            wysiwygBody = wysiwygDocument.body;
            wysiwygWindow = wysiwygEditor.contentWindow;
            base.readOnly(!!options.readOnly);
            if (ios) {
                height(wysiwygBody, '100%');
                on(wysiwygBody, 'touchend', base.focus);
            }
            var tabIndex = attr(original, 'tabindex');
            attr(sourceEditor, 'tabindex', tabIndex);
            attr(wysiwygEditor, 'tabindex', tabIndex);
            rangeHelper = new RangeHelper(wysiwygWindow,null,sanitize);
            hide(original);
            base.val(original.value);
            var placeholder = options.placeholder || attr(original, 'placeholder');
            if (placeholder) {
                sourceEditor.placeholder = placeholder;
                attr(wysiwygBody, 'placeholder', placeholder);
            }
        }
        ;
        initOptions = function() {
            if (options.autoUpdate) {
                on(wysiwygBody, 'blur', autoUpdate);
                on(sourceEditor, 'blur', autoUpdate);
            }
            if (options.rtl === null) {
                options.rtl = css(sourceEditor, 'direction') === 'rtl';
            }
            base.rtl(!!options.rtl);
            if (options.autoExpand) {
                on(wysiwygBody, 'load', autoExpand, EVENT_CAPTURE);
                on(wysiwygBody, 'input keyup', autoExpand);
            }
            if (options.resizeEnabled) {
                initResize();
            }
            attr(editorContainer, 'id', options.id);
            base.emoticons(options.emoticonsEnabled);
        }
        ;
        initEvents = function() {
            var form = original.form;
            var compositionEvents = 'compositionstart compositionend';
            var eventsToForward = 'keydown keyup keypress focus blur contextmenu input';
            var checkSelectionEvents = 'onselectionchange'in wysiwygDocument ? 'selectionchange' : 'keyup focus blur contextmenu mouseup touchend click';
            on(globalDoc, 'click', handleDocumentClick);
            if (form) {
                on(form, 'reset', handleFormReset);
                on(form, 'submit', base.updateOriginal, EVENT_CAPTURE);
            }
            on(window, 'pagehide', base.updateOriginal);
            on(wysiwygBody, 'keypress', handleKeyPress);
            on(wysiwygBody, 'keydown', handleKeyDown);
            on(wysiwygBody, 'keydown', handleBackSpace);
            on(wysiwygBody, 'keyup', appendNewLine);
            on(wysiwygBody, 'blur', valueChangedBlur);
            on(wysiwygBody, 'keyup', valueChangedKeyUp);
            on(wysiwygBody, 'paste', handlePasteEvt);
            on(wysiwygBody, 'cut copy', handleCutCopyEvt);
            on(wysiwygBody, compositionEvents, handleComposition);
            on(wysiwygBody, checkSelectionEvents, checkSelectionChanged);
            on(wysiwygBody, eventsToForward, handleEvent);
            if (options.emoticonsCompat && globalWin.getSelection) {
                on(wysiwygBody, 'keyup', emoticonsCheckWhitespace);
            }
            on(wysiwygBody, 'blur', function() {
                if (!base.val()) {
                    addClass(wysiwygBody, 'placeholder');
                }
            });
            on(wysiwygBody, 'focus', function() {
                removeClass(wysiwygBody, 'placeholder');
            });
            on(sourceEditor, 'blur', valueChangedBlur);
            on(sourceEditor, 'keyup', valueChangedKeyUp);
            on(sourceEditor, 'keydown', handleKeyDown);
            on(sourceEditor, compositionEvents, handleComposition);
            on(sourceEditor, eventsToForward, handleEvent);
            on(wysiwygDocument, 'mousedown', handleMouseDown);
            on(wysiwygDocument, checkSelectionEvents, checkSelectionChanged);
            on(wysiwygDocument, 'keyup', appendNewLine);
            on(editorContainer, 'selectionchanged', checkNodeChanged);
            on(editorContainer, 'selectionchanged', updateActiveButtons);
            on(editorContainer, 'selectionchanged valuechanged nodechanged pasteraw paste', handleEvent);
        }
        ;
        initToolBar = function() {
            var group, commands = base.commands, exclude = (options.toolbarExclude || '').split(','), groups = options.toolbar.split('|');
            toolbar = createElement('div', {
                className: 'sceditor-toolbar',
                unselectable: 'on'
            });
            if (options.icons in SCEditor.icons) {
                icons = new SCEditor.icons[options.icons]();
            }
            each(groups, function(_, menuItems) {
                group = createElement('div', {
                    className: 'sceditor-group'
                });
                each(menuItems.split(','), function(_, commandName) {
                    var button, shortcut, command = commands[commandName];
                    if (!command || exclude.indexOf(commandName) > -1) {
                        return;
                    }
                    shortcut = command.shortcut;
                    button = _tmpl('toolbarButton', {
                        name: commandName,
                        dispName: base._(command.name || command.tooltip || commandName)
                    }, true).firstChild;
                    if (icons && icons.create) {
                        var icon = icons.create(commandName);
                        if (icon) {
                            insertBefore(icons.create(commandName), button.firstChild);
                            addClass(button, 'has-icon');
                        }
                    }
                    button._sceTxtMode = !!command.txtExec;
                    button._sceWysiwygMode = !!command.exec;
                    toggleClass(button, 'disabled', !command.exec);
                    on(button, 'click', function(e) {
                        if (!hasClass(button, 'disabled')) {
                            handleCommand(button, command);
                        }
                        updateActiveButtons();
                        e.preventDefault();
                    });
                    on(button, 'mousedown', function(e) {
                        base.closeDropDown();
                        e.preventDefault();
                    });
                    if (command.tooltip) {
                        attr(button, 'title', base._(command.tooltip) + (shortcut ? ' (' + shortcut + ')' : ''));
                    }
                    if (shortcut) {
                        base.addShortcut(shortcut, commandName);
                    }
                    if (command.state) {
                        btnStateHandlers.push({
                            name: commandName,
                            state: command.state
                        });
                    } else if (isString(command.exec)) {
                        btnStateHandlers.push({
                            name: commandName,
                            state: command.exec
                        });
                    }
                    appendChild(group, button);
                    toolbarButtons[commandName] = button;
                });
                if (group.firstChild) {
                    appendChild(toolbar, group);
                }
            });
            appendChild(options.toolbarContainer || editorContainer, toolbar);
        }
        ;
        initResize = function() {
            var minHeight, maxHeight, minWidth, maxWidth, mouseMoveFunc, mouseUpFunc, grip = createElement('div', {
                className: 'sceditor-grip'
            }), cover = createElement('div', {
                className: 'sceditor-resize-cover'
            }), moveEvents = 'touchmove mousemove', endEvents = 'touchcancel touchend mouseup', startX = 0, startY = 0, newX = 0, newY = 0, startWidth = 0, startHeight = 0, origWidth = width(editorContainer), origHeight = height(editorContainer), isDragging = false, rtl = base.rtl();
            minHeight = options.resizeMinHeight || origHeight / 1.5;
            maxHeight = options.resizeMaxHeight || origHeight * 2.5;
            minWidth = options.resizeMinWidth || origWidth / 1.25;
            maxWidth = options.resizeMaxWidth || origWidth * 1.25;
            mouseMoveFunc = function(e) {
                if (e.type === 'touchmove') {
                    e = globalWin.event;
                    newX = e.changedTouches[0].pageX;
                    newY = e.changedTouches[0].pageY;
                } else {
                    newX = e.pageX;
                    newY = e.pageY;
                }
                var newHeight = startHeight + (newY - startY)
                  , newWidth = rtl ? startWidth - (newX - startX) : startWidth + (newX - startX);
                if (maxWidth > 0 && newWidth > maxWidth) {
                    newWidth = maxWidth;
                }
                if (minWidth > 0 && newWidth < minWidth) {
                    newWidth = minWidth;
                }
                if (!options.resizeWidth) {
                    newWidth = false;
                }
                if (maxHeight > 0 && newHeight > maxHeight) {
                    newHeight = maxHeight;
                }
                if (minHeight > 0 && newHeight < minHeight) {
                    newHeight = minHeight;
                }
                if (!options.resizeHeight) {
                    newHeight = false;
                }
                if (newWidth || newHeight) {
                    base.dimensions(newWidth, newHeight);
                }
                e.preventDefault();
            }
            ;
            mouseUpFunc = function(e) {
                if (!isDragging) {
                    return;
                }
                isDragging = false;
                hide(cover);
                removeClass(editorContainer, 'resizing');
                off(globalDoc, moveEvents, mouseMoveFunc);
                off(globalDoc, endEvents, mouseUpFunc);
                e.preventDefault();
            }
            ;
            if (icons && icons.create) {
                var icon = icons.create('grip');
                if (icon) {
                    appendChild(grip, icon);
                    addClass(grip, 'has-icon');
                }
            }
            appendChild(editorContainer, grip);
            appendChild(editorContainer, cover);
            hide(cover);
            on(grip, 'touchstart mousedown', function(e) {
                if (e.type === 'touchstart') {
                    e = globalWin.event;
                    startX = e.touches[0].pageX;
                    startY = e.touches[0].pageY;
                } else {
                    startX = e.pageX;
                    startY = e.pageY;
                }
                startWidth = width(editorContainer);
                startHeight = height(editorContainer);
                isDragging = true;
                addClass(editorContainer, 'resizing');
                show(cover);
                on(globalDoc, moveEvents, mouseMoveFunc);
                on(globalDoc, endEvents, mouseUpFunc);
                e.preventDefault();
            });
        }
        ;
        initEmoticons = function() {
            var emoticons = options.emoticons;
            var root = options.emoticonsRoot || '';
            if (emoticons) {
                allEmoticons = extend({}, emoticons.more, emoticons.dropdown, emoticons.hidden);
            }
            each(allEmoticons, function(key, url) {
                allEmoticons[key] = _tmpl('emoticon', {
                    key: key,
                    url: root + (url.url || url),
                    tooltip: url.tooltip || key
                });
                if (options.emoticonsEnabled) {
                    preLoadCache.push(createElement('img', {
                        src: root + (url.url || url)
                    }));
                }
            });
        }
        ;
        autofocus = function(focusEnd) {
            var range, txtPos, node = wysiwygBody.firstChild;
            if (!isVisible(editorContainer)) {
                return;
            }
            if (base.sourceMode()) {
                txtPos = focusEnd ? sourceEditor.value.length : 0;
                sourceEditor.setSelectionRange(txtPos, txtPos);
                return;
            }
            removeWhiteSpace(wysiwygBody);
            if (focusEnd) {
                if (!(node = wysiwygBody.lastChild)) {
                    node = createElement('p', {}, wysiwygDocument);
                    appendChild(wysiwygBody, node);
                }
                while (node.lastChild) {
                    node = node.lastChild;
                    if (is(node, 'br') && node.previousSibling) {
                        node = node.previousSibling;
                    }
                }
            }
            range = wysiwygDocument.createRange();
            if (!canHaveChildren(node)) {
                range.setStartBefore(node);
                if (focusEnd) {
                    range.setStartAfter(node);
                }
            } else {
                range.selectNodeContents(node);
            }
            range.collapse(!focusEnd);
            rangeHelper.selectRange(range);
            currentSelection = range;
            if (focusEnd) {
                wysiwygBody.scrollTop = wysiwygBody.scrollHeight;
            }
            base.focus();
        }
        ;
        base.readOnly = function(readOnly) {
            if (typeof readOnly !== 'boolean') {
                return !sourceEditor.readonly;
            }
            wysiwygBody.contentEditable = !readOnly;
            sourceEditor.readonly = !readOnly;
            updateToolBar(readOnly);
            return base;
        }
        ;
        base.rtl = function(rtl) {
            var dir = rtl ? 'rtl' : 'ltr';
            if (typeof rtl !== 'boolean') {
                return attr(sourceEditor, 'dir') === 'rtl';
            }
            attr(wysiwygBody, 'dir', dir);
            attr(sourceEditor, 'dir', dir);
            removeClass(editorContainer, 'rtl');
            removeClass(editorContainer, 'ltr');
            addClass(editorContainer, dir);
            if (icons && icons.rtl) {
                icons.rtl(rtl);
            }
            return base;
        }
        ;
        updateToolBar = function(disable) {
            var mode = base.inSourceMode() ? '_sceTxtMode' : '_sceWysiwygMode';
            each(toolbarButtons, function(_, button) {
                toggleClass(button, 'disabled', disable || !button[mode]);
            });
        }
        ;
        base.width = function(width$1, saveWidth) {
            if (!width$1 && width$1 !== 0) {
                return width(editorContainer);
            }
            base.dimensions(width$1, null, saveWidth);
            return base;
        }
        ;
        base.dimensions = function(width$1, height$1, save) {
            width$1 = (!width$1 && width$1 !== 0) ? false : width$1;
            height$1 = (!height$1 && height$1 !== 0) ? false : height$1;
            if (width$1 === false && height$1 === false) {
                return {
                    width: base.width(),
                    height: base.height()
                };
            }
            if (width$1 !== false) {
                if (save !== false) {
                    options.width = width$1;
                }
                width(editorContainer, width$1);
            }
            if (height$1 !== false) {
                if (save !== false) {
                    options.height = height$1;
                }
                height(editorContainer, height$1);
            }
            return base;
        }
        ;
        base.height = function(height$1, saveHeight) {
            if (!height$1 && height$1 !== 0) {
                return height(editorContainer);
            }
            base.dimensions(null, height$1, saveHeight);
            return base;
        }
        ;
        base.maximize = function(maximize) {
            var maximizeSize = 'sceditor-maximize';
            if (isUndefined(maximize)) {
                return hasClass(editorContainer, maximizeSize);
            }
            maximize = !!maximize;
            if (maximize) {
                maximizeScrollPosition = globalWin.pageYOffset;
            }
            toggleClass(globalDoc.documentElement, maximizeSize, maximize);
            toggleClass(globalDoc.body, maximizeSize, maximize);
            toggleClass(editorContainer, maximizeSize, maximize);
            base.width(maximize ? '100%' : options.width, false);
            base.height(maximize ? '100%' : options.height, false);
            if (!maximize) {
                globalWin.scrollTo(0, maximizeScrollPosition);
            }
            autoExpand();
            return base;
        }
        ;
        autoExpand = function() {
            if (options.autoExpand && !autoExpandThrottle) {
                autoExpandThrottle = setTimeout(base.expandToContent, 200);
            }
        }
        ;
        base.expandToContent = function(ignoreMaxHeight) {
            if (base.maximize()) {
                return;
            }
            clearTimeout(autoExpandThrottle);
            autoExpandThrottle = false;
            if (!autoExpandBounds) {
                var height$1 = options.resizeMinHeight || options.height || height(original);
                autoExpandBounds = {
                    min: height$1,
                    max: options.resizeMaxHeight || (height$1 * 2)
                };
            }
            var range = globalDoc.createRange();
            range.selectNodeContents(wysiwygBody);
            var rect = range.getBoundingClientRect();
            var current = wysiwygDocument.documentElement.clientHeight - 1;
            var spaceNeeded = rect.bottom - rect.top;
            var newHeight = base.height() + 1 + (spaceNeeded - current);
            if (!ignoreMaxHeight && autoExpandBounds.max !== -1) {
                newHeight = Math.min(newHeight, autoExpandBounds.max);
            }
            base.height(Math.ceil(Math.max(newHeight, autoExpandBounds.min)));
        }
        ;
        base.destroy = function() {
            if (!pluginManager) {
                return;
            }
            pluginManager.destroy();
            rangeHelper = null;
            pluginManager = null;
            if (dropdown) {
                remove(dropdown);
            }
            off(globalDoc, 'click', handleDocumentClick);
            var form = original.form;
            if (form) {
                off(form, 'reset', handleFormReset);
                off(form, 'submit', base.updateOriginal, EVENT_CAPTURE);
            }
            off(window, 'pagehide', base.updateOriginal);
            remove(sourceEditor);
            remove(toolbar);
            remove(editorContainer);
            delete original._sceditor;
            show(original);
            original.required = isRequired;
        }
        ;
        base.createDropDown = function(menuItem, name, content) {
            var dropDownCss, dropDownClass = 'sceditor-' + name;
            base.closeDropDown();
            if (dropdown && hasClass(dropdown, dropDownClass)) {
                return;
            }
            dropDownCss = extend({
                top: menuItem.offsetTop,
                left: menuItem.offsetLeft,
                marginTop: menuItem.clientHeight
            }, options.dropDownCss);
            dropdown = createElement('div', {
                className: 'sceditor-dropdown ' + dropDownClass
            });
            css(dropdown, dropDownCss);
            appendChild(dropdown, content);
            appendChild(editorContainer, dropdown);
            on(dropdown, 'click focusin', function(e) {
                e.stopPropagation();
            });
            if (dropdown) {
                var first = find(dropdown, 'input,textarea')[0];
                if (first) {
                    first.focus();
                }
            }
            var maxRight = jQuery(menuItem).parents('.sceditor-container').width();
            var diff = jQuery(dropdown).outerWidth() + menuItem.offsetLeft - maxRight;
            if (diff > 0) {
                jQuery(dropdown).css('left', (menuItem.offsetLeft - diff) + 'px');
            }
        }
        ;
        handleDocumentClick = function(e) {
            if (e.which !== 3 && dropdown && !e.defaultPrevented) {
                autoUpdate();
                base.closeDropDown();
            }
        }
        ;
        handleCutCopyEvt = function(e) {
            var range = rangeHelper.selectedRange();
            if (range) {
                var container = createElement('div', {}, wysiwygDocument);
                var firstParent;
                var parent = range.commonAncestorContainer;
                while (parent && isInline(parent, true)) {
                    if (parent.nodeType === ELEMENT_NODE) {
                        var clone = parent.cloneNode();
                        if (container.firstChild) {
                            appendChild(clone, container.firstChild);
                        }
                        appendChild(container, clone);
                        firstParent = firstParent || clone;
                    }
                    parent = parent.parentNode;
                }
                appendChild(firstParent || container, range.cloneContents());
                removeWhiteSpace(container);
                e.clipboardData.setData('text/html', container.innerHTML);
                each(find(container, 'p'), function(_, elm) {
                    convertElement(elm, 'div');
                });
                each(find(container, 'br'), function(_, elm) {
                    if (!elm.nextSibling || !isInline(elm.nextSibling, true)) {
                        remove(elm);
                    }
                });
                appendChild(wysiwygBody, container);
                e.clipboardData.setData('text/plain', container.innerText);
                remove(container);
                if (e.type === 'cut') {
                    range.deleteContents();
                }
                e.preventDefault();
            }
        }
        ;
        handlePasteEvt = function(e) {
            var editable = wysiwygBody;
            var clipboard = e.clipboardData;
            var loadImage = function(file) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    handlePasteData({
                        html: '<img src="' + e.target.result + '" />'
                    });
                }
                ;
                reader.readAsDataURL(file);
            };
            if (clipboard) {
                var data = {};
                var types = clipboard.types;
                var items = clipboard.items;
                e.preventDefault();
                for (var i = 0; i < types.length; i++) {
                    if (types.indexOf('text/html') < 0) {
                        if (globalWin.FileReader && items && IMAGE_MIME_REGEX.test(items[i].type)) {
                            return loadImage(clipboard.items[i].getAsFile());
                        }
                    }
                    data[types[i]] = clipboard.getData(types[i]);
                }
                data.text = data['text/plain'];
                data.html = sanitize(data['text/html']);
                handlePasteData(data);
            } else if (!pasteContentFragment) {
                var scrollTop = editable.scrollTop;
                rangeHelper.saveRange();
                pasteContentFragment = globalDoc.createDocumentFragment();
                while (editable.firstChild) {
                    appendChild(pasteContentFragment, editable.firstChild);
                }
                setTimeout(function() {
                    var html = editable.innerHTML;
                    editable.innerHTML = '';
                    appendChild(editable, pasteContentFragment);
                    editable.scrollTop = scrollTop;
                    pasteContentFragment = false;
                    rangeHelper.restoreRange();
                    handlePasteData({
                        html: sanitize(html)
                    });
                }, 0);
            }
        }
        ;
        handlePasteData = function(data) {
            var pasteArea = createElement('div', {}, wysiwygDocument);
            pluginManager.call('pasteRaw', data);
            trigger(editorContainer, 'pasteraw', data);
            if (data.html) {
                pasteArea.innerHTML = sanitize(data.html);
                fixNesting(pasteArea);
            } else {
                pasteArea.innerHTML = entities(data.text || '');
            }
            var paste = {
                val: pasteArea.innerHTML
            };
            if ('fragmentToSource'in format) {
                paste.val = format.fragmentToSource(paste.val, wysiwygDocument, currentNode);
            }
            pluginManager.call('paste', paste);
            trigger(editorContainer, 'paste', paste);
            if ('fragmentToHtml'in format) {
                paste.val = format.fragmentToHtml(paste.val, currentNode);
            }
            pluginManager.call('pasteHtml', paste);
            var parent = rangeHelper.getFirstBlockParent();
            base.wysiwygEditorInsertHtml(paste.val, null, true);
            merge(parent);
        }
        ;
        base.closeDropDown = function(focus) {
            if (dropdown) {
                remove(dropdown);
                dropdown = null;
            }
            if (focus === true) {
                base.focus();
            }
        }
        ;
        base.wysiwygEditorInsertHtml = function(html, endHtml, overrideCodeBlocking) {
            var marker, scrollTop, scrollTo, editorHeight = height(wysiwygEditor);
            base.focus();
            if (!overrideCodeBlocking && closest(currentBlockNode, 'code')) {
                return;
            }
            rangeHelper.insertHTML(html, endHtml);
            rangeHelper.saveRange();
            replaceEmoticons();
            fixNesting(wysiwygBody);
            wrapInlines(wysiwygBody, wysiwygDocument);
            marker = find(wysiwygBody, '#sceditor-end-marker')[0];
            show(marker);
            scrollTop = wysiwygBody.scrollTop;
            scrollTo = (getOffset(marker).top + (marker.offsetHeight * 1.5)) - editorHeight;
            hide(marker);
            if (scrollTo > scrollTop || scrollTo + editorHeight < scrollTop) {
                wysiwygBody.scrollTop = scrollTo;
            }
            triggerValueChanged(false);
            rangeHelper.restoreRange();
            appendNewLine();
        }
        ;
        base.wysiwygEditorInsertText = function(text, endText) {
            base.wysiwygEditorInsertHtml(entities(text), entities(endText));
        }
        ;
        base.insertText = function(text, endText) {
            if (base.inSourceMode()) {
                base.sourceEditorInsertText(text, endText);
            } else {
                base.wysiwygEditorInsertText(text, endText);
            }
            return base;
        }
        ;
        base.sourceEditorInsertText = function(text, endText) {
            var scrollTop, currentValue, startPos = sourceEditor.selectionStart, endPos = sourceEditor.selectionEnd;
            scrollTop = sourceEditor.scrollTop;
            sourceEditor.focus();
            currentValue = sourceEditor.value;
            if (endText) {
                text += currentValue.substring(startPos, endPos) + endText;
            }
            sourceEditor.value = currentValue.substring(0, startPos) + text + currentValue.substring(endPos, currentValue.length);
            sourceEditor.selectionStart = (startPos + text.length) - (endText ? endText.length : 0);
            sourceEditor.selectionEnd = sourceEditor.selectionStart;
            sourceEditor.scrollTop = scrollTop;
            sourceEditor.focus();
            triggerValueChanged();
        }
        ;
        base.getRangeHelper = function() {
            return rangeHelper;
        }
        ;
        base.sourceEditorCaret = function(position) {
            sourceEditor.focus();
            if (position) {
                sourceEditor.selectionStart = position.start;
                sourceEditor.selectionEnd = position.end;
                return this;
            }
            return {
                start: sourceEditor.selectionStart,
                end: sourceEditor.selectionEnd
            };
        }
        ;
        base.val = function(val, filter) {
            if (!isString(val)) {
                return base.inSourceMode() ? base.getSourceEditorValue(false) : base.getWysiwygEditorValue(filter);
            }
            if (!base.inSourceMode()) {
                if (filter !== false && 'toHtml'in format) {
                    val = format.toHtml(val);
                }
                base.setWysiwygEditorValue(val);
            } else {
                base.setSourceEditorValue(val);
            }
            return base;
        }
        ;
        base.insert = function(start, end, filter, convertEmoticons, allowMixed) {
            if (base.inSourceMode()) {
                base.sourceEditorInsertText(start, end);
                return base;
            }
            if (end) {
                var html = rangeHelper.selectedHtml();
                if (filter !== false && 'fragmentToSource'in format) {
                    html = format.fragmentToSource(html, wysiwygDocument, currentNode);
                }
                start += html + end;
            }
            if (filter !== false && 'fragmentToHtml'in format) {
                start = format.fragmentToHtml(start, currentNode);
            }
            if (filter !== false && allowMixed === true) {
                start = start.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');
            }
            base.wysiwygEditorInsertHtml(start);
            return base;
        }
        ;
        base.getWysiwygEditorValue = function(filter) {
            var html;
            var tmp = createElement('div', {}, wysiwygDocument);
            var childNodes = wysiwygBody.childNodes;
            for (var i = 0; i < childNodes.length; i++) {
                appendChild(tmp, childNodes[i].cloneNode(true));
            }
            appendChild(wysiwygBody, tmp);
            fixNesting(tmp);
            remove(tmp);
            html = tmp.innerHTML;
            if (filter !== false && format.hasOwnProperty('toSource')) {
                html = format.toSource(html, wysiwygDocument);
            }
            return html;
        }
        ;
        base.getBody = function() {
            return wysiwygBody;
        }
        ;
        base.getContentAreaContainer = function() {
            return wysiwygEditor;
        }
        ;
        base.getSourceEditorValue = function(filter) {
            var val = sourceEditor.value;
            if (filter !== false && 'toHtml'in format) {
                val = format.toHtml(val);
            }
            return val;
        }
        ;
        base.setWysiwygEditorValue = function(value) {
            if (!value) {
                value = '<p><br /></p>';
            }
            wysiwygBody.innerHTML = sanitize(value);
            replaceEmoticons();
            appendNewLine();
            triggerValueChanged();
            autoExpand();
        }
        ;
        base.setSourceEditorValue = function(value) {
            sourceEditor.value = value;
            triggerValueChanged();
        }
        ;
        base.updateOriginal = function() {
            original.value = base.val();
        }
        ;
        replaceEmoticons = function() {
            if (options.emoticonsEnabled) {
                replace(wysiwygBody, allEmoticons, options.emoticonsCompat);
            }
        }
        ;
        base.inSourceMode = function() {
            return hasClass(editorContainer, 'sourceMode');
        }
        ;
        base.sourceMode = function(enable) {
            var inSourceMode = base.inSourceMode();
            if (typeof enable !== 'boolean') {
                return inSourceMode;
            }
            if ((inSourceMode && !enable) || (!inSourceMode && enable)) {
                base.toggleSourceMode();
            }
            return base;
        }
        ;
        base.toggleSourceMode = function() {
            var isInSourceMode = base.inSourceMode();
            if (!isWysiwygSupported && isInSourceMode) {
                return;
            }
            if (!isInSourceMode) {
                rangeHelper.saveRange();
                rangeHelper.clear();
            }
            currentSelection = null;
            base.blur();
            if (isInSourceMode) {
                base.setWysiwygEditorValue(base.getSourceEditorValue());
            } else {
                base.setSourceEditorValue(base.getWysiwygEditorValue());
            }
            toggle(sourceEditor);
            toggle(wysiwygEditor);
            toggleClass(editorContainer, 'wysiwygMode', isInSourceMode);
            toggleClass(editorContainer, 'sourceMode', !isInSourceMode);
            updateToolBar();
            updateActiveButtons();
        }
        ;
        sourceEditorSelectedText = function() {
            sourceEditor.focus();
            return sourceEditor.value.substring(sourceEditor.selectionStart, sourceEditor.selectionEnd);
        }
        ;
        handleCommand = function(caller, cmd) {
            if (base.inSourceMode()) {
                if (cmd.txtExec) {
                    if (Array.isArray(cmd.txtExec)) {
                        base.sourceEditorInsertText.apply(base, cmd.txtExec);
                    } else {
                        cmd.txtExec.call(base, caller, sourceEditorSelectedText());
                    }
                }
            } else if (cmd.exec) {
                if (isFunction(cmd.exec)) {
                    cmd.exec.call(base, caller);
                } else {
                    base.execCommand(cmd.exec, cmd.hasOwnProperty('execParam') ? cmd.execParam : null);
                }
            }
        }
        ;
        base.execCommand = function(command, param) {
            var executed = false
              , commandObj = base.commands[command];
            base.focus();
            if (closest(rangeHelper.parentNode(), 'code')) {
                return;
            }
            try {
                executed = wysiwygDocument.execCommand(command, false, param);
            } catch (ex) {}
            if (!executed && commandObj && commandObj.errorMessage) {
                alert(base._(commandObj.errorMessage));
            }
            updateActiveButtons();
        }
        ;
        checkSelectionChanged = function() {
            function check() {
                if (wysiwygWindow.getSelection() && wysiwygWindow.getSelection().rangeCount <= 0) {
                    currentSelection = null;
                } else if (rangeHelper && !rangeHelper.compare(currentSelection)) {
                    currentSelection = rangeHelper.cloneSelected();
                    if (currentSelection && currentSelection.collapsed) {
                        var parent = currentSelection.startContainer;
                        var offset = currentSelection.startOffset;
                        if (offset && parent.nodeType !== TEXT_NODE) {
                            parent = parent.childNodes[offset];
                        }
                        while (parent && parent.parentNode !== wysiwygBody) {
                            parent = parent.parentNode;
                        }
                        if (parent && isInline(parent, true)) {
                            rangeHelper.saveRange();
                            wrapInlines(wysiwygBody, wysiwygDocument);
                            rangeHelper.restoreRange();
                        }
                    }
                    trigger(editorContainer, 'selectionchanged');
                }
                isSelectionCheckPending = false;
            }
            if (isSelectionCheckPending) {
                return;
            }
            isSelectionCheckPending = true;
            if ('onselectionchange'in wysiwygDocument) {
                check();
            } else {
                setTimeout(check, 100);
            }
        }
        ;
        checkNodeChanged = function() {
            var oldNode, node = rangeHelper.parentNode();
            if (currentNode !== node) {
                oldNode = currentNode;
                currentNode = node;
                currentBlockNode = rangeHelper.getFirstBlockParent(node);
                trigger(editorContainer, 'nodechanged', {
                    oldNode: oldNode,
                    newNode: currentNode
                });
            }
        }
        ;
        base.currentNode = function() {
            return currentNode;
        }
        ;
        base.currentBlockNode = function() {
            return currentBlockNode;
        }
        ;
        updateActiveButtons = function() {
            var firstBlock, parent;
            var activeClass = 'active';
            var doc = wysiwygDocument;
            var isSource = base.sourceMode();
            if (base.readOnly()) {
                each(find(toolbar, activeClass), function(_, menuItem) {
                    removeClass(menuItem, activeClass);
                });
                return;
            }
            if (!isSource) {
                parent = rangeHelper.parentNode();
                firstBlock = rangeHelper.getFirstBlockParent(parent);
            }
            for (var j = 0; j < btnStateHandlers.length; j++) {
                var state = 0;
                var btn = toolbarButtons[btnStateHandlers[j].name];
                var stateFn = btnStateHandlers[j].state;
                var isDisabled = (isSource && !btn._sceTxtMode) || (!isSource && !btn._sceWysiwygMode);
                if (isString(stateFn)) {
                    if (!isSource) {
                        try {
                            state = doc.queryCommandEnabled(stateFn) ? 0 : -1;
                            if (state > -1) {
                                state = doc.queryCommandState(stateFn) ? 1 : 0;
                            }
                        } catch (ex) {}
                    }
                } else if (!isDisabled) {
                    state = stateFn.call(base, parent, firstBlock);
                }
                toggleClass(btn, 'disabled', isDisabled || state < 0);
                toggleClass(btn, activeClass, state > 0);
            }
            if (icons && icons.update) {
                icons.update(isSource, parent, firstBlock);
            }
        }
        ;
        handleKeyPress = function(e) {
            if (e.defaultPrevented) {
                return;
            }
            base.closeDropDown();
            if (e.which === 13) {
                var LIST_TAGS = 'li,ul,ol';
                if (!is(currentBlockNode, LIST_TAGS) && hasStyling(currentBlockNode)) {
                    var br = createElement('br', {}, wysiwygDocument);
                    rangeHelper.insertNode(br);
                    var parent = br.parentNode;
                    var lastChild = parent.lastChild;
                    if (lastChild && lastChild.nodeType === TEXT_NODE && lastChild.nodeValue === '') {
                        remove(lastChild);
                        lastChild = parent.lastChild;
                    }
                    if (!isInline(parent, true) && lastChild === br && isInline(br.previousSibling)) {
                        rangeHelper.insertHTML('<br>');
                    }
                    e.preventDefault();
                }
            }
        }
        ;
        appendNewLine = function() {
            rTraverse(wysiwygBody, function(node) {
                if (node.nodeType === ELEMENT_NODE && !/inline/.test(css(node, 'display'))) {
                    if (!is(node, '.sceditor-nlf') && hasStyling(node)) {
                        var paragraph = createElement('p', {}, wysiwygDocument);
                        paragraph.className = 'sceditor-nlf';
                        paragraph.innerHTML = '<br />';
                        appendChild(wysiwygBody, paragraph);
                        return false;
                    }
                }
                if ((node.nodeType === 3 && !/^\s*$/.test(node.nodeValue)) || is(node, 'br')) {
                    return false;
                }
            });
        }
        ;
        handleFormReset = function() {
            base.val(original.value);
        }
        ;
        handleMouseDown = function() {
            base.closeDropDown();
        }
        ;
        base._ = function() {
            var undef, args = arguments;
            if (locale && locale[args[0]]) {
                args[0] = locale[args[0]];
            }
            return args[0].replace(/\{(\d+)\}/g, function(str, p1) {
                return args[p1 - 0 + 1] !== undef ? args[p1 - 0 + 1] : '{' + p1 + '}';
            });
        }
        ;
        handleEvent = function(e) {
            if (pluginManager) {
                pluginManager.call(e.type + 'Event', e, base);
            }
            var name = (e.target === sourceEditor ? 'scesrc' : 'scewys') + e.type;
            if (eventHandlers[name]) {
                eventHandlers[name].forEach(function(fn) {
                    fn.call(base, e);
                });
            }
        }
        ;
        base.bind = function(events, handler, excludeWysiwyg, excludeSource) {
            events = events.split(' ');
            var i = events.length;
            while (i--) {
                if (isFunction(handler)) {
                    var wysEvent = 'scewys' + events[i];
                    var srcEvent = 'scesrc' + events[i];
                    if (!excludeWysiwyg) {
                        eventHandlers[wysEvent] = eventHandlers[wysEvent] || [];
                        eventHandlers[wysEvent].push(handler);
                    }
                    if (!excludeSource) {
                        eventHandlers[srcEvent] = eventHandlers[srcEvent] || [];
                        eventHandlers[srcEvent].push(handler);
                    }
                    if (events[i] === 'valuechanged') {
                        triggerValueChanged.hasHandler = true;
                    }
                }
            }
            return base;
        }
        ;
        base.unbind = function(events, handler, excludeWysiwyg, excludeSource) {
            events = events.split(' ');
            var i = events.length;
            while (i--) {
                if (isFunction(handler)) {
                    if (!excludeWysiwyg) {
                        arrayRemove(eventHandlers['scewys' + events[i]] || [], handler);
                    }
                    if (!excludeSource) {
                        arrayRemove(eventHandlers['scesrc' + events[i]] || [], handler);
                    }
                }
            }
            return base;
        }
        ;
        base.blur = function(handler, excludeWysiwyg, excludeSource) {
            if (isFunction(handler)) {
                base.bind('blur', handler, excludeWysiwyg, excludeSource);
            } else if (!base.sourceMode()) {
                wysiwygBody.blur();
            } else {
                sourceEditor.blur();
            }
            return base;
        }
        ;
        base.focus = function(handler, excludeWysiwyg, excludeSource) {
            if (isFunction(handler)) {
                base.bind('focus', handler, excludeWysiwyg, excludeSource);
            } else if (!base.inSourceMode()) {
                if (find(wysiwygDocument, ':focus').length) {
                    return;
                }
                var container;
                var rng = rangeHelper.selectedRange();
                if (!currentSelection) {
                    autofocus(true);
                }
                if (rng && rng.endOffset === 1 && rng.collapsed) {
                    container = rng.endContainer;
                    if (container && container.childNodes.length === 1 && is(container.firstChild, 'br')) {
                        rng.setStartBefore(container.firstChild);
                        rng.collapse(true);
                        rangeHelper.selectRange(rng);
                    }
                }
                wysiwygWindow.focus();
                wysiwygBody.focus();
            } else {
                sourceEditor.focus();
            }
            updateActiveButtons();
            return base;
        }
        ;
        base.keyDown = function(handler, excludeWysiwyg, excludeSource) {
            return base.bind('keydown', handler, excludeWysiwyg, excludeSource);
        }
        ;
        base.keyPress = function(handler, excludeWysiwyg, excludeSource) {
            return base.bind('keypress', handler, excludeWysiwyg, excludeSource);
        }
        ;
        base.keyUp = function(handler, excludeWysiwyg, excludeSource) {
            return base.bind('keyup', handler, excludeWysiwyg, excludeSource);
        }
        ;
        base.nodeChanged = function(handler) {
            return base.bind('nodechanged', handler, false, true);
        }
        ;
        base.selectionChanged = function(handler) {
            return base.bind('selectionchanged', handler, false, true);
        }
        ;
        base.valueChanged = function(handler, excludeWysiwyg, excludeSource) {
            return base.bind('valuechanged', handler, excludeWysiwyg, excludeSource);
        }
        ;
        emoticonsKeyPress = function(e) {
            var replacedEmoticon, cachePos = 0, emoticonsCache = base.emoticonsCache, curChar = String.fromCharCode(e.which);
            if (closest(currentBlockNode, 'code')) {
                return;
            }
            if (!emoticonsCache) {
                emoticonsCache = [];
                each(allEmoticons, function(key, html) {
                    emoticonsCache[cachePos++] = [key, html];
                });
                emoticonsCache.sort(function(a, b) {
                    return a[0].length - b[0].length;
                });
                base.emoticonsCache = emoticonsCache;
                base.longestEmoticonCode = emoticonsCache[emoticonsCache.length - 1][0].length;
            }
            replacedEmoticon = rangeHelper.replaceKeyword(base.emoticonsCache, true, true, base.longestEmoticonCode, options.emoticonsCompat, curChar);
            if (replacedEmoticon) {
                if (!options.emoticonsCompat || !/^\s$/.test(curChar)) {
                    e.preventDefault();
                }
            }
        }
        ;
        emoticonsCheckWhitespace = function() {
            checkWhitespace(currentBlockNode, rangeHelper);
        }
        ;
        base.emoticons = function(enable) {
            if (!enable && enable !== false) {
                return options.emoticonsEnabled;
            }
            options.emoticonsEnabled = enable;
            if (enable) {
                on(wysiwygBody, 'keypress', emoticonsKeyPress);
                if (!base.sourceMode()) {
                    rangeHelper.saveRange();
                    replaceEmoticons();
                    triggerValueChanged(false);
                    rangeHelper.restoreRange();
                }
            } else {
                var emoticons = find(wysiwygBody, 'img[data-sceditor-emoticon]');
                each(emoticons, function(_, img) {
                    var text = data(img, 'sceditor-emoticon');
                    var textNode = wysiwygDocument.createTextNode(text);
                    img.parentNode.replaceChild(textNode, img);
                });
                off(wysiwygBody, 'keypress', emoticonsKeyPress);
                triggerValueChanged();
            }
            return base;
        }
        ;
        base.css = function(css) {
            if (!inlineCss) {
                inlineCss = createElement('style', {
                    id: 'inline'
                }, wysiwygDocument);
                appendChild(wysiwygDocument.head, inlineCss);
            }
            if (!isString(css)) {
                return inlineCss.styleSheet ? inlineCss.styleSheet.cssText : inlineCss.innerHTML;
            }
            if (inlineCss.styleSheet) {
                inlineCss.styleSheet.cssText = css;
            } else {
                inlineCss.innerHTML = css;
            }
            return base;
        }
        ;
        handleKeyDown = function(e) {
            var shortcut = []
              , SHIFT_KEYS = {
                '`': '~',
                '1': '!',
                '2': '@',
                '3': '#',
                '4': '$',
                '5': '%',
                '6': '^',
                '7': '&',
                '8': '*',
                '9': '(',
                '0': ')',
                '-': '_',
                '=': '+',
                ';': ': ',
                '\'': '"',
                ',': '<',
                '.': '>',
                '/': '?',
                '\\': '|',
                '[': '{',
                ']': '}'
            }
              , SPECIAL_KEYS = {
                8: 'backspace',
                9: 'tab',
                13: 'enter',
                19: 'pause',
                20: 'capslock',
                27: 'esc',
                32: 'space',
                33: 'pageup',
                34: 'pagedown',
                35: 'end',
                36: 'home',
                37: 'left',
                38: 'up',
                39: 'right',
                40: 'down',
                45: 'insert',
                46: 'del',
                91: 'win',
                92: 'win',
                93: 'select',
                96: '0',
                97: '1',
                98: '2',
                99: '3',
                100: '4',
                101: '5',
                102: '6',
                103: '7',
                104: '8',
                105: '9',
                106: '*',
                107: '+',
                109: '-',
                110: '.',
                111: '/',
                112: 'f1',
                113: 'f2',
                114: 'f3',
                115: 'f4',
                116: 'f5',
                117: 'f6',
                118: 'f7',
                119: 'f8',
                120: 'f9',
                121: 'f10',
                122: 'f11',
                123: 'f12',
                144: 'numlock',
                145: 'scrolllock',
                186: ';',
                187: '=',
                188: ',',
                189: '-',
                190: '.',
                191: '/',
                192: '`',
                219: '[',
                220: '\\',
                221: ']',
                222: '\''
            }
              , NUMPAD_SHIFT_KEYS = {
                109: '-',
                110: 'del',
                111: '/',
                96: '0',
                97: '1',
                98: '2',
                99: '3',
                100: '4',
                101: '5',
                102: '6',
                103: '7',
                104: '8',
                105: '9'
            }
              , which = e.which
              , character = SPECIAL_KEYS[which] || String.fromCharCode(which).toLowerCase();
            if (e.ctrlKey || e.metaKey) {
                shortcut.push('ctrl');
            }
            if (e.altKey) {
                shortcut.push('alt');
            }
            if (e.shiftKey) {
                shortcut.push('shift');
                if (NUMPAD_SHIFT_KEYS[which]) {
                    character = NUMPAD_SHIFT_KEYS[which];
                } else if (SHIFT_KEYS[character]) {
                    character = SHIFT_KEYS[character];
                }
            }
            if (character && (which < 16 || which > 18)) {
                shortcut.push(character);
            }
            shortcut = shortcut.join('+');
            if (shortcutHandlers[shortcut] && shortcutHandlers[shortcut].call(base) === false) {
                e.stopPropagation();
                e.preventDefault();
            }
        }
        ;
        base.addShortcut = function(shortcut, cmd) {
            shortcut = shortcut.toLowerCase();
            if (isString(cmd)) {
                shortcutHandlers[shortcut] = function() {
                    handleCommand(toolbarButtons[cmd], base.commands[cmd]);
                    return false;
                }
                ;
            } else {
                shortcutHandlers[shortcut] = cmd;
            }
            return base;
        }
        ;
        base.removeShortcut = function(shortcut) {
            delete shortcutHandlers[shortcut.toLowerCase()];
            return base;
        }
        ;
        handleBackSpace = function(e) {
            var node, offset, range, parent;
            if (options.disableBlockRemove || e.which !== 8 || !(range = rangeHelper.selectedRange())) {
                return;
            }
            node = range.startContainer;
            offset = range.startOffset;
            if (offset !== 0 || !(parent = currentStyledBlockNode()) || is(parent, 'body')) {
                return;
            }
            while (node !== parent) {
                while (node.previousSibling) {
                    node = node.previousSibling;
                    if (node.nodeType !== TEXT_NODE || node.nodeValue) {
                        return;
                    }
                }
                if (!(node = node.parentNode)) {
                    return;
                }
            }
            base.clearBlockFormatting(parent);
            e.preventDefault();
        }
        ;
        currentStyledBlockNode = function() {
            var block = currentBlockNode;
            while (!hasStyling(block) || isInline(block, true)) {
                if (!(block = block.parentNode) || is(block, 'body')) {
                    return;
                }
            }
            return block;
        }
        ;
        base.clearBlockFormatting = function(block) {
            block = block || currentStyledBlockNode();
            if (!block || is(block, 'body')) {
                return base;
            }
            rangeHelper.saveRange();
            block.className = '';
            attr(block, 'style', '');
            if (!is(block, 'p,div,td')) {
                convertElement(block, 'p');
            }
            rangeHelper.restoreRange();
            return base;
        }
        ;
        triggerValueChanged = function(saveRange) {
            if (!pluginManager || (!pluginManager.hasHandler('valuechangedEvent') && !triggerValueChanged.hasHandler)) {
                return;
            }
            var currentHtml, sourceMode = base.sourceMode(), hasSelection = !sourceMode && rangeHelper.hasSelection();
            isComposing = false;
            saveRange = saveRange !== false && !wysiwygDocument.getElementById('sceditor-start-marker');
            if (valueChangedKeyUpTimer) {
                clearTimeout(valueChangedKeyUpTimer);
                valueChangedKeyUpTimer = false;
            }
            if (hasSelection && saveRange) {
                rangeHelper.saveRange();
            }
            currentHtml = sourceMode ? sourceEditor.value : wysiwygBody.innerHTML;
            if (currentHtml !== triggerValueChanged.lastVal) {
                triggerValueChanged.lastVal = currentHtml;
                trigger(editorContainer, 'valuechanged', {
                    rawValue: sourceMode ? base.val() : currentHtml
                });
            }
            if (hasSelection && saveRange) {
                rangeHelper.removeMarkers();
            }
        }
        ;
        valueChangedBlur = function() {
            if (valueChangedKeyUpTimer) {
                triggerValueChanged();
            }
        }
        ;
        valueChangedKeyUp = function(e) {
            var which = e.which
              , lastChar = valueChangedKeyUp.lastChar
              , lastWasSpace = (lastChar === 13 || lastChar === 32)
              , lastWasDelete = (lastChar === 8 || lastChar === 46);
            valueChangedKeyUp.lastChar = which;
            if (isComposing) {
                return;
            }
            if (which === 13 || which === 32) {
                if (!lastWasSpace) {
                    triggerValueChanged();
                } else {
                    valueChangedKeyUp.triggerNext = true;
                }
            } else if (which === 8 || which === 46) {
                if (!lastWasDelete) {
                    triggerValueChanged();
                } else {
                    valueChangedKeyUp.triggerNext = true;
                }
            } else if (valueChangedKeyUp.triggerNext) {
                triggerValueChanged();
                valueChangedKeyUp.triggerNext = false;
            }
            clearTimeout(valueChangedKeyUpTimer);
            valueChangedKeyUpTimer = setTimeout(function() {
                if (!isComposing) {
                    triggerValueChanged();
                }
            }, 1500);
        }
        ;
        handleComposition = function(e) {
            isComposing = /start/i.test(e.type);
            if (!isComposing) {
                triggerValueChanged();
            }
        }
        ;
        autoUpdate = function() {
            base.updateOriginal();
        }
        ;
        init();
    }
    SCEditor.locale = {};
    SCEditor.formats = {};
    SCEditor.icons = {};
    SCEditor.command = {
        get: function(name) {
            return defaultCmds[name] || null;
        },
        set: function(name, cmd) {
            if (!name || !cmd) {
                return false;
            }
            cmd = extend(defaultCmds[name] || {}, cmd);
            cmd.remove = function() {
                SCEditor.command.remove(name);
            }
            ;
            defaultCmds[name] = cmd;
            return this;
        },
        remove: function(name) {
            if (defaultCmds[name]) {
                delete defaultCmds[name];
            }
            return this;
        }
    };
    window.sceditor = {
        command: SCEditor.command,
        commands: defaultCmds,
        defaultOptions: defaultOptions,
        ios: ios,
        isWysiwygSupported: isWysiwygSupported,
        regexEscape: regex,
        escapeEntities: entities,
        escapeUriScheme: uriScheme,
        dom: {
            css: css,
            attr: attr,
            removeAttr: removeAttr,
            is: is,
            closest: closest,
            width: width,
            height: height,
            traverse: traverse,
            rTraverse: rTraverse,
            parseHTML: parseHTML,
            hasStyling: hasStyling,
            convertElement: convertElement,
            blockLevelList: blockLevelList,
            canHaveChildren: canHaveChildren,
            isInline: isInline,
            copyCSS: copyCSS,
            fixNesting: fixNesting,
            findCommonAncestor: findCommonAncestor,
            getSibling: getSibling,
            removeWhiteSpace: removeWhiteSpace,
            extractContents: extractContents,
            getOffset: getOffset,
            getStyle: getStyle,
            hasStyle: hasStyle,
            hasClass: hasClass,
            escapeEntities: entities
        },
        locale: SCEditor.locale,
        icons: SCEditor.icons,
        utils: {
            each: each,
            isEmptyObject: isEmptyObject,
            extend: extend
        },
        plugins: PluginManager.plugins,
        formats: SCEditor.formats,
        create: function(textarea, options) {
            options = options || {};
            if (parent(textarea, '.sceditor-container')) {
                return;
            }
            if (options.runWithoutWysiwygSupport || isWysiwygSupported) {
                (new SCEditor(textarea,options));
            }
        },
        instance: function(textarea) {
            return textarea._sceditor;
        }
    };
    $__default.default.sceditor = window.sceditor;
    $__default.default.fn.sceditor = function(options) {
        var instance;
        var ret = [];
        this.each(function() {
            instance = this._sceditor;
            if (options === 'state') {
                ret.push(!!instance);
            } else if (options === 'instance') {
                ret.push(instance);
            } else if (!instance) {
                $__default.default.sceditor.create(this, options);
            }
        });
        if (!ret.length) {
            return this;
        }
        return ret.length === 1 ? ret[0] : ret;
    }
    ;
}
)(jQuery);
(function() {
    'use strict';
    sceditor.locale['fr-FR'] = {
        'Bold': 'Gras',
        'Italic': 'Italique',
        'Underline': 'Souligné',
        'Strikethrough': 'Barré',
        'Subscript': 'Indice',
        'Superscript': 'Exposant',
        'Align left': 'Aligner à gauche',
        'Center': 'Centrer',
        'Align right': 'Aligner à droite',
        'Justify': 'Justifier',
        'Font Name': 'Police',
        'Font Size': 'Taille de police',
        'Font Color': 'Couleur de police',
        'Remove Formatting': 'Enlever le formatage',
        'Cut': 'Couper',
        'Your browser does not allow the cut command. Please use the keyboard shortcut Ctrl/Cmd-X': 'Votre navigateur n\'autorise pas la commande \'Couper\'. Merci d\'utiliser le raccourcis clavier Ctrl/Cmd+X',
        'Copy': 'Copier',
        'Your browser does not allow the copy command. Please use the keyboard shortcut Ctrl/Cmd-C': 'Votre navigateur n\'autorise pas la commande \'Copier\'. Merci d\'utiliser le raccourcis clavier Ctrl/Cmd+C',
        'Paste': 'Coller',
        'Your browser does not allow the paste command. Please use the keyboard shortcut Ctrl/Cmd-V': 'Votre navigateur n\'autorise pas la commande \'Coller\'. Merci d\'utiliser le raccourcis clavier Ctrl/Cmd+V',
        'Paste your text inside the following box:': 'Collez votre texte à l\'intérieur de ce bloc',
        'Paste Text': 'Texte collé',
        'Bullet list': 'Liste à puce',
        'Numbered list': 'Liste numérotée',
        'Undo': 'Annuler',
        'Redo': 'Rétablir',
        'Rows:': 'Lignes',
        'Cols:': 'Colonnes',
        'Insert a table': 'Insérer un tableau',
        'Insert a horizontal rule': 'Insérer une ligne horizontale',
        'Code': 'Code',
        'Insert a Quote': 'Insérer une citation',
        'Width (optional):': 'Largeur (Optionnelle)',
        'Height (optional):': 'Hauteur (Optionnelle)',
        'Insert an image': 'Insérer une image ou une vidéo',
        'E-mail:': 'Courriel',
        'Insert an email': 'Insérer un courriel',
        'URL:': 'URL',
        'Insert a link': 'Insérer un lien',
        'Unlink': 'Supprimer un lien',
        'More': 'Plus',
        'Insert an emoticon': 'Insérer une émoticône',
        'Video URL:': 'URL Vidéo Youtube',
        'Insert': 'Insérer',
        'Insert a YouTube video': 'Insérer une vidéo YouTube',
        'Insert current date': 'Insérer la date actuelle',
        'Insert current time': 'Insérer l\'heure actuelle',
        'Print': 'Imprimer',
        'View source': 'Afficher le texte brut',
        'Description (optional):': 'Description (Optionnelle)',
        'Enter the image URL:': 'Entrez l\'URL de l\'image:',
        'Enter the e-mail address:': 'Entrez le courriel:',
        'Enter the displayed text:': 'Entrez le texte affiché:',
        'Enter URL:': 'Entrez une URL:',
        'Enter the YouTube video URL or ID:': 'Entrez l\'URL ou l\'ID de la vidéo YouTube:',
        'Invalid YouTube video': 'Vidéo YouTube invalide',
        'Right-to-Left': 'De droite à gauche',
        'Left-to-Right': 'De gauche à droite',
        dateFormat: 'day/month/year'
    };
    sceditor.locale['fr'] = sceditor.locale['fr-FR'];
}
)();
(function(sceditor) {
    'use strict';
    var escapeEntities = sceditor.escapeEntities;
    var escapeUriScheme = sceditor.escapeUriScheme;
    var dom = sceditor.dom;
    var utils = sceditor.utils;
    var css = dom.css;
    var attr = dom.attr;
    var is = dom.is;
    var extend = utils.extend;
    var each = utils.each;
    var EMOTICON_DATA_ATTR = 'data-sceditor-emoticon';
    var getEditorCommand = sceditor.command.get;
    var QuoteType = {
        always: 1,
        never: 2,
        auto: 3
    };
    var defaultCommandsOverrides = {
        bold: {
            txtExec: ['[b]', '[/b]']
        },
        italic: {
            txtExec: ['[i]', '[/i]']
        },
        underline: {
            txtExec: ['[u]', '[/u]']
        },
        strike: {
            txtExec: ['[s]', '[/s]']
        },
        subscript: {
            txtExec: ['[sub]', '[/sub]']
        },
        superscript: {
            txtExec: ['[sup]', '[/sup]']
        },
        left: {
            txtExec: ['[left]', '[/left]']
        },
        center: {
            txtExec: ['[center]', '[/center]']
        },
        right: {
            txtExec: ['[right]', '[/right]']
        },
        justify: {
            txtExec: ['[justify]', '[/justify]']
        },
        font: {
            txtExec: function(caller) {
                var editor = this;
                getEditorCommand('font')._dropDown(editor, caller, function(fontName) {
                    editor.insertText('[font=' + fontName + ']', '[/font]');
                });
            }
        },
        size: {
            txtExec: function(caller) {
                var editor = this;
                getEditorCommand('size')._dropDown(editor, caller, function(fontSize) {
                    editor.insertText('[size=' + fontSize + ']', '[/size]');
                });
            }
        },
        color: {
            txtExec: function(caller) {
                var editor = this;
                getEditorCommand('color')._dropDown(editor, caller, function(color) {
                    editor.insertText('[color=' + color + ']', '[/color]');
                });
            }
        },
        bulletlist: {
            txtExec: function(caller, selected) {
                this.insertText('[ul]\n[li]' + selected.split(/\r?\n/).join('[/li]\n[li]') + '[/li]\n[/ul]');
            }
        },
        orderedlist: {
            txtExec: function(caller, selected) {
                this.insertText('[ol]\n[li]' + selected.split(/\r?\n/).join('[/li]\n[li]') + '[/li]\n[/ol]');
            }
        },
        table: {
            txtExec: ['[table][tr][td]', '[/td][/tr][/table]']
        },
        horizontalrule: {
            txtExec: ['[hr]']
        },
        code: {
            txtExec: ['[code]', '[/code]']
        },
        image: {
            txtExec: function(caller, selected) {
                var editor = this;
                getEditorCommand('image')._dropDown(editor, caller, selected, function(url, width, height) {
                    var attrs = '';
                    if (width) {
                        attrs += ' width=' + width;
                    }
                    if (height) {
                        attrs += ' height=' + height;
                    }
                    editor.insertText('[img' + attrs + ']' + url + '[/img]');
                });
            }
        },
        email: {
            txtExec: function(caller, selected) {
                var editor = this;
                getEditorCommand('email')._dropDown(editor, caller, function(url, text) {
                    editor.insertText('[email=' + url + ']' + (text || selected || url) + '[/email]');
                });
            }
        },
        link: {
            txtExec: function(caller, selected) {
                var editor = this;
                getEditorCommand('link')._dropDown(editor, caller, function(url, text) {
                    editor.insertText('[url=' + url + ']' + (text || selected || url) + '[/url]');
                });
            }
        },
        quote: {
            txtExec: ['[quote]', '[/quote]']
        },
        youtube: {
            txtExec: function(caller) {
                var editor = this;
                getEditorCommand('youtube')._dropDown(editor, caller, function(id) {
                    editor.insertText('[youtube]' + id + '[/youtube]');
                });
            }
        },
        rtl: {
            txtExec: ['[rtl]', '[/rtl]']
        },
        ltr: {
            txtExec: ['[ltr]', '[/ltr]']
        }
    };
    var bbcodeHandlers = {
        b: {
            tags: {
                b: null,
                strong: null
            },
            styles: {
                'font-weight': ['bold', 'bolder', '401', '700', '800', '900']
            },
            format: '[b]{0}[/b]',
            html: '<strong>{0}</strong>'
        },
        i: {
            tags: {
                i: null,
                em: null
            },
            styles: {
                'font-style': ['italic', 'oblique']
            },
            format: '[i]{0}[/i]',
            html: '<em>{0}</em>'
        },
        u: {
            tags: {
                u: null
            },
            styles: {
                'text-decoration': ['underline']
            },
            format: '[u]{0}[/u]',
            html: '<u>{0}</u>'
        },
        s: {
            tags: {
                s: null,
                strike: null
            },
            styles: {
                'text-decoration': ['line-through']
            },
            format: '[s]{0}[/s]',
            html: '<s>{0}</s>'
        },
        sub: {
            tags: {
                sub: null
            },
            format: '[sub]{0}[/sub]',
            html: '<sub>{0}</sub>'
        },
        sup: {
            tags: {
                sup: null
            },
            format: '[sup]{0}[/sup]',
            html: '<sup>{0}</sup>'
        },
        font: {
            tags: {
                font: {
                    face: null
                }
            },
            styles: {
                'font-family': null
            },
            quoteType: QuoteType.never,
            format: function(element, content) {
                var font;
                if (!is(element, 'font') || !(font = attr(element, 'face'))) {
                    font = css(element, 'font-family');
                }
                return '[font=' + _stripQuotes(font) + ']' + content + '[/font]';
            },
            html: '<font face="{defaultattr}">{0}</font>'
        },
        size: {
            tags: {
                font: {
                    size: null
                }
            },
            styles: {
                'font-size': null
            },
            format: function(element, content) {
                if (jQuery(element).hasClass('readOnly'))
                    return content;
                var fontSize = attr(element, 'size')
                  , size = 2;
                if (!fontSize) {
                    fontSize = css(element, 'fontSize');
                }
                if (fontSize.indexOf('px') > -1) {
                    fontSize = fontSize.replace('px', '') - 0;
                    if (fontSize < 12) {
                        size = 1;
                    }
                    if (fontSize > 15) {
                        size = 3;
                    }
                    if (fontSize > 17) {
                        size = 4;
                    }
                    if (fontSize > 23) {
                        size = 5;
                    }
                    if (fontSize > 31) {
                        size = 6;
                    }
                    if (fontSize > 47) {
                        size = 7;
                    }
                } else {
                    size = fontSize;
                }
                return '[size=' + size + ']' + content + '[/size]';
            },
            html: '<font size="{defaultattr}">{!0}</font>'
        },
        color: {
            tags: {
                font: {
                    color: null
                }
            },
            styles: {
                color: null
            },
            quoteType: QuoteType.never,
            format: function(elm, content) {
                var color;
                if (!is(elm, 'font') || !(color = attr(elm, 'color'))) {
                    color = elm.style.color || css(elm, 'color');
                }
                return '[color=' + _normaliseColour(color) + ']' + content + '[/color]';
            },
            html: function(token, attrs, content) {
                return '<font color="' + escapeEntities(_normaliseColour(attrs.defaultattr), true) + '">' + content + '</font>';
            }
        },
        ul: {
            tags: {
                ul: null
            },
            breakStart: true,
            isInline: false,
            skipLastLineBreak: true,
            format: '[ul]{0}[/ul]',
            html: '<ul>{0}</ul>'
        },
        list: {
            breakStart: true,
            isInline: false,
            skipLastLineBreak: true,
            html: '<ul>{0}</ul>'
        },
        ol: {
            tags: {
                ol: null
            },
            breakStart: true,
            isInline: false,
            skipLastLineBreak: true,
            format: '[ol]{0}[/ol]',
            html: '<ol>{0}</ol>'
        },
        li: {
            tags: {
                li: null
            },
            isInline: false,
            closedBy: ['/ul', '/ol', '/list', '*', 'li'],
            format: '[li]{0}[/li]',
            html: '<li>{0}</li>'
        },
        '*': {
            isInline: false,
            closedBy: ['/ul', '/ol', '/list', '*', 'li'],
            html: '<li>{0}</li>'
        },
        table: {
            tags: {
                table: null
            },
            isInline: false,
            isHtmlInline: true,
            skipLastLineBreak: true,
            format: '[table]{0}[/table]',
            html: '<table>{0}</table>'
        },
        tr: {
            tags: {
                tr: null
            },
            isInline: false,
            skipLastLineBreak: true,
            format: '[tr]{0}[/tr]',
            html: '<tr>{0}</tr>'
        },
        th: {
            tags: {
                th: null
            },
            allowsEmpty: true,
            isInline: false,
            format: '[th]{0}[/th]',
            html: '<th>{0}</th>'
        },
        td: {
            tags: {
                td: null
            },
            allowsEmpty: true,
            isInline: false,
            format: '[td]{0}[/td]',
            html: '<td>{0}</td>'
        },
        emoticon: {
            allowsEmpty: true,
            tags: {
                img: {
                    src: null,
                    'data-sceditor-emoticon': null
                }
            },
            format: function(element, content) {
                return attr(element, EMOTICON_DATA_ATTR) + content;
            },
            html: '{0}'
        },
        hr: {
            tags: {
                hr: null
            },
            allowsEmpty: true,
            isSelfClosing: true,
            isInline: false,
            format: '[hr]{0}',
            html: '<hr />'
        },
        img: {
            allowsEmpty: true,
            tags: {
                img: {
                    src: null
                }
            },
            allowedChildren: ['#'],
            quoteType: QuoteType.never,
            format: function(element, content) {
                var width, height, attribs = '', style = function(name) {
                    return element.style ? element.style[name] : null;
                };
                if (attr(element, EMOTICON_DATA_ATTR)) {
                    return content;
                }
                width = attr(element, 'width') || style('width');
                height = attr(element, 'height') || style('height');
                if ((element.complete && (width || height)) || (width && height)) {
                    attribs = '=' + dom.width(element) + 'x' + dom.height(element);
                }
                return '[img' + attribs + ']' + attr(element, 'src') + '[/img]';
            },
            html: function(token, attrs, content) {
                var undef, width, height, match, attribs = '';
                width = attrs.width;
                height = attrs.height;
                if (attrs.defaultattr) {
                    match = attrs.defaultattr.split(/x/i);
                    width = match[0];
                    height = (match.length === 2 ? match[1] : match[0]);
                }
                if (width !== undef) {
                    attribs += ' width="' + escapeEntities(width, true) + '"';
                }
                if (height !== undef) {
                    attribs += ' height="' + escapeEntities(height, true) + '"';
                }
                return '<img' + attribs + ' src="' + escapeUriScheme(content) + '" />';
            }
        },
        url: {
            allowsEmpty: true,
            tags: {
                a: {
                    href: null
                }
            },
            quoteType: QuoteType.never,
            format: function(element, content) {
                var url = attr(element, 'href');
                if (url.substr(0, 7) === 'mailto:') {
                    return '[email="' + url.substr(7) + '"]' + content + '[/email]';
                }
                return '[url=' + url + ']' + content + '[/url]';
            },
            html: function(token, attrs, content) {
                attrs.defaultattr = escapeEntities(attrs.defaultattr, true) || content;
                return '<a href="' + escapeUriScheme(attrs.defaultattr) + '">' + content + '</a>';
            }
        },
        email: {
            quoteType: QuoteType.never,
            html: function(token, attrs, content) {
                return '<a href="mailto:' + (escapeEntities(attrs.defaultattr, true) || content) + '">' + content + '</a>';
            }
        },
        quote: {
            tags: {
                blockquote: null
            },
            isInline: false,
            quoteType: QuoteType.never,
            format: function(element, content) {
                var authorAttr = 'data-author';
                var author = '';
                var cite;
                var children = element.children;
                for (var i = 0; !cite && i < children.length; i++) {
                    if (is(children[i], 'cite')) {
                        cite = children[i];
                    }
                }
                if (cite || attr(element, authorAttr)) {
                    author = cite && cite.textContent || attr(element, authorAttr);
                    attr(element, authorAttr, author);
                    if (cite) {
                        element.removeChild(cite);
                    }
                    content = this.elementToBbcode(element);
                    author = '=' + author.replace(/(^\s+|\s+$)/g, '');
                    if (cite) {
                        element.insertBefore(cite, element.firstChild);
                    }
                }
                return '[quote' + author + ']' + content + '[/quote]';
            },
            html: function(token, attrs, content) {
                if (attrs.defaultattr) {
                    content = '<cite>' + escapeEntities(attrs.defaultattr) + '</cite>' + content;
                }
                return '<blockquote>' + content + '</blockquote>';
            }
        },
        code: {
            tags: {
                code: null
            },
            isInline: false,
            allowedChildren: ['#', '#newline'],
            format: '[code]{0}[/code]',
            html: '<code>{0}</code>'
        },
        left: {
            styles: {
                'text-align': ['left', '-webkit-left', '-moz-left', '-khtml-left']
            },
            isInline: false,
            allowsEmpty: true,
            format: '[left]{0}[/left]',
            html: '<div align="left">{0}</div>'
        },
        center: {
            styles: {
                'text-align': ['center', '-webkit-center', '-moz-center', '-khtml-center']
            },
            isInline: false,
            allowsEmpty: true,
            format: '[center]{0}[/center]',
            html: '<div align="center">{0}</div>'
        },
        right: {
            styles: {
                'text-align': ['right', '-webkit-right', '-moz-right', '-khtml-right']
            },
            isInline: false,
            allowsEmpty: true,
            format: '[right]{0}[/right]',
            html: '<div align="right">{0}</div>'
        },
        justify: {
            styles: {
                'text-align': ['justify', '-webkit-justify', '-moz-justify', '-khtml-justify']
            },
            isInline: false,
            allowsEmpty: true,
            format: '[justify]{0}[/justify]',
            html: '<div align="justify">{0}</div>'
        },
        youtube: {
            allowsEmpty: true,
            tags: {
                iframe: {
                    'data-youtube-id': null
                }
            },
            format: function(element, content) {
                element = attr(element, 'data-youtube-id');
                return element ? '[youtube]' + element + '[/youtube]' : content;
            },
            html: '<iframe width="560" height="315" frameborder="0" ' + 'src="https://www.youtube-nocookie.com/embed/{0}?wmode=opaque" ' + 'data-youtube-id="{0}" allowfullscreen></iframe>'
        },
        rtl: {
            styles: {
                direction: ['rtl']
            },
            isInline: false,
            format: '[rtl]{0}[/rtl]',
            html: '<div style="direction: rtl">{0}</div>'
        },
        ltr: {
            styles: {
                direction: ['ltr']
            },
            isInline: false,
            format: '[ltr]{0}[/ltr]',
            html: '<div style="direction: ltr">{0}</div>'
        },
        ignore: {}
    };
    function formatBBCodeString(str, obj) {
        return str.replace(/\{([^}]+)\}/g, function(match, group) {
            var undef, escape = true;
            if (group.charAt(0) === '!') {
                escape = false;
                group = group.substring(1);
            }
            if (group === '0') {
                escape = false;
            }
            if (obj[group] === undef) {
                return match;
            }
            return escape ? escapeEntities(obj[group], true) : obj[group];
        });
    }
    function isFunction(fn) {
        return typeof fn === 'function';
    }
    function _stripQuotes(str) {
        return str ? str.replace(/\\(.)/g, '$1').replace(/^(["'])(.*?)\1$/, '$2') : str;
    }
    function _formatString(str) {
        var undef;
        var args = arguments;
        return str.replace(/\{(\d+)\}/g, function(_, matchNum) {
            return args[matchNum - 0 + 1] !== undef ? args[matchNum - 0 + 1] : '{' + matchNum + '}';
        });
    }
    var TOKEN_OPEN = 'open';
    var TOKEN_CONTENT = 'content';
    var TOKEN_NEWLINE = 'newline';
    var TOKEN_CLOSE = 'close';
    function TokenizeToken(type, name, val, attrs, children, closing) {
        var base = this;
        base.type = type;
        base.name = name;
        base.val = val;
        base.attrs = attrs || {};
        base.children = children || [];
        base.closing = closing || null;
    }
    ;TokenizeToken.prototype = {
        clone: function() {
            var base = this;
            return new TokenizeToken(base.type,base.name,base.val,extend({}, base.attrs),[],base.closing ? base.closing.clone() : null);
        },
        splitAt: function(splitAt) {
            var offsetLength;
            var base = this;
            var clone = base.clone();
            var offset = base.children.indexOf(splitAt);
            if (offset > -1) {
                offsetLength = base.children.length - offset;
                clone.children = base.children.splice(offset, offsetLength);
            }
            return clone;
        }
    };
    function BBCodeParser(options) {
        var base = this;
        base.opts = extend({}, BBCodeParser.defaults, options);
        base.tokenize = function(str) {
            var matches, type, i;
            var tokens = [];
            var tokenTypes = [{
                type: TOKEN_CONTENT,
                regex: /^([^\[\r\n]+|\[)/
            }, {
                type: TOKEN_NEWLINE,
                regex: /^(\r\n|\r|\n)/
            }, {
                type: TOKEN_OPEN,
                regex: /^\[[^\[\]]+\]/
            }, {
                type: TOKEN_CLOSE,
                regex: /^\[\/[^\[\]]+\]/
            }];
            strloop: while (str.length) {
                i = tokenTypes.length;
                while (i--) {
                    type = tokenTypes[i].type;
                    if (!(matches = str.match(tokenTypes[i].regex)) || !matches[0]) {
                        continue;
                    }
                    tokens.push(tokenizeTag(type, matches[0]));
                    str = str.substr(matches[0].length);
                    continue strloop;
                }
                if (str.length) {
                    tokens.push(tokenizeTag(TOKEN_CONTENT, str));
                }
                str = '';
            }
            return tokens;
        }
        ;
        function tokenizeTag(type, val) {
            var matches, attrs, name, openRegex = /\[([^\]\s=]+)(?:([^\]]+))?\]/, closeRegex = /\[\/([^\[\]]+)\]/;
            if (type === TOKEN_OPEN && (matches = val.match(openRegex))) {
                name = lower(matches[1]);
                if (matches[2] && (matches[2] = matches[2].trim())) {
                    attrs = tokenizeAttrs(matches[2]);
                }
            }
            if (type === TOKEN_CLOSE && (matches = val.match(closeRegex))) {
                name = lower(matches[1]);
            }
            if (type === TOKEN_NEWLINE) {
                name = '#newline';
            }
            if (!name || ((type === TOKEN_OPEN || type === TOKEN_CLOSE) && !bbcodeHandlers[name])) {
                type = TOKEN_CONTENT;
                name = '#';
            }
            return new TokenizeToken(type,name,val,attrs);
        }
        function tokenizeAttrs(attrs) {
            var matches, attrRegex = /([^\s=]+)=(?:(?:(["'])((?:\\\2|[^\2])*?)\2)|((?:.(?!\s\S+=))*.))/g, ret = {};
            if (attrs.charAt(0) === '=' && attrs.indexOf('=', 1) < 0) {
                ret.defaultattr = _stripQuotes(attrs.substr(1));
            } else {
                if (attrs.charAt(0) === '=') {
                    attrs = 'defaultattr' + attrs;
                }
                while ((matches = attrRegex.exec(attrs))) {
                    ret[lower(matches[1])] = _stripQuotes(matches[3]) || matches[4];
                }
            }
            return ret;
        }
        base.parse = function(str, preserveNewLines) {
            var ret = parseTokens(base.tokenize(str));
            var opts = base.opts;
            if (opts.fixInvalidNesting) {
                fixNesting(ret);
            }
            normaliseNewLines(ret, null, preserveNewLines);
            if (opts.removeEmptyTags) {
                removeEmpty(ret);
            }
            return ret;
        }
        ;
        function hasTag(name, type, arr) {
            var i = arr.length;
            while (i--) {
                if (arr[i].type === type && arr[i].name === name) {
                    return true;
                }
            }
            return false;
        }
        function isChildAllowed(parent, child) {
            var parentBBCode = parent ? bbcodeHandlers[parent.name] : {}
              , allowedChildren = parentBBCode.allowedChildren;
            if (base.opts.fixInvalidChildren && allowedChildren) {
                return allowedChildren.indexOf(child.name || '#') > -1;
            }
            return true;
        }
        function parseTokens(toks) {
            var token, bbcode, curTok, clone, i, next, cloned = [], output = [], openTags = [], currentTag = function() {
                return last(openTags);
            }, addTag = function(token) {
                if (currentTag()) {
                    currentTag().children.push(token);
                } else {
                    output.push(token);
                }
            }, closesCurrentTag = function(name) {
                return currentTag() && (bbcode = bbcodeHandlers[currentTag().name]) && bbcode.closedBy && bbcode.closedBy.indexOf(name) > -1;
            };
            while ((token = toks.shift())) {
                next = toks[0];
                if (!isChildAllowed(currentTag(), token)) {
                    if (token.type !== TOKEN_CLOSE || !currentTag() || token.name !== currentTag().name) {
                        token.name = '#';
                        token.type = TOKEN_CONTENT;
                    }
                }
                switch (token.type) {
                case TOKEN_OPEN:
                    if (closesCurrentTag(token.name)) {
                        openTags.pop();
                    }
                    addTag(token);
                    bbcode = bbcodeHandlers[token.name];
                    if (bbcode && !bbcode.isSelfClosing && (bbcode.closedBy || hasTag(token.name, TOKEN_CLOSE, toks))) {
                        openTags.push(token);
                    } else if (!bbcode || !bbcode.isSelfClosing) {
                        token.type = TOKEN_CONTENT;
                    }
                    break;
                case TOKEN_CLOSE:
                    if (currentTag() && token.name !== currentTag().name && closesCurrentTag('/' + token.name)) {
                        openTags.pop();
                    }
                    if (currentTag() && token.name === currentTag().name) {
                        currentTag().closing = token;
                        openTags.pop();
                    } else if (hasTag(token.name, TOKEN_OPEN, openTags)) {
                        while ((curTok = openTags.pop())) {
                            if (curTok.name === token.name) {
                                curTok.closing = token;
                                break;
                            }
                            clone = curTok.clone();
                            if (cloned.length) {
                                clone.children.push(last(cloned));
                            }
                            cloned.push(clone);
                        }
                        if (next && next.type === TOKEN_NEWLINE) {
                            bbcode = bbcodeHandlers[token.name];
                            if (bbcode && bbcode.isInline === false) {
                                addTag(next);
                                toks.shift();
                            }
                        }
                        addTag(last(cloned));
                        i = cloned.length;
                        while (i--) {
                            openTags.push(cloned[i]);
                        }
                        cloned.length = 0;
                    } else {
                        token.type = TOKEN_CONTENT;
                        addTag(token);
                    }
                    break;
                case TOKEN_NEWLINE:
                    if (currentTag() && next && closesCurrentTag((next.type === TOKEN_CLOSE ? '/' : '') + next.name)) {
                        if (!(next.type === TOKEN_CLOSE && next.name === currentTag().name)) {
                            bbcode = bbcodeHandlers[currentTag().name];
                            if (bbcode && bbcode.breakAfter) {
                                openTags.pop();
                            } else if (bbcode && bbcode.isInline === false && base.opts.breakAfterBlock && bbcode.breakAfter !== false) {
                                openTags.pop();
                            }
                        }
                    }
                    addTag(token);
                    break;
                default:
                    addTag(token);
                    break;
                }
            }
            return output;
        }
        function normaliseNewLines(children, parent, onlyRemoveBreakAfter) {
            var token, left, right, parentBBCode, bbcode, removedBreakEnd, removedBreakBefore, remove;
            var childrenLength = children.length;
            if (parent) {
                parentBBCode = bbcodeHandlers[parent.name];
            }
            var i = childrenLength;
            while (i--) {
                if (!(token = children[i])) {
                    continue;
                }
                if (token.type === TOKEN_NEWLINE) {
                    left = i > 0 ? children[i - 1] : null;
                    right = i < childrenLength - 1 ? children[i + 1] : null;
                    remove = false;
                    if (!onlyRemoveBreakAfter && parentBBCode && parentBBCode.isSelfClosing !== true) {
                        if (!left) {
                            if (parentBBCode.isInline === false && base.opts.breakStartBlock && parentBBCode.breakStart !== false) {
                                remove = true;
                            }
                            if (parentBBCode.breakStart) {
                                remove = true;
                            }
                        } else if (!removedBreakEnd && !right) {
                            if (parentBBCode.isInline === false && base.opts.breakEndBlock && parentBBCode.breakEnd !== false) {
                                remove = true;
                            }
                            if (parentBBCode.breakEnd) {
                                remove = true;
                            }
                            removedBreakEnd = remove;
                        }
                    }
                    if (left && left.type === TOKEN_OPEN) {
                        if ((bbcode = bbcodeHandlers[left.name])) {
                            if (!onlyRemoveBreakAfter) {
                                if (bbcode.isInline === false && base.opts.breakAfterBlock && bbcode.breakAfter !== false) {
                                    remove = true;
                                }
                                if (bbcode.breakAfter) {
                                    remove = true;
                                }
                            } else if (bbcode.isInline === false) {
                                remove = true;
                            }
                        }
                    }
                    if (!onlyRemoveBreakAfter && !removedBreakBefore && right && right.type === TOKEN_OPEN) {
                        if ((bbcode = bbcodeHandlers[right.name])) {
                            if (bbcode.isInline === false && base.opts.breakBeforeBlock && bbcode.breakBefore !== false) {
                                remove = true;
                            }
                            if (bbcode.breakBefore) {
                                remove = true;
                            }
                            removedBreakBefore = remove;
                            if (remove) {
                                children.splice(i, 1);
                                continue;
                            }
                        }
                    }
                    if (remove) {
                        children.splice(i, 1);
                    }
                    removedBreakBefore = false;
                } else if (token.type === TOKEN_OPEN) {
                    normaliseNewLines(token.children, token, onlyRemoveBreakAfter);
                }
            }
        }
        function fixNesting(children, parents, insideInline, rootArr) {
            var token, i, parent, parentIndex, parentParentChildren, right;
            var isInline = function(token) {
                var bbcode = bbcodeHandlers[token.name];
                return !bbcode || bbcode.isInline !== false;
            };
            parents = parents || [];
            rootArr = rootArr || children;
            for (i = 0; i < children.length; i++) {
                if (!(token = children[i]) || token.type !== TOKEN_OPEN) {
                    continue;
                }
                if (insideInline && !isInline(token)) {
                    parent = last(parents);
                    right = parent.splitAt(token);
                    parentParentChildren = parents.length > 1 ? parents[parents.length - 2].children : rootArr;
                    if (isChildAllowed(token, parent)) {
                        var clone = parent.clone();
                        clone.children = token.children;
                        token.children = [clone];
                    }
                    parentIndex = parentParentChildren.indexOf(parent);
                    if (parentIndex > -1) {
                        right.children.splice(0, 1);
                        parentParentChildren.splice(parentIndex + 1, 0, token, right);
                        var next = right.children[0];
                        if (next && next.type === TOKEN_NEWLINE) {
                            if (!isInline(token)) {
                                right.children.splice(0, 1);
                                parentParentChildren.splice(parentIndex + 2, 0, next);
                            }
                        }
                        return;
                    }
                }
                parents.push(token);
                fixNesting(token.children, parents, insideInline || isInline(token), rootArr);
                parents.pop();
            }
        }
        function removeEmpty(tokens) {
            var token, bbcode;
            var isTokenWhiteSpace = function(children) {
                var j = children.length;
                while (j--) {
                    var type = children[j].type;
                    if (type === TOKEN_OPEN || type === TOKEN_CLOSE) {
                        return false;
                    }
                    if (type === TOKEN_CONTENT && /\S|\u00A0/.test(children[j].val)) {
                        return false;
                    }
                }
                return true;
            };
            var i = tokens.length;
            while (i--) {
                if (!(token = tokens[i]) || token.type !== TOKEN_OPEN) {
                    continue;
                }
                bbcode = bbcodeHandlers[token.name];
                removeEmpty(token.children);
                if (isTokenWhiteSpace(token.children) && bbcode && !bbcode.isSelfClosing && !bbcode.allowsEmpty) {
                    tokens.splice.apply(tokens, [i, 1].concat(token.children));
                }
            }
        }
        base.toHTML = function(str, preserveNewLines) {
            return convertToHTML(base.parse(str, preserveNewLines), true);
        }
        ;
        base.toHTMLFragment = function(str, preserveNewLines) {
            return convertToHTML(base.parse(str, preserveNewLines), false);
        }
        ;
        function convertToHTML(tokens, isRoot) {
            var undef, token, bbcode, content, html, needsBlockWrap, blockWrapOpen, isInline, lastChild, ret = '';
            isInline = function(bbcode) {
                return (!bbcode || (bbcode.isHtmlInline !== undef ? bbcode.isHtmlInline : bbcode.isInline)) !== false;
            }
            ;
            while (tokens.length > 0) {
                if (!(token = tokens.shift())) {
                    continue;
                }
                if (token.type === TOKEN_OPEN) {
                    lastChild = token.children[token.children.length - 1] || {};
                    bbcode = bbcodeHandlers[token.name];
                    needsBlockWrap = isRoot && isInline(bbcode);
                    content = convertToHTML(token.children, false);
                    if (bbcode && bbcode.html) {
                        if (!isInline(bbcode) && isInline(bbcodeHandlers[lastChild.name]) && !bbcode.isPreFormatted && !bbcode.skipLastLineBreak) {
                            content += '<br />';
                        }
                        if (!isFunction(bbcode.html)) {
                            token.attrs['0'] = content;
                            html = formatBBCodeString(bbcode.html, token.attrs);
                        } else {
                            html = bbcode.html.call(base, token, token.attrs, content);
                        }
                    } else {
                        html = token.val + content + (token.closing ? token.closing.val : '');
                    }
                } else if (token.type === TOKEN_NEWLINE) {
                    if (!isRoot) {
                        ret += '<br />';
                        continue;
                    }
                    if (!blockWrapOpen) {
                        ret += '<div>';
                    }
                    ret += '<br />';
                    if (!tokens.length) {
                        ret += '<br />';
                    }
                    ret += '</div>\n';
                    blockWrapOpen = false;
                    continue;
                } else {
                    needsBlockWrap = isRoot;
                    html = escapeEntities(token.val, true);
                }
                if (needsBlockWrap && !blockWrapOpen) {
                    ret += '<div>';
                    blockWrapOpen = true;
                } else if (!needsBlockWrap && blockWrapOpen) {
                    ret += '</div>\n';
                    blockWrapOpen = false;
                }
                ret += html;
            }
            if (blockWrapOpen) {
                ret += '</div>\n';
            }
            return ret;
        }
        base.toBBCode = function(str, preserveNewLines) {
            return convertToBBCode(base.parse(str, preserveNewLines));
        }
        ;
        function convertToBBCode(toks) {
            var token, attr, bbcode, isBlock, isSelfClosing, quoteType, breakBefore, breakStart, breakEnd, breakAfter, ret = '';
            while (toks.length > 0) {
                if (!(token = toks.shift())) {
                    continue;
                }
                bbcode = bbcodeHandlers[token.name];
                isBlock = !(!bbcode || bbcode.isInline !== false);
                isSelfClosing = bbcode && bbcode.isSelfClosing;
                breakBefore = (isBlock && base.opts.breakBeforeBlock && bbcode.breakBefore !== false) || (bbcode && bbcode.breakBefore);
                breakStart = (isBlock && !isSelfClosing && base.opts.breakStartBlock && bbcode.breakStart !== false) || (bbcode && bbcode.breakStart);
                breakEnd = (isBlock && base.opts.breakEndBlock && bbcode.breakEnd !== false) || (bbcode && bbcode.breakEnd);
                breakAfter = (isBlock && base.opts.breakAfterBlock && bbcode.breakAfter !== false) || (bbcode && bbcode.breakAfter);
                quoteType = (bbcode ? bbcode.quoteType : null) || base.opts.quoteType || QuoteType.auto;
                if (!bbcode && token.type === TOKEN_OPEN) {
                    ret += token.val;
                    if (token.children) {
                        ret += convertToBBCode(token.children);
                    }
                    if (token.closing) {
                        ret += token.closing.val;
                    }
                } else if (token.type === TOKEN_OPEN) {
                    if (breakBefore) {
                        ret += '\n';
                    }
                    ret += '[' + token.name;
                    if (token.attrs) {
                        if (token.attrs.defaultattr) {
                            ret += '=' + quote(token.attrs.defaultattr, quoteType, 'defaultattr');
                            delete token.attrs.defaultattr;
                        }
                        for (attr in token.attrs) {
                            if (token.attrs.hasOwnProperty(attr)) {
                                ret += ' ' + attr + '=' + quote(token.attrs[attr], quoteType, attr);
                            }
                        }
                    }
                    ret += ']';
                    if (breakStart) {
                        ret += '\n';
                    }
                    if (token.children) {
                        ret += convertToBBCode(token.children);
                    }
                    if (!isSelfClosing && !bbcode.excludeClosing) {
                        if (breakEnd) {
                            ret += '\n';
                        }
                        ret += '[/' + token.name + ']';
                    }
                    if (breakAfter) {
                        ret += '\n';
                    }
                    if (token.closing && isSelfClosing) {
                        ret += token.closing.val;
                    }
                } else {
                    ret += token.val;
                }
            }
            return ret;
        }
        function quote(str, quoteType, name) {
            var needsQuotes = /\s|=/.test(str);
            if (isFunction(quoteType)) {
                return quoteType(str, name);
            }
            if (quoteType === QuoteType.never || (quoteType === QuoteType.auto && !needsQuotes)) {
                return str;
            }
            return '"' + str.replace(/\\/g, '\\\\').replace(/"/g, '\\"') + '"';
        }
        function last(arr) {
            if (arr.length) {
                return arr[arr.length - 1];
            }
            return null;
        }
        function lower(str) {
            return str.toLowerCase();
        }
    }
    ;BBCodeParser.QuoteType = QuoteType;
    BBCodeParser.defaults = {
        breakBeforeBlock: false,
        breakStartBlock: false,
        breakEndBlock: false,
        breakAfterBlock: true,
        removeEmptyTags: true,
        fixInvalidNesting: true,
        fixInvalidChildren: true,
        quoteType: QuoteType.auto,
        strictMatch: false
    };
    function toHex(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return '00';
        }
        number = Math.max(0, Math.min(number, 255)).toString(16);
        return number.length < 2 ? '0' + number : number;
    }
    function _normaliseColour(colorStr) {
        var match;
        colorStr = colorStr || '#000';
        if ((match = colorStr.match(/rgb\((\d{1,3}),\s*?(\d{1,3}),\s*?(\d{1,3})\)/i))) {
            return '#' + toHex(match[1]) + toHex(match[2]) + toHex(match[3]);
        }
        if ((match = colorStr.match(/#([0-9a-f])([0-9a-f])([0-9a-f])\s*?$/i))) {
            return '#' + match[1] + match[1] + match[2] + match[2] + match[3] + match[3];
        }
        return colorStr;
    }
    function bbcodeFormat() {
        var base = this;
        base.stripQuotes = _stripQuotes;
        var tagsToBBCodes = {};
        var validChildren = {
            ul: ['li', 'ol', 'ul'],
            ol: ['li', 'ol', 'ul'],
            table: ['tr'],
            tr: ['td', 'th'],
            code: ['br', 'p', 'div']
        };
        function buildBbcodeCache() {
            each(bbcodeHandlers, function(bbcode, handler) {
                var isBlock = handler.isInline === false
                  , tags = bbcodeHandlers[bbcode].tags
                  , styles = bbcodeHandlers[bbcode].styles;
                if (styles) {
                    tagsToBBCodes['*'] = tagsToBBCodes['*'] || {};
                    tagsToBBCodes['*'][isBlock] = tagsToBBCodes['*'][isBlock] || {};
                    tagsToBBCodes['*'][isBlock][bbcode] = [['style', Object.entries(styles)]];
                }
                if (tags) {
                    each(tags, function(tag, values) {
                        if (values && values.style) {
                            values.style = Object.entries(values.style);
                        }
                        tagsToBBCodes[tag] = tagsToBBCodes[tag] || {};
                        tagsToBBCodes[tag][isBlock] = tagsToBBCodes[tag][isBlock] || {};
                        tagsToBBCodes[tag][isBlock][bbcode] = values && Object.entries(values);
                    });
                }
            });
        }
        ;function handleBlockNewlines(element, content) {
            var tag = element.nodeName.toLowerCase();
            var isInline = dom.isInline;
            if (!isInline(element, true) || tag === 'br') {
                var isLastBlockChild, parent, parentLastChild, previousSibling = element.previousSibling;
                while (previousSibling && previousSibling.nodeType === 1 && !is(previousSibling, 'br') && isInline(previousSibling, true) && !previousSibling.firstChild) {
                    previousSibling = previousSibling.previousSibling;
                }
                do {
                    parent = element.parentNode;
                    parentLastChild = parent && parent.lastChild;
                    isLastBlockChild = parentLastChild === element;
                    element = parent;
                } while (parent && isLastBlockChild && isInline(parent, true));
                if (!isLastBlockChild || tag === 'li') {
                    content += '\n';
                }
                if (tag !== 'br' && previousSibling && !is(previousSibling, 'br') && isInline(previousSibling, true)) {
                    content = '\n' + content;
                }
            }
            return content;
        }
        function handleTags(element, content, blockLevel) {
            function isStyleMatch(style) {
                var property = style[0];
                var values = style[1];
                var val = dom.getStyle(element, property);
                var parent = element.parentNode;
                if (!val || parent && dom.hasStyle(parent, property, val)) {
                    return false;
                }
                return !values || values.includes(val);
            }
            function createAttributeMatch(isStrict) {
                return function(attribute) {
                    var name = attribute[0];
                    var value = attribute[1];
                    if (name === 'style' && element.nodeName === 'CODE') {
                        return false;
                    }
                    if (name === 'style' && value) {
                        return value[isStrict ? 'every' : 'some'](isStyleMatch);
                    } else {
                        var val = attr(element, name);
                        return val && (!value || value.includes(val));
                    }
                }
                ;
            }
            function handleTag(tag) {
                if (!tagsToBBCodes[tag] || !tagsToBBCodes[tag][blockLevel]) {
                    return;
                }
                each(tagsToBBCodes[tag][blockLevel], function(bbcode, attrs) {
                    var fn, format, isStrict = bbcodeHandlers[bbcode].strictMatch;
                    if (typeof isStrict === 'undefined') {
                        isStrict = base.opts.strictMatch;
                    }
                    fn = isStrict ? 'every' : 'some';
                    if (attrs && !attrs[fn](createAttributeMatch(isStrict))) {
                        return;
                    }
                    format = bbcodeHandlers[bbcode].format;
                    if (isFunction(format)) {
                        content = format.call(base, element, content);
                    } else {
                        content = _formatString(format, content);
                    }
                    return false;
                });
            }
            handleTag('*');
            handleTag(element.nodeName.toLowerCase());
            return content;
        }
        function elementToBbcode(element, hasCodeParent) {
            var toBBCode = function(node, hasCodeParent, vChildren) {
                var ret = '';
                dom.traverse(node, function(node) {
                    var content = ''
                      , nodeType = node.nodeType
                      , tag = node.nodeName.toLowerCase()
                      , isCodeTag = tag === 'code'
                      , isEmoticon = tag === 'img' && !!attr(node, EMOTICON_DATA_ATTR)
                      , vChild = validChildren[tag]
                      , firstChild = node.firstChild
                      , isValidChild = true;
                    if (vChildren) {
                        isValidChild = vChildren.indexOf(tag) > -1;
                        if (isEmoticon) {
                            isValidChild = true;
                        }
                        if (!isValidChild) {
                            vChild = vChildren;
                        }
                    }
                    if (nodeType === 1) {
                        if (is(node, '.sceditor-nlf') && !firstChild) {
                            return;
                        }
                        if (tag !== 'iframe') {
                            content = toBBCode(node, hasCodeParent || isCodeTag, vChild);
                        }
                        if (isValidChild) {
                            if (!hasCodeParent || isEmoticon) {
                                if (!isCodeTag) {
                                    content = handleTags(node, content, false);
                                }
                                content = handleTags(node, content, true);
                            }
                            ret += handleBlockNewlines(node, content);
                        } else {
                            ret += content;
                        }
                    } else if (nodeType === 3) {
                        ret += node.nodeValue;
                    }
                }, false, true);
                return ret;
            };
            return toBBCode(element, hasCodeParent);
        }
        ;base.init = function() {
            base.opts = this.opts;
            base.elementToBbcode = elementToBbcode;
            buildBbcodeCache();
            this.commands = extend(true, {}, defaultCommandsOverrides, this.commands);
            this.toBBCode = base.toSource;
            this.fromBBCode = base.toHtml;
        }
        ;
        function toHtml(asFragment, source, legacyAsFragment) {
            var parser = new BBCodeParser(base.opts.parserOptions);
            var toHTML = (asFragment || legacyAsFragment) ? parser.toHTMLFragment : parser.toHTML;
            return toHTML(base.opts.bbcodeTrim ? source.trim() : source);
        }
        function toSource(asFragment, html, context, parent) {
            context = context || document;
            var bbcode, elements;
            var hasCodeParent = !!dom.closest(parent, 'code');
            var containerParent = context.createElement('div');
            var container = context.createElement('div');
            var parser = new BBCodeParser(base.opts.parserOptions);
            container.innerHTML = html;
            css(containerParent, 'visibility', 'hidden');
            containerParent.appendChild(container);
            context.body.appendChild(containerParent);
            if (asFragment) {
                containerParent.insertBefore(context.createTextNode('#'), containerParent.firstChild);
                containerParent.appendChild(context.createTextNode('#'));
            }
            if (parent) {
                css(container, 'whiteSpace', css(parent, 'whiteSpace'));
            }
            elements = container.getElementsByClassName('sceditor-ignore');
            while (elements.length) {
                elements[0].parentNode.removeChild(elements[0]);
            }
            dom.removeWhiteSpace(containerParent);
            bbcode = elementToBbcode(container, hasCodeParent);
            context.body.removeChild(containerParent);
            bbcode = parser.toBBCode(bbcode, true);
            if (base.opts.bbcodeTrim) {
                bbcode = bbcode.trim();
            }
            return bbcode;
        }
        ;base.toHtml = toHtml.bind(null, false);
        base.fragmentToHtml = toHtml.bind(null, true);
        base.toSource = toSource.bind(null, false);
        base.fragmentToSource = toSource.bind(null, true);
    }
    ;bbcodeFormat.get = function(name) {
        return bbcodeHandlers[name] || null;
    }
    ;
    bbcodeFormat.set = function(name, bbcode) {
        if (name && bbcode) {
            bbcode = extend(bbcodeHandlers[name] || {}, bbcode);
            bbcode.remove = function() {
                delete bbcodeHandlers[name];
            }
            ;
            bbcodeHandlers[name] = bbcode;
        }
        return this;
    }
    ;
    bbcodeFormat.rename = function(name, newName) {
        if (name in bbcodeHandlers) {
            bbcodeHandlers[newName] = bbcodeHandlers[name];
            delete bbcodeHandlers[name];
        }
        return this;
    }
    ;
    bbcodeFormat.remove = function(name) {
        if (name in bbcodeHandlers) {
            delete bbcodeHandlers[name];
        }
        return this;
    }
    ;
    bbcodeFormat.formatBBCodeString = formatBBCodeString;
    sceditor.formats.bbcode = bbcodeFormat;
    sceditor.BBCodeParser = BBCodeParser;
}(sceditor));
function _initXooit(wysiwygDocument) {
    var wysiwygBody = wysiwygDocument.body;
    wysiwygBody.className = (wysiwygBody.className + (wysiwygBody.className ? " " : "") + "BBCodeStyled edit");
    var css = jQuery('<style>body {min-height: 100vh !important;}' + jQuery('#xooit_css_vars').text() + '</style>');
    jQuery(wysiwygDocument.head).append(css);
    var css = jQuery('<link href="/responsive/fontawesome672/css/all.min.css" rel="stylesheet" media="none" onload="if(this.media!=\'all\')this.media=\'all\'">');
    jQuery(wysiwygDocument.head).append(css);
    css = jQuery('<link href="/responsive/fontawesome672/css/duotone-regular.css" rel="stylesheet" media="none" onload="if(this.media!=\'all\')this.media=\'all\'">');
    jQuery(wysiwygDocument.head).append(css);
    var hidedOne = false;
    jQuery.each(sceditorViewableToolbar, function(k, v) {
        if (!hidedOne) {
            jQuery('.sceditor-button').hide();
            hidedOne = true;
        }
        jQuery('.sceditor-button-' + k).show();
    });
    if (hidedOne) {
        sceditor_ToolbarUpdateVisibility();
    }
    jQuery('.sceditor-button-lotties div').html('<lottie-player src="https://img.xooimage.com/files_lottie/phpBBLottie.json" background="transparent" speed="1" style="height: 22px; width: 22px; margin-top: -3px; margin-left: 2px; box-sizing: border-box;" direction="1" mode="normal" loop="" autoplay=""></lottie-player>');
}
function _viewAllToolbar() {
    jQuery('.sceditor-button').show();
    jQuery('.sceditor-button-alloptions').hide();
    sceditor_ToolbarUpdateVisibility();
}
var sceditorCustomToolbar = '';
var sceditorViewableToolbar = '';
var emojiPickerClass = '';
function sceditor_ToolbarCheckIsMobile() {
    sceditorCustomToolbar = 'bold*,italic*,underline*,strike,subscript,superscript|' + 'left*,center*,right*,justify*|font,size,color,removeformat|' + 'bulletlist,orderedlist|' + 'table|code,quote|lotties*,emojis*,emoticon*|image*,' + (USERPERMS.pixabay ? 'pixabay*,' : '') + 'gif*,youtube*,file*,horizontalrule|link,email,unlink|' + 'ltr,rtl|maximize,source*|miscoptions|alloptions*';
    if (onMobile) {
        sceditorCustomToolbar = sceditorCustomToolbar.replace('emojis*,', '');
    }
    if (!((typeof smilies_allowed != 'undefined') && smilies_allowed)) {
        sceditorCustomToolbar = sceditorCustomToolbar.replace('emoticon*,', '');
    }
    sceditorViewableToolbar = sceditor_ToolbarCheckViewable(sceditorCustomToolbar);
    sceditorCustomToolbar = sceditor_ToolbarClear(sceditorCustomToolbar);
}
function sceditor_ToolbarUpdateVisibility() {
    jQuery('.sceditor-group').show().each(function() {
        if (!jQuery(this).find('.sceditor-button:visible').length) {
            jQuery(this).hide();
        }
    });
}
function sceditor_ToolbarCheckViewable(sceditorCustomToolbar) {
    var res = {};
    var test = ',' + sceditorCustomToolbar.replace(/\|/gi, ',') + ',';
    test = test.matchAll(/,([A-Za-z0-9]+)\*/ig);
    for (const match of test) {
        res[match[1]] = true;
    }
    return res;
}
function sceditor_ToolbarClear(sceditorCustomToolbar) {
    return sceditorCustomToolbar.replace(/\*/gi, '');
}
function sceditor_getEmoticonsList() {
    var emoticons = {};
    emoticons.dropdown = {};
    emoticons.more = {};
    emoticons.hidden = {};
    emoticons.xooitStyle = [];
    if (typeof smilies_allowed != 'undefined' && smilies_allowed) {
        jQuery.each(smilies, function(a, emo) {
            var url = 'https://img.xooimage.com/files' + emo.s + emo.u;
            emoticons.dropdown[emo.c] = url;
            if (typeof emoticons.xooitStyle[emo.ca] == 'undefined') {
                emoticons.xooitStyle[emo.ca] = {
                    name: smilies_categories[emo.ca],
                    list: {}
                };
            }
            emoticons.xooitStyle[emo.ca].list[emo.c] = url;
        });
    }
    return emoticons;
}
(function(sceditor) {
    'use strict';
    var defaultKey = 'sce-autodraft';
    function clear(key) {
        localStorage.removeItem(key || defaultKey);
    }
    sceditor.plugins.autosave = function() {
        var base = this;
        var editor;
        var isLoading = false;
        var storageKey = defaultKey;
        var preventAutoload = 0;
        var wait = false;
        var readyToLaunch = false;
        var expires = 86400000;
        var saveHandler = function(value) {
            localStorage.setItem(storageKey, JSON.stringify(value));
        };
        var loadHandler = function() {
            return JSON.parse(localStorage.getItem(storageKey));
        };
        function gc() {
            for (var i = 0; i < localStorage.length; i++) {
                var key = localStorage.key(i);
                if (/^sce\-autodraft\-/.test(key)) {
                    var item = JSON.parse(localStorage.getItem(storageKey));
                    if (item && item.time < Date.now() - expires) {
                        clear(key);
                    }
                }
            }
        }
        base.init = function() {
            editor = this;
            var opts = editor.opts && editor.opts.autosave || {};
            saveHandler = opts.save || saveHandler;
            loadHandler = opts.load || loadHandler;
            storageKey = opts.storageKey || storageKey;
            expires = opts.expires || expires;
            preventAutoload = opts.preventAutoload || preventAutoload;
            wait = opts.wait || wait;
            gc();
        }
        ;
        base.signalFocusEvent = function() {
            if (wait)
                base.launchAutoLoad();
            wait = false;
        }
        ;
        base.signalReady = function() {
            var parent = editor.getContentAreaContainer();
            while (parent) {
                if (/form/i.test(parent.nodeName)) {
                    parent.addEventListener('submit', clear.bind(null, storageKey), true);
                    break;
                }
                parent = parent.parentNode;
            }
            var state = loadHandler();
            if (state) {
                readyToLaunch = true;
                isLoading = true;
                if (!wait)
                    base.launchAutoLoad();
                isLoading = false;
            } else {
                if (!wait)
                    saveHandler({
                        caret: this.sourceEditorCaret(),
                        sourceMode: this.sourceMode(),
                        value: editor.val(null, false),
                        time: Date.now()
                    });
            }
        }
        ;
        base.launchAutoLoad = function() {
            if (!readyToLaunch) {
                wait = false;
                return;
            }
            var state = loadHandler();
            if (!preventAutoload) {
                editor.sourceMode(state.sourceMode);
                editor.val(state.value, false);
                editor.focus();
                if (state.sourceMode) {
                    editor.sourceEditorCaret(state.caret);
                } else {
                    editor.getRangeHelper().restoreRange();
                }
            }
        }
        ;
        base.signalValuechangedEvent = function(e) {
            if (!wait)
                if (!isLoading) {
                    saveHandler({
                        caret: this.sourceEditorCaret(),
                        sourceMode: this.sourceMode(),
                        value: e.detail.rawValue,
                        time: Date.now()
                    });
                }
        }
        ;
    }
    ;
    sceditor.plugins.autosave.clear = clear;
}(sceditor));
sceditor.plugins.xooitplugin = function() {
    var base = this;
    base.currentString = false;
    base.lastQueryToParse = false;
    base.localcache = {};
    base.instance = false;
    base.queryPending = false;
    base.previousQueryTime = 0;
    if ((typeof DISABLE_PREPAID != 'undefined') && !DISABLE_PREPAID) {
        this.init = function() {
            setTimeout(function() {
                if (jQuery('.sceditor-container').width() > 0 && (jQuery('.sceditor-container').width() < 500))
                    return;
                jQuery('.sceditor-container').prepend(`<div class="sceditor-subcontainer" style="display: flex;justify-content: space-between;">
     <div style="flex: 1"></div>
     <div style="background-color: rgba(0,0,0,0.1);">
      <div class="sceditor-pub" style="display: none; margin: 5px; background-color: var(--var-th-color); color: var(--var-th-color-contrast); border-radius: 5em; font-weight: 700; cursor: pointer;" onclick="popupGift.open();"><i class="fa-solid fa-fw fa-box-heart fa-lg "></i><span class="hideOnMobile"> Contribuer au forum</span></div>
      <style>
      .sceditor-pub {
       opacity: 0.8;
       padding: 0.5em 0.7em !important;
      }
      .onMobile .sceditor-pub {
       padding: 0.5em 0.3em !important;
      }
      .sceditor-pub:hover {
       opacity: 1;
      }
      </style>
     </div>
    </div>`);
                jQuery('.sceditor-toolbar').prependTo('.sceditor-subcontainer > div:eq(0)');
                jQuery('.sceditor-pub').fadeIn();
                jQuery('.sceditor-button-lotties div').html('<lottie-player src="https://img.xooimage.com/files_lottie/phpBBLottie.json" background="transparent" speed="1" style="height: 22px; width: 22px; margin-top: -3px; margin-left: 2px; box-sizing: border-box;" direction="1" mode="normal" loop="" autoplay=""></lottie-player>');
            }, 1000);
        }
        ;
    }
    this.getTextNodesIn = function(el) {
        return jQuery(el).find(":not(iframe)").addBack().contents().filter(function() {
            return this.nodeType == 3 && !jQuery(this).parent().hasClass('emoji');
        });
    }
    ;
    this.getCaretCoordinates = function(view) {
        let x = 0
          , y = 0;
        const isSupported = typeof window.getSelection !== "undefined";
        if (isSupported) {
            const selection = view.getSelection();
            if (selection.rangeCount !== 0) {
                const range = selection.getRangeAt(0).cloneRange();
                range.collapse(true);
                const rect = range.getClientRects()[0];
                if (rect) {
                    x = rect.left;
                    y = rect.top;
                }
            }
        }
        return {
            x,
            y
        };
    }
    this.getCaretIndex = function(element, view) {
        let position = 0;
        const isSupported = typeof window.getSelection !== "undefined";
        if (isSupported) {
            const selection = view.getSelection();
            if (selection.rangeCount !== 0) {
                const range = view.getSelection().getRangeAt(0);
                const preCaretRange = range.cloneRange();
                preCaretRange.selectNodeContents(element);
                preCaretRange.setEnd(range.endContainer, range.endOffset);
                position = preCaretRange.toString().length;
            }
        }
        return position;
    }
    this.drawResults = function(datas, query) {
        query = query.substring(1);
        var found = [];
        jQuery.each(datas.users, function(k, user) {
            if (user.username.toLowerCase().indexOf(query) === 0) {
                found.push(user);
            }
        });
        if (found.length) {
            var nbToShow = 10;
            jQuery('#usernamehelper div:first').html('');
            jQuery.each(found, function(k, user) {
                var div = jQuery('<div class="oneusername"></div>');
                div.html('<i class="fal fa-at fa-fw"></i> ' + user.username);
                jQuery('#usernamehelper div:first').append(div);
                div.click(function() {
                    jQuery('#usernamehelper').remove();
                    var node = base.instance.getRangeHelper().parentNode();
                    var range = base.instance.getRangeHelper().selectedRange();
                    range.setStart(node, range.startOffset - query.length);
                    base.instance.getRangeHelper().selectRange(range);
                    base.instance.insert(jQuery(this).text().substring(1) + '  ');
                });
                if (k == (nbToShow - 1) && found.length > nbToShow) {
                    var div = jQuery('<div style="opacity: 0.5; text-align: center;">...</div>');
                    jQuery('#usernamehelper div:first').append(div);
                    return false;
                }
            });
        } else {
            jQuery('#usernamehelper').remove();
        }
        console.log(found);
    }
    this.launchSearch = function(o, query) {
        query = query.toLowerCase();
        base.lastQueryToParse = query;
        var foundInCache = false;
        jQuery.each(base.localcache, function(k, v) {
            if ((k == query) || (v.all && query.indexOf(k) === 0)) {
                base.drawResults(base.localcache[k], query);
                foundInCache = true;
                return false;
            }
        });
        if (foundInCache)
            return;
        var now = (new Date()).getTime();
        var wait = Math.max(base.queryPending ? 500 : 1, (500 - (now - base.previousQueryTime)));
        clearTimeout(base.queryTimeout);
        base.queryTimeout = setTimeout(function() {
            base.queryPending = true;
            var params = [];
            params.push({
                'name': 'KAJAX',
                'value': WEBSITEVERSION
            });
            params.push({
                'name': 'KAJAXT',
                'value': (new Date()).getTime()
            });
            params.push({
                'name': 'KAJAXC',
                'value': (XOOIT_USER_CONNECTED ? 1 : 0)
            });
            params.push({
                'name': 'query',
                'value': query
            });
            params.push({
                'name': 'rci',
                'value': upload_userdata_rci
            });
            params.push({
                'name': 'topic_id',
                'value': jQuery('input[name=t]').val()
            });
            base.previousQueryTime = now;
            jQuery.post('/nolog.mention.usernames.php', params, function(json) {
                base.queryPending = false;
                base.localcache[query] = json;
                if (base.lastQueryToParse == query) {
                    base.drawResults(base.localcache[query], query);
                }
            }, 'json');
        }, wait);
    }
    this.signalKeyupEvent = function(e) {
        var beforeText = this.getRangeHelper().getOuterText(true, 20);
        var tooltip = false;
        if (beforeText.indexOf('@') != -1) {
            var split = beforeText.split('@');
            var found = '@' + split[split.length - 1];
            if (found.length > 1 || jQuery('input[name=t]').length) {
                var {x, y} = base.getCaretCoordinates(e.view);
                if (x && y) {
                    base.instance = this;
                    tooltip = jQuery('#usernamehelper');
                    if (!tooltip.length) {
                        tooltip = jQuery('<div style="position: relative;" id="usernamehelper"><div class="popup_standard autoRollUp"></div></div>');
                        jQuery(this.getContentAreaContainer()).before(tooltip);
                    }
                    tooltip.find('div:first').html('<div style="padding: 0.1em 0; text-align: center;"><i class="fa-solid fa-loader fa-spin"></i></div>');
                    x -= 60;
                    if (x < 0)
                        x = 0;
                    if (x + 150 > jQuery('#usernamehelper').width())
                        x = jQuery('#usernamehelper').width() - 150;
                    tooltip.find('div:first')[0].setAttribute("style", `display: inline-block; left: ${x}px; top: ${y + 20}px;`);
                    base.launchSearch(tooltip.find('div:first')[0], found);
                }
            }
        }
        if (tooltip === false)
            jQuery('#usernamehelper').remove();
    }
    ;
}
;
sceditor.command.set('strike', {
    txtExec: ['[del]', '[/del]']
});
sceditor.command.set('bulletlist', {
    txtExec: function(caller, selected) {
        this.insertText('[list]\n[*]' + selected.split(/\r?\n/).join('[/*]\n[*]') + '[/*]\n[/list]');
    }
});
sceditor.command.set('orderedlist', {
    txtExec: function(caller, selected) {
        this.insertText('[list=1]\n[*]' + selected.split(/\r?\n/).join('[/*]\n[*]') + '[/*]\n[/list]');
    }
});
sceditor.command.set("quote", {
    exec: function(caller) {
        this.insert('[quote]', ' [/quote]');
    }
});
sceditor.command.set("unlink", {
    exec: function() {
        var closest = sceditor.dom.closest;
        var anchor = closest(this.currentNode(), 'a');
        if (anchor) {
            while (anchor.firstChild) {
                if (jQuery(anchor.firstChild).hasClass('linkname'))
                    jQuery(anchor.firstChild).remove();
                else
                    jQuery(anchor).before(anchor.firstChild);
            }
            jQuery(anchor).remove();
        }
    }
});
sceditor.command.set('image', {
    txtExec: function(caller, selected) {
        var editor = this;
        sceditor.command.get('image')._dropDown(editor, caller, selected, function(url, width, height) {
            var attrs = '';
            if (width && height) {
                attrs = '=' + width + 'x' + height;
            }
            editor.insertText('[img' + attrs + ']' + url + '[/img]');
        });
    }
});
sceditor.command.set("emojis", {
    _dropDownMenu: function(editor, caller) {
        var $content = jQuery("<div><emoji-picker class=\"" + emojiPickerClass + "\"></emoji-picker></div>");
        editor.createDropDown(caller, "emojis-picker", $content.get(0));
        jQuery('emoji-picker')[0].addEventListener('emoji-click', e => {
            editor.insert(e.detail.unicode);
            editor.closeDropDown(true);
            e.preventDefault();
        }
        );
    },
    exec: function(caller) {
        return sceditor.command.get("emojis")._dropDownMenu(this, caller);
    },
    txtExec: function(caller) {
        return sceditor.command.get("emojis")._dropDownMenu(this, caller);
    },
    tooltip: "Emojis"
});
sceditor.command.set("miscoptions", {
    _dropDownMenu: function(editor, caller) {
        var $content = jQuery("<div />");
        var _menuAncres = function(e, text1, text2, balise) {
            editor.closeDropDown(true);
            e.preventDefault();
            var $content = jQuery("<div />");
            $content.html('<div><label for="link">' + text1 + '</label> ' + '<input type="text" id="link" dir="ltr" placeholder="" /></div>' + '<div><label for="des">' + text2 + '</label> ' + '<input type="text" id="des" /></div>' + '<div><input type="button" class="button" value="Insérer" /></div>');
            $content.find('input[type=button]').click(function() {
                var ancre = $content.find('#link').val();
                var text = $content.find('#des').val();
                if (text)
                    editor.insert('[' + balise + '=' + ancre + ']' + text + '[/' + balise + ']');
                else {
                    if (editor.getRangeHelper().selectedHtml() || editor.inSourceMode()) {
                        editor.insert('[' + balise + '=' + ancre + ']', '[/' + balise + ']');
                    } else {
                        text = ancre;
                        editor.insert('[' + balise + '=' + ancre + ']' + text + '[/' + balise + ']');
                    }
                }
                editor.closeDropDown(true);
                e.preventDefault();
            });
            $content.keypress(function(e) {
                if (e.which === 13) {
                    $content.find('input[type=button]').click();
                }
            });
            editor.createDropDown(caller, "header-picker", $content.get(0));
            return true;
        };
        var plusOptions = {
            'Dé': function() {
                editor.insert('[dice]');
            },
            'Spoiler': function() {
                editor.insert('[hide]', '[/hide]');
            },
            'Hide': function() {
                editor.insert('[hide3]', '[/hide3]');
            },
            'Défiler': function() {
                editor.insert('[scroll]', '[/scroll]');
            },
            '<sup>T</sup><sub>e</sub><sup>X</sup>': function() {
                editor.insert('[tex]', '[/tex]');
            },
            'Lien vers une ancre': function(e) {
                return _menuAncres(e, 'Nom de l\'ancre vers laquelle pointer', 'Texte du lien (Optionnel)', 'link');
            },
            'Ancre': function(e) {
                return _menuAncres(e, 'Nom de l\'ancre', 'Texte (Optionnel)', 'target');
            },
            'Membres': function() {
                editor.insert('[members]', '[/members]');
            },
            'Modérateurs': function() {
                editor.insert('[modos]', '[/modos]');
            },
            'Administrateurs': function() {
                editor.insert('[admins]', '[/admins]');
            },
            'Blink': function() {
                editor.insert('[blink=500]', '[/blink]');
            }
        };
        jQuery.each(plusOptions, function(a, b) {
            jQuery('<a class="sceditor-font-option" href="#" >' + a + '</a>').click(function(e) {
                if (b(e))
                    return;
                editor.closeDropDown(true);
                e.preventDefault();
            }).appendTo($content);
        });
        editor.createDropDown(caller, "header-picker", $content.get(0));
    },
    exec: function(caller) {
        return sceditor.command.get("miscoptions")._dropDownMenu(this, caller);
    },
    txtExec: function(caller) {
        return sceditor.command.get("miscoptions")._dropDownMenu(this, caller);
    },
    tooltip: "Options supplémentaires"
});
sceditor.command.set("alloptions", {
    _viewAll: function(editor, caller) {
        _viewAllToolbar();
    },
    exec: function(caller) {
        return sceditor.command.get("alloptions")._viewAll(this, caller);
    },
    txtExec: function(caller) {
        return sceditor.command.get("alloptions")._viewAll(this, caller);
    },
    tooltip: "Afficher toutes les options"
});
sceditor.formats.bbcode.set('left', {
    html: '<div style="text-align: left;">{0}</div>'
});
sceditor.formats.bbcode.set('right', {
    html: '<div style="text-align: right;">{0}</div>'
});
sceditor.formats.bbcode.set('youtube', {
    html: '<iframe style="width: 560px; aspect-ratio: 560/315; max-width: 100%;" frameborder="0" ' + 'src="https://www.youtube-nocookie.com/embed/{0}?wmode=opaque" ' + 'data-youtube-id="{0}" allowfullscreen></iframe>'
});
sceditor.command.set('size', {
    _dropDown: function(editor, caller, callback) {
        var $content = jQuery("<div />");
        var plusOptions = [10, 12, 16, 18, 24, 32, 48];
        jQuery.each(plusOptions, function(a, b) {
            jQuery('<a class="sceditor-fontsize-option" data-size="' + b + '" href="#"><font style="font-size: ' + b + 'px">' + b + 'px</font></a>').click(function(e) {
                callback(jQuery(this).attr('data-size'));
                editor.closeDropDown(true);
                e.preventDefault();
            }).appendTo($content);
        });
        editor.createDropDown(caller, "fontsize-picker", $content.get(0));
    },
    exec: function(caller) {
        var editor = this;
        sceditor.command.get('size')._dropDown(editor, caller, function(fontSize) {
            editor.insert('[size=' + fontSize + ']', '[/size]');
        });
    }
});
sceditor.formats.bbcode.set('size', {
    format: function(element, content) {
        if (jQuery(element).hasClass('readOnly'))
            return content;
        var size = jQuery(element).css('font-size');
        if (size) {
            if (size.indexOf('px') > -1)
                size = size.replace('px', '');
        } else {
            size = parseInt(jQuery(element).attr('size'));
            if (size == 1)
                size = 10;
            else if (size == 2)
                size = 12;
            else if (size == 3)
                size = 16;
            else if (size == 4)
                size = 18;
            else if (size == 5)
                size = 24;
            else if (size == 6)
                size = 32;
            else if (size == 7)
                size = 48;
            else
                size = 13;
        }
        return '[size=' + size + ']' + content + '[/size]';
    },
    html: '<font style="font-size: {defaultattr}px;">{!0}</font>'
});
sceditor.formats.bbcode.set('del', {
    tags: {
        s: null,
        strike: null
    },
    styles: {
        'text-decoration': ['line-through']
    },
    format: '[del]{0}[/del]',
    html: '<s>{0}</s>'
});
sceditor.formats.bbcode.set('s', {
    tags: {
        s_disabled: null,
        strike_disabled: null
    }
});
sceditor.formats.bbcode.set('ul', {
    tags: {
        ul_disabled: null
    }
});
sceditor.formats.bbcode.set('list', {
    tags: {
        ul: null
    },
    breakStart: true,
    isInline: false,
    skipLastLineBreak: true,
    format: '[list]{0}[/list]',
    html: function(token, attrs, content) {
        if (attrs.defaultattr === "1")
            return '<ol>' + content + '</ol>';
        else if (attrs.defaultattr === "a")
            return '<ol class="a">' + content + '</ol>';
        else
            return '<ul>' + content + '</ul>';
    }
});
sceditor.formats.bbcode.set('ol', {
    tags: {
        ol: null
    },
    breakStart: true,
    isInline: false,
    skipLastLineBreak: true,
    format: function(element, content) {
        var type = sceditor.dom.attr(element, 'class');
        return '[list=' + (type === "a" ? "a" : "1") + ']' + content + '[/list]';
    },
    html: '<ol>{0}</ol>'
});
sceditor.formats.bbcode.set('li', {
    format: '[*]{0}[/*]'
});
sceditor.formats.bbcode.set('dice', {
    tags: {
        i: {
            class: "dice readOnly fa-solid fa-dice"
        }
    },
    allowsEmpty: true,
    isSelfClosing: true,
    isInline: true,
    format: '[dice]',
    html: '<i style="font-size: 4em; line-height: 1em; vertical-align: -0.25em;" class="dice readOnly fa-solid fa-dice"></i>'
});
sceditor.formats.bbcode.set('quote', {
    tags: {
        blockquote: {
            class: "quote"
        }
    },
    isInline: false,
    format: function(element, content) {
        var authorAttr = 'data-author';
        var author = '';
        var cite;
        var children = element.children;
        var attr = sceditor.dom.attr;
        var is = sceditor.dom.is;
        for (var i = 0; !cite && i < children.length; i++) {
            if (is(children[i], 'cite')) {
                cite = children[i];
            }
        }
        if ((cite && cite.textContent) || attr(element, authorAttr)) {
            author = cite && cite.textContent || attr(element, authorAttr);
            attr(element, authorAttr, author);
            if (cite) {
                element.removeChild(cite);
            }
            content = this.elementToBbcode(element);
            author = '="' + author.replace(/(^\s+|\s+$)/g, '') + '"';
            if (cite) {
                element.insertBefore(cite, element.firstChild);
            }
        }
        return '[quote' + author + ']' + content + '[/quote]';
    },
    html: function(token, attrs, content) {
        if (attrs.defaultattr) {
            content = '<cite>' + sceditor.escapeEntities(attrs.defaultattr) + '</cite>' + content;
        } else {
            content = '<cite></cite>' + content;
        }
        return '<blockquote class="quote">' + content + '</blockquote>';
    }
});
sceditor.formats.bbcode.set('hide', {
    tags: {
        blockquote: {
            class: "spoiler"
        }
    },
    isInline: false,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var authorAttr = 'data-author';
        var author = '';
        var cite;
        var children = element.children;
        var attr = sceditor.dom.attr;
        var is = sceditor.dom.is;
        for (var i = 0; !cite && i < children.length; i++) {
            if (is(children[i], 'cite')) {
                cite = children[i];
            }
        }
        if ((cite && cite.textContent) || attr(element, authorAttr)) {
            author = cite && cite.textContent || attr(element, authorAttr);
            attr(element, authorAttr, author);
            if (cite) {
                element.removeChild(cite);
            }
            content = this.elementToBbcode(element);
            author = '=' + author.replace(/(^\s+|\s+$)/g, '') + '';
            if (author == '=Spoiler')
                author = '';
            if (cite) {
                element.insertBefore(cite, element.firstChild);
            }
        }
        return '[hide' + author + ']' + content + '[/hide]';
    },
    html: function(token, attrs, content) {
        if (attrs.defaultattr) {
            content = '<cite>' + sceditor.escapeEntities(attrs.defaultattr) + '</cite>' + content;
        } else {
            content = '<cite>Spoiler</cite>' + content;
        }
        console.log("html : " + content);
        return '<blockquote class="spoiler">' + content + '</blockquote>';
    }
});
(function() {
    var list = {
        'members': 'Membres',
        'modos': 'Modérateurs',
        'admins': 'Administrateurs',
    };
    jQuery.each(list, function(k, v) {
        sceditor.formats.bbcode.set(k, {
            tags: {
                blockquote: {
                    class: k
                }
            },
            isInline: false,
            quoteType: 2,
            allowsEmpty: true,
            format: function(element, content) {
                var authorAttr = 'data-author';
                var author = '';
                var cite;
                var divInfo;
                var children = element.children;
                var attr = sceditor.dom.attr;
                var is = sceditor.dom.is;
                var hasClass = sceditor.dom.hasClass;
                for (var i = 0; !cite && i < children.length; i++) {
                    if (is(children[i], 'cite') && hasClass(children[i], 'readOnly')) {
                        divInfo = children[i];
                    }
                }
                if (divInfo) {
                    element.removeChild(divInfo);
                    content = this.elementToBbcode(element);
                }
                return '[' + k + ']' + content + '[/' + k + ']';
            },
            html: function(token, attrs, content) {
                content = '<cite class="readOnly">' + v + '</cite>' + content;
                return '<blockquote class="' + k + '">' + content + '</blockquote>';
            }
        });
    });
}
)();
sceditor.formats.bbcode.set('hide3', {
    tags: {
        div: {
            class: "hide3"
        }
    },
    isInline: false,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var authorAttr = 'data-author';
        var author = '';
        var cite;
        var divInfo;
        var children = element.children;
        var attr = sceditor.dom.attr;
        var is = sceditor.dom.is;
        var hasClass = sceditor.dom.hasClass;
        for (var i = 0; !cite && i < children.length; i++) {
            if (is(children[i], 'cite')) {
                cite = children[i];
            }
            if (is(children[i], 'div') && hasClass(children[i], 'readOnly')) {
                divInfo = children[i];
            }
        }
        if (divInfo) {
            element.removeChild(divInfo);
            content = this.elementToBbcode(element);
        }
        if ((cite && cite.textContent) || attr(element, authorAttr)) {
            author = cite && cite.textContent || attr(element, authorAttr);
            attr(element, authorAttr, author);
            if (cite) {
                element.removeChild(cite);
            }
            content = this.elementToBbcode(element);
            author = '=' + author.replace(/(^\s+|\s+$)/g, '') + '';
            if (author == '=Spoiler')
                author = '';
            if (cite) {
                element.insertBefore(cite, element.firstChild);
            }
        }
        return '[hide3' + author + ']' + content + '[/hide3]';
    },
    html: function(token, attrs, content) {
        content = '<div class="readOnly" style="color: var(--var-body-bgcolor-contrast-soft); font-size:0.8em; font-weight: 100; text-align: center; padding: 5px;">Contenu visible uniquement par les membres ayant répondu au sujet</div>' + '<cite>' + (attrs.defaultattr ? attrs.defaultattr : '') + '</cite>' + content;
        return '<div class="hide3">' + content + '</div>';
    }
});
sceditor.formats.bbcode.set('tex', {
    tags: {
        span: {
            class: "tex"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        return '[tex]' + content + '[/tex]';
    },
    html: function(token, attrs, content) {
        return '<span class="tex">' + content + '</span>';
    }
});
sceditor.formats.bbcode.set('blink', {
    tags: {
        span: {
            class: "blink"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var speed = sceditor.dom.attr(element, 'data-speed');
        try {
            if (parseInt(speed))
                speed = '=' + speed;
            else
                speed = '';
        } catch (e) {
            speed = '';
        }
        return '[blink' + speed + ']' + content + '[/blink]';
    },
    html: function(token, attrs, content) {
        return '<span class="blink" data-speed="' + (parseInt(attrs.defaultattr) ? sceditor.escapeUriScheme(attrs.defaultattr) : '') + '" style="animation: BBCodeStyled_blinker ' + (attrs.defaultattr ? sceditor.escapeUriScheme(attrs.defaultattr) : '500') + 'ms linear infinite;">' + content + '</span>';
    }
});
sceditor.command.set('link', {
    exec: function(caller) {
        var editor = this;
        sceditor.commands.link._dropDown(editor, caller, function(url, text) {
            var entities = sceditor.escapeEntities;
            if (text || !editor.getRangeHelper().selectedHtml()) {
                editor.wysiwygEditorInsertHtml('<a class="url" href="' + entities(url) + '">' + entities(text || url) + '</a>');
            } else {
                var uuidv4 = function() {
                    return "10000000-1000-4000-8000-100000000000".replace(/[018]/g, c => (+c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16));
                }
                var tmpurl = '#tmp-link-' + uuidv4();
                editor.execCommand('createlink', tmpurl);
                jQuery(editor.getBody()).find('a[href="' + tmpurl + '"]').attr('href', url).addClass('url');
            }
        });
    }
});
sceditor.formats.bbcode.set('url', {
    tags: {
        a: {
            class: "url"
        }
    },
    format: function(element, content) {
        var url = sceditor.dom.attr(element, 'href');
        if (url && url.substr(0, 7) === 'mailto:') {
            return '[email="' + url.substr(7) + '"]' + content + '[/email]';
        }
        if (url && url.substr(0, 1) === '#') {
            return '[link="' + url.substr(1) + '"]' + content + '[/link]';
        }
        return '[url=' + url + ']' + content + '[/url]';
    },
    html: function(token, attrs, content) {
        attrs.defaultattr = sceditor.escapeEntities(attrs.defaultattr, true) || content;
        return '<a class="url" href="' + sceditor.escapeUriScheme(attrs.defaultattr) + '">' + content + '</a>';
    }
});
sceditor.formats.bbcode.set('link', {
    tags: {
        a: {
            class: "link"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var url = sceditor.dom.attr(element, 'href');
        return '[link=' + url.substr(1) + ']' + content + '[/link]';
    },
    html: function(token, attrs, content) {
        return '<a class="link" href="#' + sceditor.escapeUriScheme(attrs.defaultattr ? attrs.defaultattr : 'ancre') + '">' + content + '</a>';
    }
});
sceditor.formats.bbcode.set('target', {
    tags: {
        a: {
            class: "target"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var url = sceditor.dom.attr(element, 'name');
        return '[target=' + url + ']' + content + '[/target]';
    },
    html: function(token, attrs, content) {
        return '<a class="target" name="' + sceditor.escapeUriScheme(attrs.defaultattr ? attrs.defaultattr : 'ancre') + '">' + content + '</a>';
    }
});
sceditor.command.set('code', {
    exec: function() {
        this.wysiwygEditorInsertHtml('<div class="code"><cite class="readOnly">Code</cite><code>', '</code></div>');
    }
});
sceditor.formats.bbcode.set('code', {
    tags: {
        div: {
            class: "code"
        }
    },
    isInline: false,
    allowedChildren: ['#', '#newline'],
    format: function(element, content) {
        jQuery(element).find('cite.readOnly').remove();
        content = this.elementToBbcode(element);
        return '[code]' + content + '[/code]';
    },
    html: '<div class="code"><cite class="readOnly">Code</cite><code>{0}</code></div>'
});
sceditor.formats.bbcode.set('scroll', {
    tags: {
        div: {
            class: "scroll"
        }
    },
    isInline: false,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var authorAttr = 'data-author';
        var author = '';
        var cite;
        var divInfo;
        var children = element.children;
        var attr = sceditor.dom.attr;
        var is = sceditor.dom.is;
        var hasClass = sceditor.dom.hasClass;
        for (var i = 0; !cite && i < children.length; i++) {
            if (is(children[i], 'div') && hasClass(children[i], 'readOnly')) {
                divInfo = children[i];
            }
        }
        if (divInfo) {
            element.removeChild(divInfo);
            content = this.elementToBbcode(element);
        }
        return '[scroll]' + content + '[/scroll]';
    },
    html: function(token, attrs, content) {
        content = '<div class="readOnly" style="color: var(--var-body-bgcolor-contrast-soft); font-size:0.8em; font-weight: 100; text-align: center; padding: 5px;">Message défilant</div>' + content;
        return '<div class="scroll">' + content + '</div>';
    }
});
var sceditorLottiesCache = false;
sceditor.command.set("file", {
    txtExec: function(caller, selected) {
        var editor = this;
        sceditor.commands.image._dropDown(editor, caller, selected, sceditorCallBackDropDownTxtExecImageVideoFile, 'file');
    },
    exec: function(caller) {
        var editor = this;
        sceditor.commands.image._dropDown(editor, caller, '', sceditorCallBackDropDownTxtExecImageVideoFile, 'file');
    },
    tooltip: "Joindre un fichier"
});
sceditor.formats.bbcode.set('file', {
    tags: {
        blockquote: {
            class: "phpBBFile readOnly"
        }
    },
    isInline: false,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var dom = sceditor.dom;
        var attr = sceditor.dom.attr;
        var width, height, aspectratio, attribs = '', style = function(name) {
            return element.style ? element.style[name] : null;
        };
        return '[file]' + attr(element, 'src') + '[/file]';
    },
    html: function(token, attrs, content) {
        var escapeUriScheme = sceditor.escapeUriScheme;
        var escapeEntities = sceditor.escapeEntities;
        console.log('debug ici');
        console.log(attrs);
        console.log(content);
        var undef, width, height, match = '';
        var css = '';
        var aspectratio = '';
        if (attrs.defaultattr) {
            match = attrs.defaultattr.split(/x/i);
            width = match[0];
            height = (match.length === 2 ? match[1] : match[0]);
        }
        var src = escapeUriScheme(content).split('<')[0];
        var srcName = src.split('/');
        srcName = srcName[srcName.length - 1].replace(/\-[a-z0-9]+(\.[a-z0-9]+)$/ig, '$1');
        var extension = srcName.split('.');
        extension = extension[extension.length - 1];
        return '<blockquote class="phpBBFile readOnly" src="' + src + '" data-extension="' + extension + '">' + srcName + '</blockquote>';
    }
});
sceditor.command.set("gif", {
    _dropDownMenu: function(editor, caller) {
        var $content = jQuery(`<div style="font-size: 1em;">
  <div><label for="image">Chercher un GIF</label> <input type="text" id="searchTenorField" dir="ltr" placeholder="" style="font-size: 0.8em; color: black;"></div>
  
   <div id="tenorPreview" style="display: flex;gap: 5px;flex-wrap: wrap;flex-direction: row;justify-content: space-between;align-items: center;min-width: 420px;max-width: 420px;overflow: auto;max-height: 200px;"></div>
  </div>`);
        var searchTenorTimeout;
        var searchTenorNoTimeout = false;
        var searchTenor = function(nodelay, e) {
            if (e && (e.key == "Enter")) {
                e.preventDefault();
                return false;
            }
            clearTimeout(searchTenorTimeout);
            searchTenorTimeout = setTimeout(function() {
                var apikey = "AIzaSyBm-qHmSRIg3LGbI7KOzf0Dq_W7qXBDvfI";
                var clientkey = "xooit_tenor_search";
                var lmt = 48;
                var search_term = encodeURIComponent(jQuery('#searchTenorField').val());
                if (!search_term) {
                    var cat_url = "https://tenor.googleapis.com/v2/categories?key=" + apikey + "&client_key=" + clientkey + "&locale=fr&country=FR";
                    jQuery.ajax({
                        url: cat_url,
                        dataType: "jsonp",
                        success: function(data) {
                            jQuery('#tenorPreview').html('');
                            jQuery.each(data.tags, function(k, row) {
                                var x = jQuery('<div style="text-align: center; cursor: pointer;" onclick=""><div style="border: 2px solid white; background: url(' + row.image + '); background-position: center center; background-size: cover; width: 130px; height: 50px; border-radius: 3px; display: inline-block;"><div style="width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); font-weight: 800; display: flex; align-items: center;justify-content: center; color: white;">' + row.searchterm + '</div></div>');
                                var searchTerm = row.searchterm + "";
                                x.click(function() {
                                    searchTenorNoTimeout = true;
                                    jQuery('#searchTenorField').val(searchTerm).change();
                                });
                                jQuery('#tenorPreview').append(x);
                            });
                        }
                    });
                } else {
                    var search_url = "https://tenor.googleapis.com/v2/search?q=" + search_term + "&key=" + apikey + "&client_key=" + clientkey + "&limit=" + lmt + "&locale=fr_FR";
                    jQuery.ajax({
                        url: search_url,
                        dataType: "jsonp",
                        success: function(data) {
                            jQuery('#tenorPreview').html('');
                            jQuery.each(data.results, function(k, row) {
                                var x = jQuery('<div style="width: calc( 100% / 3 - 10px ); text-align: center; cursor: pointer;"><img src="' + row.media_formats.nanogif.url + '" style="width: 100%">');
                                x.click(function() {
                                    editor.closeDropDown(true);
                                    if (!USERPERMS.gif) {
                                        alertPremium({
                                            'error': 'post_nogif'
                                        });
                                    } else {
                                        var format = row.media_formats.tinygif;
                                        editor.insert('[img=' + (format.dims[0] + 'x' + format.dims[1]) + ']' + format.url + '[/img]');
                                    }
                                    e.preventDefault();
                                });
                                jQuery('#tenorPreview').append(x);
                            });
                        }
                    });
                }
            }, (nodelay === true) || (searchTenorNoTimeout === true) ? 1 : 1000);
            searchTenorNoTimeout = false;
        }
        editor.createDropDown(caller, "gif-picker", $content.get(0));
        jQuery('#searchTenorField').on('change', function(e) {
            searchTenor(false, e);
        }).on('blur', function(e) {
            searchTenor(false, e);
        }).on('keyup', function(e) {
            searchTenor(false, e);
        }).on('keydown', function(e) {
            searchTenor(false, e);
        });
        searchTenor(true, false);
        return;
    },
    exec: function(caller) {
        return sceditor.command.get("gif")._dropDownMenu(this, caller);
    },
    txtExec: function(caller) {
        return sceditor.command.get("gif")._dropDownMenu(this, caller);
    },
    tooltip: "Insérer un GIF"
});
sceditor.formats.bbcode.set('gif', {
    tags: {
        iframe: {
            class: "phpBBlottieframe"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var lottie = element.src.split('https://img.xooimage.com/files_lottie/embedplayer.html?lottie=')[1].split('&')[0];
        if (!USERPERMS.advanced_emojis)
            return '';
        return '[lottie]' + lottie + '[/lottie]';
    },
    html: function(token, attrs, content) {
        if (!USERPERMS.advanced_emojis)
            return '';
        return '<iframe class="phpBBlottieframe" src="https://img.xooimage.com/files_lottie/embedplayer.html?lottie=' + content + '&_' + (new Date()).getTime() + '" scrolling="no"></iframe>';
    }
});
var sceditorCallBackDropDownTxtExecImageVideoFile = function(editor, url, width, height, knownDatas) {
    var attrs = '';
    var needRatio = true;
    if (width && height) {
        attrs += '=' + width + 'x' + height;
        needRatio = false;
    } else if ((width || height) && knownDatas && knownDatas.width && knownDatas.height) {
        if (width)
            height = Math.round(width / knownDatas.width * knownDatas.height);
        else
            width = Math.round(height / knownDatas.height * knownDatas.width);
        attrs += '=' + width + 'x' + height;
        needRatio = false;
    } else if (knownDatas && knownDatas.width && knownDatas.height) {
        attrs += '=!' + knownDatas.width + 'x' + knownDatas.height;
        needRatio = false;
    }
    var tag = 'img';
    if (!knownDatas) {
        if (url.match(/\.(mov|mp4|webm)$/)) {
            knownDatas = {
                'type': 'video'
            };
        } else if (url.match(/\.(pdf|xls|xlsx|doc|docx|txt|csv)$/)) {
            knownDatas = {
                'type': 'file'
            };
        }
    }
    if (knownDatas && (knownDatas.type == 'video')) {
        tag = 'video';
        needRatio = false;
    } else if (knownDatas && (knownDatas.type == 'file')) {
        tag = 'file';
        needRatio = false;
    }
    loadImageForRatio(needRatio ? url : false, 'bbcode', function(addattrs) {
        if (!attrs)
            attrs = addattrs;
        editor.insertText('[' + tag + (attrs && (attrs != 'null') ? attrs : '') + ']' + url + '[/' + tag + ']');
    }, width, height, '');
};
var sceditorCallBackDropDownExecImageVideoFile = function(editor, url, width, height, knownDatas) {
    var entities = sceditor.escapeEntities;
    var attrs = '';
    var css = 'max-width: 100%;';
    var needRatio = true;
    var adddatasize = '';
    if (width && height) {
        css += ' width: ' + parseInt(width, 10) + 'px;';
        css += ' aspect-ratio: ' + parseInt(width, 10) + '/' + parseInt(height, 10);
        adddatasize = parseInt(width, 10) + 'x' + parseInt(height, 10);
        needRatio = false;
    } else if ((width || height) && knownDatas && knownDatas.width && knownDatas.height) {
        if (width)
            height = Math.round(width / knownDatas.width * knownDatas.height);
        else
            width = Math.round(height / knownDatas.height * knownDatas.width);
        css += ' width: ' + parseInt(width, 10) + 'px;';
        css += ' aspect-ratio: ' + parseInt(width, 10) + '/' + parseInt(height, 10);
        adddatasize = parseInt(width, 10) + 'x' + parseInt(height, 10);
        needRatio = false;
    } else if (knownDatas && knownDatas.width && knownDatas.height) {
        css += ' width: ' + knownDatas.width + 'px;';
        css += ' aspect-ratio: ' + knownDatas.width + '/' + knownDatas.height;
        adddatasize = '!' + knownDatas.width + 'x' + knownDatas.height;
        needRatio = false;
    }
    var src = entities(url);
    var srcName = src.split('/');
    srcName = srcName[srcName.length - 1].replace(/\-[a-z0-9]+(\.[a-z0-9]+)$/ig, '$1');
    var extension = srcName.split('.');
    extension = extension[extension.length - 1];
    attrs += ' src="' + entities(url) + '"';
    var tag = 'img';
    if (!knownDatas) {
        if (url.match(/\.(mov|mp4|webm)$/)) {
            knownDatas = {
                'type': 'video'
            };
        } else if (url.match(/\.(pdf|xls|xlsx|doc|docx|txt|csv)$/)) {
            knownDatas = {
                'type': 'file'
            };
        }
    }
    if (knownDatas && (knownDatas.type == 'video')) {
        tag = 'video';
        needRatio = false;
    } else if (knownDatas && (knownDatas.type == 'file')) {
        tag = 'file';
        needRatio = false;
    }
    loadImageForRatio(needRatio ? entities(url) : false, 'html', function(addcss, adddatasize) {
        css += addcss;
        editor.wysiwygEditorInsertHtml((tag == 'video' ? '<video class="phpBBVideo" ' + (adddatasize ? 'data-size="' + adddatasize + '" ' : '') + 'style="' + css + '" ' + attrs + ' controls></video>' : (tag == 'file' ? '<blockquote class="phpBBFile readOnly" src="' + src + '" data-extension="' + extension + '">' + srcName + '</blockquote>' : '<img ' + (adddatasize ? 'data-size="' + adddatasize + '" ' : '') + ' style="' + css + '" ' + attrs + ' />')));
    }, width, height, adddatasize);
};
sceditor.command.set('image', {
    txtExec: function(caller, selected) {
        var editor = this;
        sceditor.commands.image._dropDown(editor, caller, selected, sceditorCallBackDropDownTxtExecImageVideoFile);
    },
    exec: function(caller) {
        var editor = this;
        sceditor.commands.image._dropDown(editor, caller, '', sceditorCallBackDropDownExecImageVideoFile);
    }
});
function loadImageForRatio(url, type, fct, width, height, adddatasize) {
    if (!url)
        return fct('', adddatasize);
    var div = jQuery('<div style="width: 10000px;"></div>');
    var img = jQuery('<img src="' + url + '">');
    img.on('load', function() {
        var prefix = '!';
        var w = jQuery(this).width();
        var h = jQuery(this).height();
        if (width) {
            h = Math.round(h * (width / w));
            w = width;
            prefix = '';
        } else if (height) {
            w = Math.round(w * (height / h));
            h = height;
            prefix = '';
        }
        w = Math.round(w);
        h = Math.round(h);
        var datasize = prefix + w + 'x' + h;
        if (type == 'bbcode')
            fct('=' + datasize, datasize);
        else
            fct('width: ' + w + 'px; aspect-ratio: ' + w + '/' + h, datasize);
        div.remove();
    });
    jQuery(div).append(img);
    jQuery(document.body).append(div);
}
sceditor.formats.bbcode.set('img', {
    format: function(element, content) {
        var dom = sceditor.dom;
        var attr = sceditor.dom.attr;
        var EMOTICON_DATA_ATTR = 'data-sceditor-emoticon';
        var width, height, aspectratio, attribs = '', style = function(name) {
            return element.style ? element.style[name] : null;
        };
        if (attr(element, EMOTICON_DATA_ATTR)) {
            return content;
        }
        width = attr(element, 'width') || style('width');
        height = attr(element, 'height') || style('height');
        aspectratio = style('aspect-ratio');
        if (aspectratio)
            aspectratio = aspectratio.replace('/', 'x').replace(/[^\!x0-9\.]+/ig, '');
        if (attribs = attr(element, 'data-size')) {
            attribs = '=' + attribs;
        } else if ((element.complete && (width || height)) || (width && height)) {
            attribs = '=' + Math.round(dom.width(element)) + 'x' + Math.round(dom.height(element));
        } else if (width && aspectratio) {
            attribs = '=' + aspectratio;
        } else if (aspectratio) {
            attribs = '=!' + aspectratio;
        }
        return '[img' + attribs + ']' + attr(element, 'src') + '[/img]';
    },
    html: function(token, attrs, content) {
        var escapeUriScheme = sceditor.escapeUriScheme;
        var escapeEntities = sceditor.escapeEntities;
        var undef, width, height, match = '';
        var css = '';
        var aspectratio = '';
        if (attrs.defaultattr) {
            match = attrs.defaultattr.split(/x/i);
            width = match[0];
            height = (match.length === 2 ? match[1] : match[0]);
        }
        if (width !== undef && height !== undef) {
            attrs.defaultattr = '';
            if (width.substring(0, 1) == "!") {
                width = width.substring(1);
                attrs.defaultattr += '!';
            }
            width = "" + Math.round(parseInt(width));
            height = "" + Math.round(parseInt(height));
            attrs.defaultattr += width + 'x' + height;
            css += ' width: ' + escapeEntities(width, true) + 'px;';
            css += ' aspect-ratio: ' + escapeEntities(width, true) + '/' + escapeEntities(height, true);
        }
        return '<img data-size="' + (attrs.defaultattr ? attrs.defaultattr : '') + '" style="max-width: 100%;' + css + '" src="' + escapeUriScheme(content) + '" />';
    }
});
sceditor.formats.bbcode.set('video', {
    tags: {
        video: {
            class: "phpBBVideo"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var dom = sceditor.dom;
        var attr = sceditor.dom.attr;
        var width, height, aspectratio, attribs = '', style = function(name) {
            return element.style ? element.style[name] : null;
        };
        width = attr(element, 'width') || style('width');
        height = attr(element, 'height') || style('height');
        aspectratio = style('aspect-ratio');
        if (aspectratio)
            aspectratio = aspectratio.replace('/', 'x').replace(/[^\!x0-9\.]+/ig, '');
        if (attribs = attr(element, 'data-size')) {
            attribs = '=' + attribs;
        } else if ((element.complete && (width || height)) || (width && height)) {
            attribs = '=' + Math.round(dom.width(element)) + 'x' + Math.round(dom.height(element));
        } else if (width && aspectratio) {
            attribs = '=' + aspectratio;
        } else if (aspectratio) {
            attribs = '=!' + aspectratio;
        }
        return '[video' + (attribs && (attribs != 'null') ? attribs : '') + ']' + attr(element, 'src') + '[/video]';
    },
    html: function(token, attrs, content) {
        var escapeUriScheme = sceditor.escapeUriScheme;
        var escapeEntities = sceditor.escapeEntities;
        var undef, width, height, match = '';
        var css = '';
        var aspectratio = '';
        if (attrs.defaultattr) {
            match = attrs.defaultattr.split(/x/i);
            width = match[0];
            height = (match.length === 2 ? match[1] : match[0]);
        }
        if (width !== undef && height !== undef) {
            attrs.defaultattr = '';
            if (width.substring(0, 1) == "!") {
                width = width.substring(1);
                attrs.defaultattr += '!';
            }
            width = "" + Math.round(parseInt(width));
            height = "" + Math.round(parseInt(height));
            attrs.defaultattr += width + 'x' + height;
            css += ' width: ' + escapeEntities(width, true) + 'px;';
            css += ' aspect-ratio: ' + escapeEntities(width, true) + '/' + escapeEntities(height, true);
        }
        return '<video class="phpBBVideo" data-size="' + (attrs.defaultattr ? attrs.defaultattr : '') + '" style="max-width: 100%;' + css + '" src="' + escapeUriScheme(content) + '" controls></video>';
    }
});
var sceditorLottiesCache = false;
sceditor.command.set("lotties", {
    _dropDownMenu: function(editor, caller) {
        var $content = jQuery(`<div style="font-size: 0.8em;">
   <div id="lottiesOnglets" style="display: flex;"></div>
   <div id="lottiesPreview" style="background-color: white; color: black; border: 1px solid silver; gap: 5px; display: flex;flex-wrap: wrap;align-items: center; max-height: 250px; max-width: 250px; overflow: auto; justify-content: space-around;"></div>
  </div>`);
        editor.createDropDown(caller, "lotties-picker", $content.get(0));
        var onSuccess = function(data) {
            sceditorLottiesCache = data;
            jQuery.each(data.l, function(kgroup, group) {
                var x = jQuery('<div style="border: 1px solid silver; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom: 0; padding: 4px 10px; background-color: white; cursor: pointer;">' + group.n + '</div>');
                jQuery('#lottiesOnglets').append(x);
                x.click(function() {
                    jQuery('#lottiesPreview').html('');
                    var titlesSet = {};
                    jQuery.each(group.l, function(k, lottie) {
                        var url = data.prefix + kgroup + '/' + lottie.f;
                        var phpbbCode = kgroup + '/' + lottie.f;
                        var isLottie = lottie.f.substr(-5) == '.json';
                        var title = '';
                        if (!isLottie)
                            return;
                        var content = (isLottie ? '<lottie-player src="' + url + '" background="transparent" speed="1" style="width: 100%;" direction="1" mode="normal" loop autoplay></lottie-player>' : '<div style="display: block; width: 100%; height: 100%; display: flex; align-items: center;align-content: center;justify-content: center;"><img src="' + url + '" style="width: 80%" /></div>') + '<input type="hidden" name="picto" value="' + url + '">';
                        var x = jQuery('<div style="width: 40px; height: 40px; text-align: center; cursor: pointer;">' + content + '</div>');
                        x.click(function(e) {
                            editor.closeDropDown(true);
                            if (!USERPERMS.advanced_emojis) {
                                alertPremium({
                                    'error': 'post_nolottie'
                                });
                            } else
                                editor.insert('[lottie]' + phpbbCode + '[/lottie]');
                            e.preventDefault();
                        });
                        jQuery('#lottiesPreview').append(x);
                    });
                    var onRenderSet = false;
                    jQuery('#lottiesPreview lottie-player').on('rendered', function() {
                        this.stop();
                        if (onRenderSet)
                            return false;
                        onRenderSet = true;
                        onRenderTimeout = setTimeout(function() {
                            jQuery('#lottiesPreview').scroll();
                        }, 500);
                    });
                    jQuery('#lottiesPreview').scroll();
                });
            });
            var checkLottiesPlayer = function() {
                var yMin = jQuery(this).position().top;
                var yMax = yMin + jQuery(this).height();
                jQuery('#lottiesPreview > div').each(function() {
                    var top = jQuery(this).position().top;
                    var height = jQuery(this).height();
                    if ((top + height) > yMin && (top) < yMax) {
                        jQuery(this).find('lottie-player').each(function() {
                            this.play();
                        });
                    } else {
                        jQuery(this).find('lottie-player').each(function() {
                            this.stop();
                        });
                    }
                });
            }
            jQuery('#lottiesPreview').scroll(checkLottiesPlayer);
            jQuery('#lottiesOnglets div:eq(0)').click();
        };
        if (sceditorLottiesCache) {
            onSuccess(sceditorLottiesCache);
        } else {
            var lotties_url = "https://img.xooimage.com/getlotties.php?profile_plus=" + USERPERMS.advanced_emojis;
            jQuery.ajax({
                url: lotties_url,
                dataType: "jsonp",
                success: onSuccess
            });
        }
    },
    exec: function(caller) {
        return sceditor.command.get("lotties")._dropDownMenu(this, caller);
    },
    txtExec: function(caller) {
        return sceditor.command.get("lotties")._dropDownMenu(this, caller);
    },
    tooltip: "Lotties"
});
sceditor.formats.bbcode.set('lottie', {
    tags: {
        iframe: {
            class: "phpBBlottieframe"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var lottie = element.src.split('https://img.xooimage.com/files_lottie/embedplayer.html?lottie=')[1].split('&')[0];
        if (!USERPERMS.advanced_emojis)
            return '';
        return '[lottie]' + lottie + '[/lottie]';
    },
    html: function(token, attrs, content) {
        if (!USERPERMS.advanced_emojis)
            return '';
        return '<iframe class="phpBBlottieframe" src="https://img.xooimage.com/files_lottie/embedplayer.html?lottie=' + content + '&_' + (new Date()).getTime() + '" scrolling="no"></iframe>';
    }
});
sceditor.command.set("pixabay", {
    _dropDownMenu: function(editor, caller) {
        var $content = jQuery(`<div style="font-size: 1em;">
  <div><label for="image">Chercher une image</label> <input type="text" id="searchPixabayField" dir="ltr" placeholder="" style="font-size: 0.8em; color: black;"></div>
  
   <div id="pixabayPreview" style="display: flex;gap: 5px;flex-wrap: wrap;flex-direction: row;justify-content: space-between;align-items: center;min-width: 420px;max-width: 420px;overflow: auto;max-height: 200px;"></div>
  </div>`);
        var lastShownPixabayQuery = false;
        var searchPixabayTimeout;
        var searchPixabayNoTimeout = false;
        var searchPixabay = function(nodelay, e) {
            if (e && (e.key == "Enter")) {
                e.preventDefault();
                return false;
            }
            clearTimeout(searchPixabayTimeout);
            searchPixabayTimeout = setTimeout(function() {
                var apikey = "AIzaSyBm-qHmSRIg3LGbI7KOzf0Dq_W7qXBDvfI";
                var clientkey = "xooit_tenor_search";
                var lmt = 48;
                var search_term = jQuery('#searchPixabayField').val();
                if (search_term) {
                    var q = search_term;
                    if (lastShownPixabayQuery === q)
                        return;
                    jQuery('#pixabayPreview').html('<div style="font-size: 3em; padding: 1em; text-align: center; width: 100%;"><i class="fa-solid fa-loader fa-spin"></i></div>');
                    jQuery.getJSON('/nolog.pixabay.php?q=' + encodeURIComponent(q) + '&t=all&frompost=1&rci=' + encodeURIComponent(upload_userdata_rci), function(json) {
                        jQuery('#pixabayPreview').html('');
                        jQuery.each(json, function(k, v) {
                            var d = jQuery('<div style="cursor: pointer; width: calc( ( 100% - 2em ) / 3 );"><img src="' + v.previewUrl + '" style="width: 100%;"></div>');
                            d.click(function() {
                                editor.closeDropDown(true);
                                editor.insert('[img]' + v.largeImageURL + '[/img]');
                                e.preventDefault();
                            });
                            jQuery('#pixabayPreview').append(d);
                        });
                        lastShownPixabayQuery = q;
                    });
                }
            }, (nodelay === true) || (searchPixabayNoTimeout === true) ? 1 : 1000);
            searchPixabayNoTimeout = false;
        }
        editor.createDropDown(caller, "pixabay-picker", $content.get(0));
        jQuery('#searchPixabayField').on('change', function(e) {
            searchPixabay(false, e);
        }).on('blur', function(e) {
            searchPixabay(false, e);
        }).on('keyup', function(e) {
            searchPixabay(false, e);
        }).on('keydown', function(e) {
            searchPixabay(false, e);
        });
        searchPixabay(true, false);
        return;
    },
    exec: function(caller) {
        return sceditor.command.get("pixabay")._dropDownMenu(this, caller);
    },
    txtExec: function(caller) {
        return sceditor.command.get("pixabay")._dropDownMenu(this, caller);
    },
    tooltip: "Insérer une image Pixabay"
});
sceditor.formats.bbcode.set('pixabay', {
    tags: {
        iframe: {
            class: "phpBBlottieframe"
        }
    },
    isInline: true,
    quoteType: 2,
    allowsEmpty: true,
    format: function(element, content) {
        var lottie = element.src.split('https://img.xooimage.com/files_lottie/embedplayer.html?lottie=')[1].split('&')[0];
        if (!USERPERMS.advanced_emojis)
            return '';
        return '[lottie]' + lottie + '[/lottie]';
    },
    html: function(token, attrs, content) {
        if (!USERPERMS.advanced_emojis)
            return '';
        return '<iframe class="phpBBlottieframe" src="https://img.xooimage.com/files_lottie/embedplayer.html?lottie=' + content + '&_' + (new Date()).getTime() + '" scrolling="no"></iframe>';
    }
});
function emojisToBBCodeJS($string) {
    var $randomOpen = 'randomOpen' + (new Date()).getTime();
    var $randomClose = 'randomClose' + (new Date()).getTime();
    $emojiOpen = '<span class="emoji readOnly" style="font-size: 1.5em;">';
    $emojiClose = '</span>';
    $string = $string.replace(/[\u{0023}\u{002A}\u{0030}-\u{0039}\u{00A9}\u{00AE}\u{1F004}\u{1F0CF}\u{1F170}-\u{1F171}\u{1F17E}-\u{1F17F}\u{1F18E}\u{1F191}-\u{1F19A}\u{1F1E6}-\u{1F1FF}\u{1F201}-\u{1F202}\u{1F21A}\u{1F22F}\u{1F232}-\u{1F23A}\u{1F250}-\u{1F251}\u{1F300}-\u{1F321}\u{1F324}-\u{1F393}\u{1F396}-\u{1F397}\u{1F399}-\u{1F39B}\u{1F39E}-\u{1F3F0}\u{1F3F3}-\u{1F3F5}\u{1F3F7}-\u{1F4FD}\u{1F4FF}-\u{1F53D}\u{1F549}-\u{1F54E}\u{1F550}-\u{1F567}\u{1F56F}-\u{1F570}\u{1F573}-\u{1F57A}\u{1F587}\u{1F58A}-\u{1F58D}\u{1F590}\u{1F595}-\u{1F596}\u{1F5A4}-\u{1F5A5}\u{1F5A8}\u{1F5B1}-\u{1F5B2}\u{1F5BC}\u{1F5C2}-\u{1F5C4}\u{1F5D1}-\u{1F5D3}\u{1F5DC}-\u{1F5DE}\u{1F5E1}\u{1F5E3}\u{1F5E8}\u{1F5EF}\u{1F5F3}\u{1F5FA}-\u{1F64F}\u{1F680}-\u{1F6C5}\u{1F6CB}-\u{1F6D2}\u{1F6D5}-\u{1F6D7}\u{1F6DC}-\u{1F6E5}\u{1F6E9}\u{1F6EB}-\u{1F6EC}\u{1F6F0}\u{1F6F3}-\u{1F6FC}\u{1F7E0}-\u{1F7EB}\u{1F7F0}\u{1F90C}-\u{1F93A}\u{1F93C}-\u{1F945}\u{1F947}-\u{1F9FF}\u{1FA70}-\u{1FA7C}\u{1FA80}-\u{1FA88}\u{1FA90}-\u{1FABD}\u{1FABF}-\u{1FAC5}\u{1FACE}-\u{1FADB}\u{1FAE0}-\u{1FAE8}\u{1FAF0}-\u{1FAF8}\u{200D}\u{203C}\u{2049}\u{2122}\u{2139}\u{2194}-\u{2199}\u{21A9}-\u{21AA}\u{231A}-\u{231B}\u{2328}\u{23CF}\u{23EA}-\u{23F3}\u{23F8}-\u{23FA}\u{24C2}\u{25AA}-\u{25AB}\u{25B6}\u{25C0}\u{25FB}-\u{25FE}\u{2600}-\u{2604}\u{260E}\u{2611}\u{2614}-\u{2615}\u{2618}\u{261D}\u{2620}\u{2622}-\u{2623}\u{2626}\u{262A}\u{262E}-\u{262F}\u{2638}-\u{263A}\u{2640}\u{2642}\u{2648}-\u{2649}\u{20E3}\u{23E9}\u{264A}-\u{2653}\u{265F}-\u{2660}\u{2663}\u{2665}-\u{2666}\u{2668}\u{267B}\u{267E}-\u{267F}\u{2692}-\u{2697}\u{2699}\u{269B}-\u{269C}\u{26A0}-\u{26A1}\u{26A7}\u{26AA}-\u{26AB}\u{26B0}-\u{26B1}\u{26BD}-\u{26BE}\u{26C4}-\u{26C5}\u{26C8}\u{26CE}-\u{26CF}\u{26D1}\u{26D3}-\u{26D4}\u{26EA}\u{26F0}-\u{26F5}\u{26F7}-\u{26FA}\u{26FD}\u{2702}\u{2705}\u{2708}-\u{270D}\u{270F}\u{2712}\u{2714}\u{2716}\u{271D}\u{2721}\u{2728}\u{2733}-\u{2734}\u{2744}\u{2747}\u{26E9}\u{274C}\u{274E}\u{2753}-\u{2755}\u{2757}\u{2763}-\u{2764}\u{2795}-\u{2797}\u{27A1}\u{27B0}\u{27BF}\u{2934}-\u{2935}\u{2B05}-\u{2B07}\u{2B1B}-\u{2B1C}\u{2B50}\u{2B55}\u{3030}\u{303D}\u{3297}\u{3299}\u{E0062}-\u{E0063}\u{E0065}\u{E0067}\u{E006C}\u{E006E}\u{E0073}-\u{E0074}\u{E0077}\u{E007F}\u{FE0F}]+/gu, $randomOpen + "$&" + $randomClose);
    var regexp = new RegExp($randomOpen + '([0-9\#\*]+)' + $randomClose,'g');
    $string = $string.replace(regexp, '$1');
    var regexp = new RegExp($randomOpen,'g');
    $string = $string.replace(regexp, $emojiOpen);
    var regexp = new RegExp($randomClose,'g');
    $string = $string.replace(regexp, $emojiClose);
    return $string;
}
KAJAXPWHITELISTEDPAGES = ['/login.php', '/premium.php', '/profile.php'];
var lastAutoRefreshTime = (new Date()).getTime();
var autorefreshAllowed = true;
var autorefreshTimer = 10;
onThisSite.onWindowVisibilityChange.push(function(state) {
    if (autorefreshAllowed && XOOIT_USER_CONNECTED && (state == 'visible')) {
        if (((new Date()).getTime() - lastAutoRefreshTime) / 1000 > autorefreshTimer) {
            launchAutoRefresh({});
        }
    }
});
var autoRefreshjQueryDom;
function launchAutoRefresh(opts) {
    autorefreshAllowed = false;
    var params = [];
    params.push({
        'name': 'KAJAX',
        'value': WEBSITEVERSION
    });
    params.push({
        'name': 'KAJAXT',
        'value': (new Date()).getTime()
    });
    params.push({
        'name': 'KAJAXC',
        'value': (XOOIT_USER_CONNECTED ? 1 : 0)
    });
    if (opts.withmps)
        params.push({
            'name': 'withmps',
            'value': 1
        });
    if (opts.withnotifications)
        params.push({
            'name': 'withnotifications',
            'value': 1
        });
    if (opts.mark_all_notifications_as_read)
        params.push({
            'name': 'mark_all_notifications_as_read',
            'value': 1
        });
    jQuery.post('/nolog.autorefresh.php', params, function(html) {
        var kajaxunavailable = (html.indexOf("KAJAXUNAVAILABLE") != -1);
        if (kajaxunavailable) {
            return;
        }
        autoRefreshjQueryDom = jQuery('<div></div>').html(html);
        autoRefreshjQueryDom.find('script').each(function() {
            jQuery('#content').append(this);
        });
    });
}
var badgesDatas = false;
function showBadge(badge_id) {
    if (!badgesDatas) {
        jQuery.getJSON('/nolog.badges.php', function(json) {
            badgesDatas = json;
            showBadge(badge_id);
        });
        return;
    }
    ;var badge = badgesDatas[badge_id];
    console.log(badge);
    alertPremium({
        'error': 'generic',
        'title': badge.title,
        'texte': '<div style="font-weight: normal; min-width: 300px;">' + badge.description + '</div>',
        'logo': 'fa-circle-exclamation',
        'logoStyle': 'transform: rotate(3deg);',
        'fctAfterShown': function() {
            jQuery('.blocPremiumLogo').html('<div class="badge animateonce" style="height: 1.5em; width: 1.5em;"><img src="https://img.xooimage.com/files_lottie/badges/' + badge_id + '.svg"></div>').css('margin-bottom', '20px');
        },
        'noDefaultBtn': 0,
        'btnsx': `
  <div class="blocpremiumBtn" onclick="closeAlertPremium();">Cool&nbsp;!</div>
  `
    });
}
var dontchecktinymce = false;
async function checkFormTinyMce(o, message_field_name) {
    const editor = window.monTinyMCE;
    let content = editor.getContent();
    const div = document.createElement('div');
    div.innerHTML = content;
    const images = div.querySelectorAll('img');
    const uploadPromises = [];
    for (const img of images) {
        const src = img.src;
        if (src.startsWith('data:image') || src.startsWith('blob:')) {
            const blob = await fetch(src).then(res => res.blob());
            const formData = new FormData();
            formData.append('upload', blob, 'image.jpg');
            formData.append('ajaxed', 1);
            formData.append('rci', upload_userdata_rci);
            const uploadPromise = fetch('/upload_frame_xooimage.php', {
                method: 'POST',
                body: formData
            }).then(res => res.json()).then(data => {
                console.log(data);
                img.src = data.code;
            }
            );
            uploadPromises.push(uploadPromise);
        }
    }
    await Promise.all(uploadPromises);
    const finalContent = div.innerHTML;
    editor.setContent(finalContent);
    tinymce.triggerSave();
    dontchecktinymce = true;
    var sendWhenReady = function(croppedImage) {
        return events_check_submit_next();
    }
    if (imageBlogFileType) {
        var croppedImage = imageBlogCropper.getCroppedCanvas({
            minWidth: 500,
            width: 500
        }).toDataURL("image/jpeg", 0.8);
        jQuery('[name="blog_post_image_couverture"]').val(croppedImage);
    }
    if (jQuery(o)[0].onsubmit()) {
        jQuery(o).append('<input class="removeOnPostFormError" type="hidden" name="post" value="1">');
        jQuery(o)[0].submit();
    }
}
function checkForm(o, message_field_name, istinymce) {
    formErrors = false;
    if (dontchecktinymce !== true) {
        if (typeof istinymce != 'undefined' && (istinymce === true)) {
            showLoading();
            tinymce.triggerSave();
            checkFormTinyMce(o, message_field_name);
            return false;
        }
    }
    dontchecktinymce = false;
    if (document.post[message_field_name].value.length < 2) {
        formErrors = 'Votre message est vide !';
    }
    if (formErrors) {
        alert(formErrors);
        hideLoading();
        jQuery('.removeOnPostFormError').remove();
        return false;
    } else {
        try {
            var instance = jQuery(document.post[message_field_name]).sceditor('instance');
            var key = instance.opts && instance.opts.autosave && instance.opts.autosave.storageKey || false;
            sceditor.plugins.autosave.clear(key);
        } catch (e) {}
        showLoading();
        return true;
    }
}
;var colorWheelerHelper = {
    SetColors: function(r, g, b, a) {
        ra = this.PutInRange(Math.round(r + (255 - r) * grade1), 0, 255);
        ga = this.PutInRange(Math.round(g + (255 - g) * grade1), 0, 255);
        ba = this.PutInRange(Math.round(b + (255 - b) * grade1), 0, 255);
        rb = this.PutInRange(Math.round(r + (255 - r) * grade2), 0, 255);
        gb = this.PutInRange(Math.round(g + (255 - g) * grade2), 0, 255);
        bb = this.PutInRange(Math.round(b + (255 - b) * grade2), 0, 255);
        rc = this.PutInRange(Math.round(r * grade3), 0, 255);
        gc = this.PutInRange(Math.round(g * grade3), 0, 255);
        bc = this.PutInRange(Math.round(b * grade3), 0, 255);
        rd = this.PutInRange(Math.round(r * grade4), 0, 255);
        gd = this.PutInRange(Math.round(g * grade4), 0, 255);
        bd = this.PutInRange(Math.round(b * grade4), 0, 255);
        colora = "(" + ra + "," + ga + "," + ba + ")";
        colorb = "(" + rb + "," + gb + "," + bb + ")";
        colorc = "(" + r + "," + g + "," + b + ")";
        colord = "(" + rc + "," + gc + "," + bc + ")";
        colore = "(" + rd + "," + gd + "," + bd + ")";
        for (i = 0; i < a.length; i += 2) {
            if (!this.resultColors[a[i]])
                this.resultColors[a[i]] = {};
            this.resultColors[a[i]][a[i + 1]] = {
                'a': this.RGB2Hex(ra, ga, ba),
                'b': this.RGB2Hex(rb, gb, bb),
                'c': this.RGB2Hex(r, g, b),
                'd': this.RGB2Hex(rc, gc, bc),
                'e': this.RGB2Hex(rd, gd, bd)
            };
        }
    },
    HueShift: function(h, s) {
        h += s;
        while (h >= 360.0)
            h -= 360.0;
        while (h < 0.0)
            h += 360.0;
        return h;
    },
    getSuggestions: function(color) {
        this.resultColors = {};
        var i;
        saveri = this.Hex2Dec(color.substr(0, 2));
        savegi = this.Hex2Dec(color.substr(2, 2));
        savebi = this.Hex2Dec(color.substr(4, 2));
        saveangle = '30';
        savegrade1 = '0.8';
        savegrade2 = '0.4';
        savegrade3 = '0.6';
        savegrade4 = '0.3';
        var running = 0;
        running = running ? 2 : 1;
        while (running) {
            r = parseInt(saveri);
            g = parseInt(savegi);
            b = parseInt(savebi);
            angle = parseFloat(saveangle);
            grade1 = this.PutInRange(parseFloat(savegrade1), -2.0, 1.0);
            grade2 = this.PutInRange(parseFloat(savegrade2), -2.0, 1.0);
            grade3 = this.PutInRange(parseFloat(savegrade3), 0, 2.0);
            grade4 = this.PutInRange(parseFloat(savegrade4), 0, 2.0);
            if (running == 2) {
                running = 1;
                continue;
            }
            this.SetColors(r, g, b, Array('a', '2', 's', '2', 't', '2'));
            if (running == 2) {
                running = 1;
                continue;
            }
            this.SetColors(g, b, r, Array('t', '1'));
            if (running == 2) {
                running = 1;
                continue;
            }
            this.SetColors(b, r, g, Array('t', '3'));
            if (running == 2) {
                running = 1;
                continue;
            }
            thisrgb = new Object();
            thisrgb.r = r;
            thisrgb.g = g;
            thisrgb.b = b;
            temprgb = thisrgb;
            temphsv = this.RGB2HSV(temprgb);
            temphsv.hue = this.HueShift(temphsv.hue, angle);
            temprgb = this.HSV2RGB(temphsv);
            this.SetColors(temprgb.r, temprgb.g, temprgb.b, Array('a', '1'));
            if (running == 2) {
                running = 1;
                continue;
            }
            temprgb = thisrgb;
            temphsv = this.RGB2HSV(temprgb);
            temphsv.hue = this.HueShift(temphsv.hue, 0.0 - angle);
            temprgb = this.HSV2RGB(temphsv);
            this.SetColors(temprgb.r, temprgb.g, temprgb.b, Array('a', '3'));
            if (running == 2) {
                running = 1;
                continue;
            }
            temprgb = thisrgb;
            temphsv = this.RGB2HSV(temprgb);
            temphsv.hue = this.HueShift(temphsv.hue, 180.0 - angle);
            temprgb = this.HSV2RGB(temphsv);
            this.SetColors(temprgb.r, temprgb.g, temprgb.b, Array('s', '1'));
            if (running == 2) {
                running = 1;
                continue;
            }
            temprgb = thisrgb;
            temphsv = this.RGB2HSV(temprgb);
            temphsv.hue = this.HueShift(temphsv.hue, 180.0 + angle);
            temprgb = this.HSV2RGB(temphsv);
            this.SetColors(temprgb.r, temprgb.g, temprgb.b, Array('s', '3'));
            if (running == 2) {
                running = 1;
                continue;
            }
            running = 0;
        }
        return this.resultColors;
    },
    min3: function(a, b, c) {
        return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);
    },
    max3: function(a, b, c) {
        return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);
    },
    PutInRange: function(n, l, h) {
        return (n < l) ? l : ((n > h) ? h : n);
    },
    Dec2Hex: function(d) {
        return '0123456789ABCDEF'.charAt((d - (d % 16)) / 16) + '0123456789ABCDEF'.charAt(d % 16);
    },
    Hex2Dec: function(h) {
        h = h.toUpperCase();
        d = 0;
        for (i = 0; i < h.length; i++) {
            d = d * 16;
            d += '0123456789ABCDEF'.indexOf(h.charAt(i));
        }
        return d;
    },
    RGB2Hex: function(r, g, b) {
        return this.Dec2Hex(r) + this.Dec2Hex(g) + this.Dec2Hex(b);
    },
    HSV2RGB: function(hsv) {
        var rgb = new Object();
        if (hsv.saturation == 0) {
            rgb.r = rgb.g = rgb.b = Math.round(hsv.value * 2.55);
        } else {
            hsv.hue /= 60;
            hsv.saturation /= 100;
            hsv.value /= 100;
            i = Math.floor(hsv.hue);
            f = hsv.hue - i;
            p = hsv.value * (1 - hsv.saturation);
            q = hsv.value * (1 - hsv.saturation * f);
            t = hsv.value * (1 - hsv.saturation * (1 - f));
            switch (i) {
            case 0:
                rgb.r = hsv.value;
                rgb.g = t;
                rgb.b = p;
                break;
            case 1:
                rgb.r = q;
                rgb.g = hsv.value;
                rgb.b = p;
                break;
            case 2:
                rgb.r = p;
                rgb.g = hsv.value;
                rgb.b = t;
                break;
            case 3:
                rgb.r = p;
                rgb.g = q;
                rgb.b = hsv.value;
                break;
            case 4:
                rgb.r = t;
                rgb.g = p;
                rgb.b = hsv.value;
                break;
            default:
                rgb.r = hsv.value;
                rgb.g = p;
                rgb.b = q;
            }
            rgb.r = Math.round(rgb.r * 255);
            rgb.g = Math.round(rgb.g * 255);
            rgb.b = Math.round(rgb.b * 255);
        }
        return rgb;
    },
    RGB2HSV: function(rgb) {
        hsv = new Object();
        max = this.max3(rgb.r, rgb.g, rgb.b);
        dif = max - this.min3(rgb.r, rgb.g, rgb.b);
        hsv.saturation = (max == 0.0) ? 0 : (100 * dif / max);
        if (hsv.saturation == 0)
            hsv.hue = 0;
        else if (rgb.r == max)
            hsv.hue = 60.0 * (rgb.g - rgb.b) / dif;
        else if (rgb.g == max)
            hsv.hue = 120.0 + 60.0 * (rgb.b - rgb.r) / dif;
        else if (rgb.b == max)
            hsv.hue = 240.0 + 60.0 * (rgb.r - rgb.g) / dif;
        if (hsv.hue < 0.0)
            hsv.hue += 360.0;
        hsv.value = Math.round(max * 100 / 255);
        hsv.hue = Math.round(hsv.hue);
        hsv.saturation = Math.round(hsv.saturation);
        return hsv;
    }
};
(function($) {
    "use strict";
    function cell(col) {
        return '<td ' + (col ? ('class="cell ' + (col.contrast ? 'alt' : '') + '" style="background-color:' + col.hex + '" data-hex="' + col.hex + '" data-txt="' + (col.contrast ? '#000' : '#fff') + '">') : '') + '</td>';
    }
    function getPalette(colors) {
        var colCount = colors.length
          , shadeCount = colors[0].shades.length;
        var out = '<div class="ui-colorpicker"><table class="palette">' + '<tr class="head">';
        for (var i = 0; i < colCount; i++) {
            out += cell(colors[i])
        }
        out += '</tr>' + '<tr class="sep">';
        for (var i = 0; i < colCount; i++) {
            out += cell()
        }
        out += '</tr>';
        for (var j = shadeCount - 5; j > 0; j--) {
            out += '<tr class="shade">';
            for (var i = 0; i < colCount; i++) {
                out += cell(colors[i].shades[j]);
            }
            out += '</tr>';
        }
        out += '<tr class="sep">';
        for (var i = 0; i < colCount; i++) {
            out += cell()
        }
        out += '</tr><tr class="foot"><td colspan="' + (colCount - 2) + '"></td>';
        var blackAndWhite = [{
            "hex": "#000000",
            "contrast": 0
        }, {
            "hex": "#ffffff",
            "contrast": 1
        }];
        colCount = blackAndWhite.length;
        for (var i = 0; i < colCount; i++) {
            out += cell(blackAndWhite[i])
        }
        out += '</tr></table></div>';
        return out;
    }
    var colors = [{
        "name": "red",
        "hex": "#f44336",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#ffebee",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#ffcdd2",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#ef9a9a",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#e57373",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#ef5350",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#f44336",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#e53935",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#d32f2f",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#c62828",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#b71c1c",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#ff8a80",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#ff5252",
            "contrast": 0
        }, {
            "strength": "A400",
            "hex": "#ff1744",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#d50000",
            "contrast": 0
        }]
    }, {
        "name": "pink",
        "hex": "#e91e63",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#fce4ec",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#f8bbd0",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#f48fb1",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#f06292",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#ec407a",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#e91e63",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#d81b60",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#c2185b",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#ad1457",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#880e4f",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#ff80ab",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#ff4081",
            "contrast": 0
        }, {
            "strength": "A400",
            "hex": "#f50057",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#c51162",
            "contrast": 0
        }]
    }, {
        "name": "purple",
        "hex": "#9c27b0",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#f3e5f5",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#e1bee7",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#ce93d8",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#ba68c8",
            "contrast": 0
        }, {
            "strength": 400,
            "hex": "#ab47bc",
            "contrast": 0
        }, {
            "strength": 500,
            "hex": "#9c27b0",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#8e24aa",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#7b1fa2",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#6a1b9a",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#4a148c",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#ea80fc",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#e040fb",
            "contrast": 0
        }, {
            "strength": "A400",
            "hex": "#d500f9",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#aa00ff",
            "contrast": 0
        }]
    }, {
        "name": "deep purple",
        "hex": "#673ab7",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#ede7f6",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#d1c4e9",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#b39ddb",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#9575cd",
            "contrast": 0
        }, {
            "strength": 400,
            "hex": "#7e57c2",
            "contrast": 0
        }, {
            "strength": 500,
            "hex": "#673ab7",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#5e35b1",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#512da8",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#4527a0",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#311b92",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#b388ff",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#7c4dff",
            "contrast": 0
        }, {
            "strength": "A400",
            "hex": "#651fff",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#6200ea",
            "contrast": 0
        }]
    }, {
        "name": "indigo",
        "hex": "#3f51b5",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#e8eaf6",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#c5cae9",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#9fa8da",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#7986cb",
            "contrast": 0
        }, {
            "strength": 400,
            "hex": "#5c6bc0",
            "contrast": 0
        }, {
            "strength": 500,
            "hex": "#3f51b5",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#3949ab",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#303f9f",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#283593",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#1a237e",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#8c9eff",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#536dfe",
            "contrast": 0
        }, {
            "strength": "A400",
            "hex": "#3d5afe",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#304ffe",
            "contrast": 0
        }]
    }, {
        "name": "blue",
        "hex": "#2196f3",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#e3f2fd",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#bbdefb",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#90caf9",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#64b5f6",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#42a5f5",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#2196f3",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#1e88e5",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#1976d2",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#1565c0",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#0d47a1",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#82b1ff",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#448aff",
            "contrast": 0
        }, {
            "strength": "A400",
            "hex": "#2979ff",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#2962ff",
            "contrast": 0
        }]
    }, {
        "name": "light blue",
        "hex": "#03a9f4",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#e1f5fe",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#b3e5fc",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#81d4fa",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#4fc3f7",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#29b6f6",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#03a9f4",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#039be5",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#0288d1",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#0277bd",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#01579b",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#80d8ff",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#40c4ff",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#00b0ff",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#0091ea",
            "contrast": 0
        }]
    }, {
        "name": "cyan",
        "hex": "#00bcd4",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#e0f7fa",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#b2ebf2",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#80deea",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#4dd0e1",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#26c6da",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#00bcd4",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#00acc1",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#0097a7",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#00838f",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#006064",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#84ffff",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#18ffff",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#00e5ff",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#00b8d4",
            "contrast": 1
        }]
    }, {
        "name": "teal",
        "hex": "#009688",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#e0f2f1",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#b2dfdb",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#80cbc4",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#4db6ac",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#26a69a",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#009688",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#00897b",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#00796b",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#00695c",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#004d40",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#a7ffeb",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#64ffda",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#1de9b6",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#00bfa5",
            "contrast": 1
        }]
    }, {
        "name": "green",
        "hex": "#4caf50",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#e8f5e9",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#c8e6c9",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#a5d6a7",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#81c784",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#66bb6a",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#4caf50",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#43a047",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#388e3c",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#2e7d32",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#1b5e20",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#b9f6ca",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#69f0ae",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#00e676",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#00c853",
            "contrast": 1
        }]
    }, {
        "name": "light green",
        "hex": "#8bc34a",
        "contrast": 1,
        "shades": [{
            "strength": 50,
            "hex": "#f1f8e9",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#dcedc8",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#c5e1a5",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#aed581",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#9ccc65",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#8bc34a",
            "contrast": 1
        }, {
            "strength": 600,
            "hex": "#7cb342",
            "contrast": 1
        }, {
            "strength": 700,
            "hex": "#689f38",
            "contrast": 1
        }, {
            "strength": 800,
            "hex": "#558b2f",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#33691e",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#ccff90",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#b2ff59",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#76ff03",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#64dd17",
            "contrast": 1
        }]
    }, {
        "name": "lime",
        "hex": "#cddc39",
        "contrast": 1,
        "shades": [{
            "strength": 50,
            "hex": "#f9fbe7",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#f0f4c3",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#e6ee9c",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#dce775",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#d4e157",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#cddc39",
            "contrast": 1
        }, {
            "strength": 600,
            "hex": "#c0ca33",
            "contrast": 1
        }, {
            "strength": 700,
            "hex": "#afb42b",
            "contrast": 1
        }, {
            "strength": 800,
            "hex": "#9e9d24",
            "contrast": 1
        }, {
            "strength": 900,
            "hex": "#827717",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#f4ff81",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#eeff41",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#c6ff00",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#aeea00",
            "contrast": 1
        }]
    }, {
        "name": "yellow",
        "hex": "#ffeb3b",
        "contrast": 1,
        "shades": [{
            "strength": 50,
            "hex": "#fffde7",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#fff9c4",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#fff59d",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#fff176",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#ffee58",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#ffeb3b",
            "contrast": 1
        }, {
            "strength": 600,
            "hex": "#fdd835",
            "contrast": 1
        }, {
            "strength": 700,
            "hex": "#fbc02d",
            "contrast": 1
        }, {
            "strength": 800,
            "hex": "#f9a825",
            "contrast": 1
        }, {
            "strength": 900,
            "hex": "#f57f17",
            "contrast": 1
        }, {
            "strength": "A100",
            "hex": "#ffff8d",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#ffff00",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#ffea00",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#ffd600",
            "contrast": 1
        }]
    }, {
        "name": "amber",
        "hex": "#ffc107",
        "contrast": 1,
        "shades": [{
            "strength": 50,
            "hex": "#fff8e1",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#ffecb3",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#ffe082",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#ffd54f",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#ffca28",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#ffc107",
            "contrast": 1
        }, {
            "strength": 600,
            "hex": "#ffb300",
            "contrast": 1
        }, {
            "strength": 700,
            "hex": "#ffa000",
            "contrast": 1
        }, {
            "strength": 800,
            "hex": "#ff8f00",
            "contrast": 1
        }, {
            "strength": 900,
            "hex": "#ff6f00",
            "contrast": 1
        }, {
            "strength": "A100",
            "hex": "#ffe57f",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#ffd740",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#ffc400",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#ffab00",
            "contrast": 1
        }]
    }, {
        "name": "orange",
        "hex": "#ff9800",
        "contrast": 1,
        "shades": [{
            "strength": 50,
            "hex": "#fff3e0",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#ffe0b2",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#ffcc80",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#ffb74d",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#ffa726",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#ff9800",
            "contrast": 1
        }, {
            "strength": 600,
            "hex": "#fb8c00",
            "contrast": 1
        }, {
            "strength": 700,
            "hex": "#f57c00",
            "contrast": 1
        }, {
            "strength": 800,
            "hex": "#ef6c00",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#e65100",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#ffd180",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#ffab40",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#ff9100",
            "contrast": 1
        }, {
            "strength": "A700",
            "hex": "#ff6d00",
            "contrast": 1
        }]
    }, {
        "name": "deep orange",
        "hex": "#ff5722",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#fbe9e7",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#ffccbc",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#ffab91",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#ff8a65",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#ff7043",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#ff5722",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#f4511e",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#e64a19",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#d84315",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#bf360c",
            "contrast": 0
        }, {
            "strength": "A100",
            "hex": "#ff9e80",
            "contrast": 1
        }, {
            "strength": "A200",
            "hex": "#ff6e40",
            "contrast": 1
        }, {
            "strength": "A400",
            "hex": "#ff3d00",
            "contrast": 0
        }, {
            "strength": "A700",
            "hex": "#dd2c00",
            "contrast": 0
        }]
    }, {
        "name": "brown",
        "hex": "#795548",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#efebe9",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#d7ccc8",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#bcaaa4",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#a1887f",
            "contrast": 0
        }, {
            "strength": 400,
            "hex": "#8d6e63",
            "contrast": 0
        }, {
            "strength": 500,
            "hex": "#795548",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#6d4c41",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#5d4037",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#4e342e",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#3e2723",
            "contrast": 0
        }]
    }, {
        "name": "grey",
        "hex": "#9e9e9e",
        "contrast": 1,
        "shades": [{
            "strength": 50,
            "hex": "#fafafa",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#f5f5f5",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#eeeeee",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#e0e0e0",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#bdbdbd",
            "contrast": 1
        }, {
            "strength": 500,
            "hex": "#9e9e9e",
            "contrast": 1
        }, {
            "strength": 600,
            "hex": "#757575",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#616161",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#424242",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#212121",
            "contrast": 0
        }]
    }, {
        "name": "blue grey",
        "hex": "#607d8b",
        "contrast": 0,
        "shades": [{
            "strength": 50,
            "hex": "#eceff1",
            "contrast": 1
        }, {
            "strength": 100,
            "hex": "#cfd8dc",
            "contrast": 1
        }, {
            "strength": 200,
            "hex": "#b0bec5",
            "contrast": 1
        }, {
            "strength": 300,
            "hex": "#90a4ae",
            "contrast": 1
        }, {
            "strength": 400,
            "hex": "#78909c",
            "contrast": 0
        }, {
            "strength": 500,
            "hex": "#607d8b",
            "contrast": 0
        }, {
            "strength": 600,
            "hex": "#546e7a",
            "contrast": 0
        }, {
            "strength": 700,
            "hex": "#455a64",
            "contrast": 0
        }, {
            "strength": 800,
            "hex": "#37474f",
            "contrast": 0
        }, {
            "strength": 900,
            "hex": "#263238",
            "contrast": 0
        }]
    }]
      , defaultOpt = {
        preview: true,
        setValue: function(col, txt) {}
    };
    $.fn.colorPicker = function(opt) {
        opt = $.extend({}, defaultOpt, opt);
        $.each(this, function() {
            var palette = $(getPalette(colors)).on('click', '.cell', function(e) {
                var $cell = $(this)
                  , col = $cell.data('hex')
                  , txt = $cell.data('txt');
                $this.val(col.toUpperCase());
                opt.setValue(col, txt, $this);
                if (opt.preview) {
                    $this.css({
                        backgroundColor: col,
                        color: txt
                    });
                }
            })
              , $this = $(this).on('focusin', function() {
                console.log(this);
                var pos = $this.position()
                  , pw = palette.insertAfter(this.parentNode).width()
                  , sw = $(window).width()
                  , overflow = pos.left + pw > sw;
                palette.find('.cell').html('');
                palette.find('.cell[data-hex="#' + $this.val().toLowerCase().replace('#', '') + '"]').html('&bull;');
                palette.fadeIn();
            }).on('focusout', function() {
                if (opt.permanent)
                    return;
                palette.fadeOut();
            }).on('remove', function() {
                if (opt.permanent)
                    return;
                palette.remove();
            });
            if (opt.permanent)
                $this.focus();
        });
    }
    ;
}
)(jQuery);
function copyToClipboard(that) {
    var inp = document.createElement('input');
    document.body.appendChild(inp)
    inp.value = that;
    inp.select();
    document.execCommand('copy', false);
    inp.remove();
    showLoading(true, 'fa-copy', 'Le lien vers ce post a bien été copié');
    setTimeout(hideLoading, 1500);
}
function checkCountDowns(serverTime) {
    var o = this;
    if (typeof o.decalage == 'undefined') {
        o.decalage = 0;
        if (serverTime) {
            o.decalage = Math.round((serverTime - (new Date()).getTime() / 1000));
        }
    }
    var now = Math.round((new Date()).getTime() / 1000);
    var nbFound = 0;
    jQuery('.countDown:not(.countDownEchu)').each(function() {
        if (!jQuery(this).attr('time')) {
            jQuery(this).remove();
            return;
        }
        var firstIteration = false;
        if (!jQuery(this).data('init')) {
            firstIteration = true;
            jQuery(this).data('init', 1);
            if (jQuery(this).find('.countDownAfter').length) {
                jQuery(this).data('after', jQuery(this).find('.countDownAfter').clone());
                jQuery(this).find('.countDownAfter').remove();
            }
            jQuery(this).data('title', jQuery(this).html());
        }
        var time = parseInt(jQuery(this).attr('time'));
        var reste = time - now - o.decalage;
        if (reste < 0) {
            reste = 0;
        }
        var days = 0;
        var hours = 0;
        var minutes = 0;
        var seconds = 0;
        seconds = reste % 60;
        if (reste >= 60)
            minutes = Math.floor(reste / 60) % 60;
        if (reste >= 60 * 60)
            hours = Math.floor(reste / 60 / 60) % 24;
        if (reste >= 60 * 60 * 24)
            days = Math.floor(reste / 60 / 60 / 24);
        var show = {
            'jours': days,
            'heures': hours,
            'minutes': minutes,
            'secondes': seconds
        };
        var div = jQuery('<div class="countDownTimer"></div>');
        var ever = false;
        jQuery.each(show, function(k, v) {
            if (!v && (k == 'jours'))
                return true;
            if (ever) {
                div.append('<div class="spacer">:</div>');
            }
            var chars = (v > 9 ? '' : '0') + v;
            var htmlchars = '';
            var i = 0;
            while (i < chars.length)
                htmlchars += '<div class="char">' + chars[i++] + '</div>';
            var add = jQuery('<div>' + htmlchars + '<div class="charname">' + k + '</div></div>');
            div.append(add);
            ever = true;
        });
        if (firstIteration) {
            jQuery(this).html('<div class="countDownTitle">' + jQuery(this).data('title') + '</div>').append(div);
            if (jQuery(this).data('after'))
                jQuery(this).append(jQuery(this).data('after'));
        } else {
            jQuery(this).find('.countDownTimer').replaceWith(div);
        }
        if (reste == 0) {
            jQuery(this).addClass('countDownEchu');
        } else {
            nbFound++;
        }
    });
    clearTimeout(this.checkCountDownsTimeout);
    if (nbFound)
        this.checkCountDownsTimeout = setTimeout(function() {
            checkCountDowns();
        }, 1000);
}
!function() {
    function e(e) {
        return e && e.__esModule ? e.default : e
    }
    function t(e) {
        if (void 0 === e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }
    function i(e, t) {
        if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function")
    }
    function n(e, t) {
        for (var i = 0; i < t.length; i++) {
            var n = t[i];
            n.enumerable = n.enumerable || !1,
            n.configurable = !0,
            "value"in n && (n.writable = !0),
            Object.defineProperty(e, n.key, n)
        }
    }
    function r(e, t, i) {
        return t && n(e.prototype, t),
        i && n(e, i),
        e
    }
    function a(e) {
        return a = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        }
        ,
        a(e)
    }
    function o(e, t) {
        return o = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t,
            e
        }
        ,
        o(e, t)
    }
    function l(e, t) {
        if ("function" != typeof t && null !== t)
            throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }),
        t && o(e, t)
    }
    function s(e, i) {
        return !i || "object" != ((n = i) && n.constructor === Symbol ? "symbol" : typeof n) && "function" != typeof i ? t(e) : i;
        var n
    }
    var u;
    function c(e) {
        return Array.isArray(e) || "[object Object]" == {}.toString.call(e)
    }
    function d(e) {
        return !e || "object" != typeof e && "function" != typeof e
    }
    u = function e() {
        var t = [].slice.call(arguments)
          , i = !1;
        "boolean" == typeof t[0] && (i = t.shift());
        var n = t[0];
        if (d(n))
            throw new Error("extendee must be an object");
        for (var r = t.slice(1), a = r.length, o = 0; o < a; o++) {
            var l = r[o];
            for (var s in l)
                if (Object.prototype.hasOwnProperty.call(l, s)) {
                    var u = l[s];
                    if (i && c(u)) {
                        var h = Array.isArray(u) ? [] : {};
                        n[s] = e(!0, Object.prototype.hasOwnProperty.call(n, s) && !d(n[s]) ? n[s] : h, u)
                    } else
                        n[s] = u
                }
        }
        return n
    }
    ;
    var h = function() {
        "use strict";
        function e() {
            i(this, e)
        }
        return r(e, [{
            key: "on",
            value: function(e, t) {
                return this._callbacks = this._callbacks || {},
                this._callbacks[e] || (this._callbacks[e] = []),
                this._callbacks[e].push(t),
                this
            }
        }, {
            key: "emit",
            value: function(e) {
                for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
                    i[n - 1] = arguments[n];
                this._callbacks = this._callbacks || {};
                var r = this._callbacks[e]
                  , a = !0
                  , o = !1
                  , l = void 0;
                if (r)
                    try {
                        for (var s, u = r[Symbol.iterator](); !(a = (s = u.next()).done); a = !0) {
                            var c = s.value;
                            c.apply(this, i)
                        }
                    } catch (e) {
                        o = !0,
                        l = e
                    } finally {
                        try {
                            a || null == u.return || u.return()
                        } finally {
                            if (o)
                                throw l
                        }
                    }
                return this.element && this.element.dispatchEvent(this.makeEvent("dropzone:" + e, {
                    args: i
                })),
                this
            }
        }, {
            key: "makeEvent",
            value: function(e, t) {
                var i = {
                    bubbles: !0,
                    cancelable: !0,
                    detail: t
                };
                if ("function" == typeof window.CustomEvent)
                    return new CustomEvent(e,i);
                var n = document.createEvent("CustomEvent");
                return n.initCustomEvent(e, i.bubbles, i.cancelable, i.detail),
                n
            }
        }, {
            key: "off",
            value: function(e, t) {
                if (!this._callbacks || 0 === arguments.length)
                    return this._callbacks = {},
                    this;
                var i = this._callbacks[e];
                if (!i)
                    return this;
                if (1 === arguments.length)
                    return delete this._callbacks[e],
                    this;
                for (var n = 0; n < i.length; n++) {
                    var r = i[n];
                    if (r === t) {
                        i.splice(n, 1);
                        break
                    }
                }
                return this
            }
        }]),
        e
    }();
    var p = {
        url: null,
        method: "post",
        withCredentials: !1,
        timeout: null,
        parallelUploads: 2,
        uploadMultiple: !1,
        chunking: !1,
        forceChunking: !1,
        chunkSize: 2e6,
        parallelChunkUploads: !1,
        retryChunks: !1,
        retryChunksLimit: 3,
        maxFilesize: 256,
        paramName: "file",
        createImageThumbnails: !0,
        maxThumbnailFilesize: 10,
        thumbnailWidth: 120,
        thumbnailHeight: 120,
        thumbnailMethod: "crop",
        resizeWidth: null,
        resizeHeight: null,
        resizeMimeType: null,
        resizeQuality: .8,
        resizeMethod: "contain",
        filesizeBase: 1e3,
        maxFiles: null,
        headers: null,
        clickable: !0,
        ignoreHiddenFiles: !0,
        acceptedFiles: null,
        acceptedMimeTypes: null,
        autoProcessQueue: !0,
        autoQueue: !0,
        addRemoveLinks: !1,
        previewsContainer: null,
        disablePreviews: !1,
        hiddenInputContainer: "body",
        capture: null,
        renameFilename: null,
        renameFile: null,
        forceFallback: !1,
        dictDefaultMessage: "Drop files here to upload",
        dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
        dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
        dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
        dictInvalidFileType: "You can't upload files of this type.",
        dictResponseError: "Server responded with {{statusCode}} code.",
        dictCancelUpload: "Cancel upload",
        dictUploadCanceled: "Upload canceled.",
        dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
        dictRemoveFile: "Remove file",
        dictRemoveFileConfirmation: null,
        dictMaxFilesExceeded: "You can not upload any more files.",
        dictFileSizeUnits: {
            tb: "TB",
            gb: "GB",
            mb: "MB",
            kb: "KB",
            b: "b"
        },
        init: function() {},
        params: function(e, t, i) {
            if (i)
                return {
                    dzuuid: i.file.upload.uuid,
                    dzchunkindex: i.index,
                    dztotalfilesize: i.file.size,
                    dzchunksize: this.options.chunkSize,
                    dztotalchunkcount: i.file.upload.totalChunkCount,
                    dzchunkbyteoffset: i.index * this.options.chunkSize
                }
        },
        accept: function(e, t) {
            return t()
        },
        chunksUploaded: function(e, t) {
            t()
        },
        fallback: function() {
            var e;
            this.element.className = "".concat(this.element.className, " dz-browser-not-supported");
            var t = !0
              , i = !1
              , n = void 0;
            try {
                for (var r, a = this.element.getElementsByTagName("div")[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                    var o = r.value;
                    if (/(^| )dz-message($| )/.test(o.className)) {
                        e = o,
                        o.className = "dz-message";
                        break
                    }
                }
            } catch (e) {
                i = !0,
                n = e
            } finally {
                try {
                    t || null == a.return || a.return()
                } finally {
                    if (i)
                        throw n
                }
            }
            e || (e = f.createElement('<div class="dz-message"><span></span></div>'),
            this.element.appendChild(e));
            var l = e.getElementsByTagName("span")[0];
            return l && (null != l.textContent ? l.textContent = this.options.dictFallbackMessage : null != l.innerText && (l.innerText = this.options.dictFallbackMessage)),
            this.element.appendChild(this.getFallbackForm())
        },
        resize: function(e, t, i, n) {
            var r = {
                srcX: 0,
                srcY: 0,
                srcWidth: e.width,
                srcHeight: e.height
            }
              , a = e.width / e.height;
            null == t && null == i ? (t = r.srcWidth,
            i = r.srcHeight) : null == t ? t = i * a : null == i && (i = t / a);
            var o = (t = Math.min(t, r.srcWidth)) / (i = Math.min(i, r.srcHeight));
            if (r.srcWidth > t || r.srcHeight > i)
                if ("crop" === n)
                    a > o ? (r.srcHeight = e.height,
                    r.srcWidth = r.srcHeight * o) : (r.srcWidth = e.width,
                    r.srcHeight = r.srcWidth / o);
                else {
                    if ("contain" !== n)
                        throw new Error("Unknown resizeMethod '".concat(n, "'"));
                    a > o ? i = t / a : t = i * a
                }
            return r.srcX = (e.width - r.srcWidth) / 2,
            r.srcY = (e.height - r.srcHeight) / 2,
            r.trgWidth = t,
            r.trgHeight = i,
            r
        },
        transformFile: function(e, t) {
            return (this.options.resizeWidth || this.options.resizeHeight) && e.type.match(/image.*/) ? this.resizeImage(e, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, t) : t(e)
        },
        previewTemplate: e('<div class="dz-file-preview dz-preview"> <div class="dz-image"><img data-dz-thumbnail=""></div> <div class="dz-details"> <div class="dz-size"><span data-dz-size=""></span></div> <div class="dz-filename"><span data-dz-name=""></span></div> </div> <div class="dz-progress"> <span class="dz-upload" data-dz-uploadprogress=""></span> </div> <div class="dz-error-message"><span data-dz-errormessage=""></span></div> <div class="dz-success-mark"> <svg width="54" height="54" fill="#fff"><path d="m10.207 29.793 4.086-4.086a1 1 0 0 1 1.414 0l5.586 5.586a1 1 0 0 0 1.414 0l15.586-15.586a1 1 0 0 1 1.414 0l4.086 4.086a1 1 0 0 1 0 1.414L22.707 42.293a1 1 0 0 1-1.414 0L10.207 31.207a1 1 0 0 1 0-1.414Z"/></svg> </div> <div class="dz-error-mark"> <svg width="54" height="54" fill="#fff"><path d="m26.293 20.293-7.086-7.086a1 1 0 0 0-1.414 0l-4.586 4.586a1 1 0 0 0 0 1.414l7.086 7.086a1 1 0 0 1 0 1.414l-7.086 7.086a1 1 0 0 0 0 1.414l4.586 4.586a1 1 0 0 0 1.414 0l7.086-7.086a1 1 0 0 1 1.414 0l7.086 7.086a1 1 0 0 0 1.414 0l4.586-4.586a1 1 0 0 0 0-1.414l-7.086-7.086a1 1 0 0 1 0-1.414l7.086-7.086a1 1 0 0 0 0-1.414l-4.586-4.586a1 1 0 0 0-1.414 0l-7.086 7.086a1 1 0 0 1-1.414 0Z"/></svg> </div> </div>'),
        drop: function(e) {
            return this.element.classList.remove("dz-drag-hover")
        },
        dragstart: function(e) {},
        dragend: function(e) {
            return this.element.classList.remove("dz-drag-hover")
        },
        dragenter: function(e) {
            return this.element.classList.add("dz-drag-hover")
        },
        dragover: function(e) {
            return this.element.classList.add("dz-drag-hover")
        },
        dragleave: function(e) {
            return this.element.classList.remove("dz-drag-hover")
        },
        paste: function(e) {},
        reset: function() {
            return this.element.classList.remove("dz-started")
        },
        addedfile: function(e) {
            if (this.element === this.previewsContainer && this.element.classList.add("dz-started"),
            this.previewsContainer && !this.options.disablePreviews) {
                var t = this;
                e.previewElement = f.createElement(this.options.previewTemplate.trim()),
                e.previewTemplate = e.previewElement,
                this.previewsContainer.appendChild(e.previewElement);
                var i = !0
                  , n = !1
                  , r = void 0;
                try {
                    for (var a, o = e.previewElement.querySelectorAll("[data-dz-name]")[Symbol.iterator](); !(i = (a = o.next()).done); i = !0) {
                        var l = a.value;
                        l.textContent = e.name
                    }
                } catch (e) {
                    n = !0,
                    r = e
                } finally {
                    try {
                        i || null == o.return || o.return()
                    } finally {
                        if (n)
                            throw r
                    }
                }
                var s = !0
                  , u = !1
                  , c = void 0;
                try {
                    for (var d, h = e.previewElement.querySelectorAll("[data-dz-size]")[Symbol.iterator](); !(s = (d = h.next()).done); s = !0)
                        (l = d.value).innerHTML = this.filesize(e.size)
                } catch (e) {
                    u = !0,
                    c = e
                } finally {
                    try {
                        s || null == h.return || h.return()
                    } finally {
                        if (u)
                            throw c
                    }
                }
                this.options.addRemoveLinks && (e._removeLink = f.createElement('<a class="dz-remove" href="javascript:undefined;" data-dz-remove>'.concat(this.options.dictRemoveFile, "</a>")),
                e.previewElement.appendChild(e._removeLink));
                var p = function(i) {
                    var n = t;
                    if (i.preventDefault(),
                    i.stopPropagation(),
                    e.status === f.UPLOADING)
                        return f.confirm(t.options.dictCancelUploadConfirmation, (function() {
                            return n.removeFile(e)
                        }
                        ));
                    var r = t;
                    return t.options.dictRemoveFileConfirmation ? f.confirm(t.options.dictRemoveFileConfirmation, (function() {
                        return r.removeFile(e)
                    }
                    )) : t.removeFile(e)
                }
                  , m = !0
                  , v = !1
                  , y = void 0;
                try {
                    for (var g, b = e.previewElement.querySelectorAll("[data-dz-remove]")[Symbol.iterator](); !(m = (g = b.next()).done); m = !0) {
                        g.value.addEventListener("click", p)
                    }
                } catch (e) {
                    v = !0,
                    y = e
                } finally {
                    try {
                        m || null == b.return || b.return()
                    } finally {
                        if (v)
                            throw y
                    }
                }
            }
        },
        removedfile: function(e) {
            return null != e.previewElement && null != e.previewElement.parentNode && e.previewElement.parentNode.removeChild(e.previewElement),
            this._updateMaxFilesReachedClass()
        },
        thumbnail: function(e, t) {
            if (e.previewElement) {
                e.previewElement.classList.remove("dz-file-preview");
                var i = !0
                  , n = !1
                  , r = void 0;
                try {
                    for (var a, o = e.previewElement.querySelectorAll("[data-dz-thumbnail]")[Symbol.iterator](); !(i = (a = o.next()).done); i = !0) {
                        var l = a.value;
                        l.alt = e.name,
                        l.src = t
                    }
                } catch (e) {
                    n = !0,
                    r = e
                } finally {
                    try {
                        i || null == o.return || o.return()
                    } finally {
                        if (n)
                            throw r
                    }
                }
                return setTimeout((function() {
                    return e.previewElement.classList.add("dz-image-preview")
                }
                ), 1)
            }
        },
        error: function(e, t) {
            if (e.previewElement) {
                e.previewElement.classList.add("dz-error"),
                "string" != typeof t && t.error && (t = t.error);
                var i = !0
                  , n = !1
                  , r = void 0;
                try {
                    for (var a, o = e.previewElement.querySelectorAll("[data-dz-errormessage]")[Symbol.iterator](); !(i = (a = o.next()).done); i = !0) {
                        a.value.textContent = t
                    }
                } catch (e) {
                    n = !0,
                    r = e
                } finally {
                    try {
                        i || null == o.return || o.return()
                    } finally {
                        if (n)
                            throw r
                    }
                }
            }
        },
        errormultiple: function() {},
        processing: function(e) {
            if (e.previewElement && (e.previewElement.classList.add("dz-processing"),
            e._removeLink))
                return e._removeLink.innerHTML = this.options.dictCancelUpload
        },
        processingmultiple: function() {},
        uploadprogress: function(e, t, i) {
            var n = !0
              , r = !1
              , a = void 0;
            if (e.previewElement)
                try {
                    for (var o, l = e.previewElement.querySelectorAll("[data-dz-uploadprogress]")[Symbol.iterator](); !(n = (o = l.next()).done); n = !0) {
                        var s = o.value;
                        "PROGRESS" === s.nodeName ? s.value = t : s.style.width = "".concat(t, "%")
                    }
                } catch (e) {
                    r = !0,
                    a = e
                } finally {
                    try {
                        n || null == l.return || l.return()
                    } finally {
                        if (r)
                            throw a
                    }
                }
        },
        totaluploadprogress: function() {},
        sending: function() {},
        sendingmultiple: function() {},
        success: function(e) {
            if (e.previewElement)
                return e.previewElement.classList.add("dz-success")
        },
        successmultiple: function() {},
        canceled: function(e) {
            return this.emit("error", e, this.options.dictUploadCanceled)
        },
        canceledmultiple: function() {},
        complete: function(e) {
            if (e._removeLink && (e._removeLink.innerHTML = this.options.dictRemoveFile),
            e.previewElement)
                return e.previewElement.classList.add("dz-complete")
        },
        completemultiple: function() {},
        maxfilesexceeded: function() {},
        maxfilesreached: function() {},
        queuecomplete: function() {},
        addedfiles: function() {}
    }
      , f = function(n) {
        "use strict";
        function o(n, r) {
            var l, c, d, h;
            if (i(this, o),
            (l = s(this, (c = o,
            a(c)).call(this))).element = n,
            l.clickableElements = [],
            l.listeners = [],
            l.files = [],
            "string" == typeof l.element && (l.element = document.querySelector(l.element)),
            !l.element || null == l.element.nodeType)
                throw new Error("Invalid dropzone element.");
            if (l.element.dropzone)
                throw new Error("Dropzone already attached.");
            o.instances.push(t(l)),
            l.element.dropzone = t(l);
            var f = null != (h = o.optionsForElement(l.element)) ? h : {};
            if (l.options = e(u)(!0, {}, p, f, null != r ? r : {}),
            l.options.previewTemplate = l.options.previewTemplate.replace(/\n*/g, ""),
            l.options.forceFallback || !o.isBrowserSupported())
                return s(l, l.options.fallback.call(t(l)));
            if (null == l.options.url && (l.options.url = l.element.getAttribute("action")),
            !l.options.url)
                throw new Error("No URL provided.");
            if (l.options.acceptedFiles && l.options.acceptedMimeTypes)
                throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
            if (l.options.uploadMultiple && l.options.chunking)
                throw new Error("You cannot set both: uploadMultiple and chunking.");
            return l.options.acceptedMimeTypes && (l.options.acceptedFiles = l.options.acceptedMimeTypes,
            delete l.options.acceptedMimeTypes),
            null != l.options.renameFilename && (l.options.renameFile = function(e) {
                return l.options.renameFilename.call(t(l), e.name, e)
            }
            ),
            "string" == typeof l.options.method && (l.options.method = l.options.method.toUpperCase()),
            (d = l.getExistingFallback()) && d.parentNode && d.parentNode.removeChild(d),
            !1 !== l.options.previewsContainer && (l.options.previewsContainer ? l.previewsContainer = o.getElement(l.options.previewsContainer, "previewsContainer") : l.previewsContainer = l.element),
            l.options.clickable && (!0 === l.options.clickable ? l.clickableElements = [l.element] : l.clickableElements = o.getElements(l.options.clickable, "clickable")),
            l.init(),
            l
        }
        return l(o, n),
        r(o, [{
            key: "getAcceptedFiles",
            value: function() {
                return this.files.filter((function(e) {
                    return e.accepted
                }
                )).map((function(e) {
                    return e
                }
                ))
            }
        }, {
            key: "getRejectedFiles",
            value: function() {
                return this.files.filter((function(e) {
                    return !e.accepted
                }
                )).map((function(e) {
                    return e
                }
                ))
            }
        }, {
            key: "getFilesWithStatus",
            value: function(e) {
                return this.files.filter((function(t) {
                    return t.status === e
                }
                )).map((function(e) {
                    return e
                }
                ))
            }
        }, {
            key: "getQueuedFiles",
            value: function() {
                return this.getFilesWithStatus(o.QUEUED)
            }
        }, {
            key: "getUploadingFiles",
            value: function() {
                return this.getFilesWithStatus(o.UPLOADING)
            }
        }, {
            key: "getAddedFiles",
            value: function() {
                return this.getFilesWithStatus(o.ADDED)
            }
        }, {
            key: "getActiveFiles",
            value: function() {
                return this.files.filter((function(e) {
                    return e.status === o.UPLOADING || e.status === o.QUEUED
                }
                )).map((function(e) {
                    return e
                }
                ))
            }
        }, {
            key: "init",
            value: function() {
                var e = this
                  , t = this
                  , i = this
                  , n = this
                  , r = this
                  , a = this
                  , l = this
                  , s = this
                  , u = this
                  , c = this
                  , d = this;
                if ("form" === this.element.tagName && this.element.setAttribute("enctype", "multipart/form-data"),
                this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message") && this.element.appendChild(o.createElement('<div class="dz-default dz-message"><button class="dz-button" type="button">'.concat(this.options.dictDefaultMessage, "</button></div>"))),
                this.clickableElements.length) {
                    var h = this
                      , p = function() {
                        var e = h;
                        h.hiddenFileInput && h.hiddenFileInput.parentNode.removeChild(h.hiddenFileInput),
                        h.hiddenFileInput = document.createElement("input"),
                        h.hiddenFileInput.setAttribute("type", "file"),
                        (null === h.options.maxFiles || h.options.maxFiles > 1) && h.hiddenFileInput.setAttribute("multiple", "multiple"),
                        h.hiddenFileInput.className = "dz-hidden-input",
                        null !== h.options.acceptedFiles && h.hiddenFileInput.setAttribute("accept", h.options.acceptedFiles),
                        null !== h.options.capture && h.hiddenFileInput.setAttribute("capture", h.options.capture),
                        h.hiddenFileInput.setAttribute("tabindex", "-1"),
                        h.hiddenFileInput.style.visibility = "hidden",
                        h.hiddenFileInput.style.position = "absolute",
                        h.hiddenFileInput.style.top = "0",
                        h.hiddenFileInput.style.left = "0",
                        h.hiddenFileInput.style.height = "0",
                        h.hiddenFileInput.style.width = "0",
                        o.getElement(h.options.hiddenInputContainer, "hiddenInputContainer").appendChild(h.hiddenFileInput),
                        h.hiddenFileInput.addEventListener("change", (function() {
                            var t = e.hiddenFileInput.files
                              , i = !0
                              , n = !1
                              , r = void 0;
                            if (t.length)
                                try {
                                    for (var a, o = t[Symbol.iterator](); !(i = (a = o.next()).done); i = !0) {
                                        var l = a.value;
                                        e.addFile(l)
                                    }
                                } catch (e) {
                                    n = !0,
                                    r = e
                                } finally {
                                    try {
                                        i || null == o.return || o.return()
                                    } finally {
                                        if (n)
                                            throw r
                                    }
                                }
                            e.emit("addedfiles", t),
                            p()
                        }
                        ))
                    };
                    p()
                }
                this.URL = null !== window.URL ? window.URL : window.webkitURL;
                var f = !0
                  , m = !1
                  , v = void 0;
                try {
                    for (var y, g = this.events[Symbol.iterator](); !(f = (y = g.next()).done); f = !0) {
                        var b = y.value;
                        this.on(b, this.options[b])
                    }
                } catch (e) {
                    m = !0,
                    v = e
                } finally {
                    try {
                        f || null == g.return || g.return()
                    } finally {
                        if (m)
                            throw v
                    }
                }
                this.on("uploadprogress", (function() {
                    return e.updateTotalUploadProgress()
                }
                )),
                this.on("removedfile", (function() {
                    return t.updateTotalUploadProgress()
                }
                )),
                this.on("canceled", (function(e) {
                    return i.emit("complete", e)
                }
                )),
                this.on("complete", (function(e) {
                    var t = n;
                    if (0 === n.getAddedFiles().length && 0 === n.getUploadingFiles().length && 0 === n.getQueuedFiles().length)
                        return setTimeout((function() {
                            return t.emit("queuecomplete")
                        }
                        ), 0)
                }
                ));
                var k = function(e) {
                    if (function(e) {
                        if (e.dataTransfer.types)
                            for (var t = 0; t < e.dataTransfer.types.length; t++)
                                if ("Files" === e.dataTransfer.types[t])
                                    return !0;
                        return !1
                    }(e))
                        return e.stopPropagation(),
                        e.preventDefault ? e.preventDefault() : e.returnValue = !1
                };
                return this.listeners = [{
                    element: this.element,
                    events: {
                        dragstart: function(e) {
                            return r.emit("dragstart", e)
                        },
                        dragenter: function(e) {
                            return k(e),
                            a.emit("dragenter", e)
                        },
                        dragover: function(e) {
                            var t;
                            try {
                                t = e.dataTransfer.effectAllowed
                            } catch (e) {}
                            return e.dataTransfer.dropEffect = "move" === t || "linkMove" === t ? "move" : "copy",
                            k(e),
                            l.emit("dragover", e)
                        },
                        dragleave: function(e) {
                            return s.emit("dragleave", e)
                        },
                        drop: function(e) {
                            return k(e),
                            u.drop(e)
                        },
                        dragend: function(e) {
                            return c.emit("dragend", e)
                        }
                    }
                }],
                this.clickableElements.forEach((function(e) {
                    var t = d;
                    return d.listeners.push({
                        element: e,
                        events: {
                            click: function(i) {
                                return (e !== t.element || i.target === t.element || o.elementInside(i.target, t.element.querySelector(".dz-message"))) && t.hiddenFileInput.click(),
                                !0
                            }
                        }
                    })
                }
                )),
                this.enable(),
                this.options.init.call(this)
            }
        }, {
            key: "destroy",
            value: function() {
                return this.disable(),
                this.removeAllFiles(!0),
                (null != this.hiddenFileInput ? this.hiddenFileInput.parentNode : void 0) && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput),
                this.hiddenFileInput = null),
                delete this.element.dropzone,
                o.instances.splice(o.instances.indexOf(this), 1)
            }
        }, {
            key: "updateTotalUploadProgress",
            value: function() {
                var e, t = 0, i = 0;
                if (this.getActiveFiles().length) {
                    var n = !0
                      , r = !1
                      , a = void 0;
                    try {
                        for (var o, l = this.getActiveFiles()[Symbol.iterator](); !(n = (o = l.next()).done); n = !0) {
                            var s = o.value;
                            t += s.upload.bytesSent,
                            i += s.upload.total
                        }
                    } catch (e) {
                        r = !0,
                        a = e
                    } finally {
                        try {
                            n || null == l.return || l.return()
                        } finally {
                            if (r)
                                throw a
                        }
                    }
                    e = 100 * t / i
                } else
                    e = 100;
                return this.emit("totaluploadprogress", e, i, t)
            }
        }, {
            key: "_getParamName",
            value: function(e) {
                return "function" == typeof this.options.paramName ? this.options.paramName(e) : "".concat(this.options.paramName).concat(this.options.uploadMultiple ? "[".concat(e, "]") : "")
            }
        }, {
            key: "_renameFile",
            value: function(e) {
                return "function" != typeof this.options.renameFile ? e.name : this.options.renameFile(e)
            }
        }, {
            key: "getFallbackForm",
            value: function() {
                var e, t;
                if (e = this.getExistingFallback())
                    return e;
                var i = '<div class="dz-fallback">';
                this.options.dictFallbackText && (i += "<p>".concat(this.options.dictFallbackText, "</p>")),
                i += '<input type="file" name="'.concat(this._getParamName(0), '" ').concat(this.options.uploadMultiple ? 'multiple="multiple"' : void 0, ' /><input type="submit" value="Upload!"></div>');
                var n = o.createElement(i);
                return "FORM" !== this.element.tagName ? (t = o.createElement('<form action="'.concat(this.options.url, '" enctype="multipart/form-data" method="').concat(this.options.method, '"></form>'))).appendChild(n) : (this.element.setAttribute("enctype", "multipart/form-data"),
                this.element.setAttribute("method", this.options.method)),
                null != t ? t : n
            }
        }, {
            key: "getExistingFallback",
            value: function() {
                var e = function(e) {
                    var t = !0
                      , i = !1
                      , n = void 0;
                    try {
                        for (var r, a = e[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                            var o = r.value;
                            if (/(^| )fallback($| )/.test(o.className))
                                return o
                        }
                    } catch (e) {
                        i = !0,
                        n = e
                    } finally {
                        try {
                            t || null == a.return || a.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
                  , t = !0
                  , i = !1
                  , n = void 0;
                try {
                    for (var r, a = ["div", "form"][Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                        var o, l = r.value;
                        if (o = e(this.element.getElementsByTagName(l)))
                            return o
                    }
                } catch (e) {
                    i = !0,
                    n = e
                } finally {
                    try {
                        t || null == a.return || a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
            }
        }, {
            key: "setupEventListeners",
            value: function() {
                return this.listeners.map((function(e) {
                    return function() {
                        var t = [];
                        for (var i in e.events) {
                            var n = e.events[i];
                            t.push(e.element.addEventListener(i, n, !1))
                        }
                        return t
                    }()
                }
                ))
            }
        }, {
            key: "removeEventListeners",
            value: function() {
                return this.listeners.map((function(e) {
                    return function() {
                        var t = [];
                        for (var i in e.events) {
                            var n = e.events[i];
                            t.push(e.element.removeEventListener(i, n, !1))
                        }
                        return t
                    }()
                }
                ))
            }
        }, {
            key: "disable",
            value: function() {
                var e = this;
                return this.clickableElements.forEach((function(e) {
                    return e.classList.remove("dz-clickable")
                }
                )),
                this.removeEventListeners(),
                this.disabled = !0,
                this.files.map((function(t) {
                    return e.cancelUpload(t)
                }
                ))
            }
        }, {
            key: "enable",
            value: function() {
                return delete this.disabled,
                this.clickableElements.forEach((function(e) {
                    return e.classList.add("dz-clickable")
                }
                )),
                this.setupEventListeners()
            }
        }, {
            key: "filesize",
            value: function(e) {
                var t = 0
                  , i = "b";
                if (e > 0) {
                    for (var n = ["tb", "gb", "mb", "kb", "b"], r = 0; r < n.length; r++) {
                        var a = n[r];
                        if (e >= Math.pow(this.options.filesizeBase, 4 - r) / 10) {
                            t = e / Math.pow(this.options.filesizeBase, 4 - r),
                            i = a;
                            break
                        }
                    }
                    t = Math.round(10 * t) / 10
                }
                return "<strong>".concat(t, "</strong> ").concat(this.options.dictFileSizeUnits[i])
            }
        }, {
            key: "_updateMaxFilesReachedClass",
            value: function() {
                return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit("maxfilesreached", this.files),
                this.element.classList.add("dz-max-files-reached")) : this.element.classList.remove("dz-max-files-reached")
            }
        }, {
            key: "drop",
            value: function(e) {
                if (e.dataTransfer) {
                    this.emit("drop", e);
                    for (var t = [], i = 0; i < e.dataTransfer.files.length; i++)
                        t[i] = e.dataTransfer.files[i];
                    if (t.length) {
                        var n = e.dataTransfer.items;
                        n && n.length && null != n[0].webkitGetAsEntry ? this._addFilesFromItems(n) : this.handleFiles(t)
                    }
                    this.emit("addedfiles", t)
                }
            }
        }, {
            key: "paste",
            value: function(e) {
                if (null != (t = null != e ? e.clipboardData : void 0,
                i = function(e) {
                    return e.items
                }
                ,
                null != t ? i(t) : void 0)) {
                    var t, i;
                    this.emit("paste", e);
                    var n = e.clipboardData.items;
                    return n.length ? this._addFilesFromItems(n) : void 0
                }
            }
        }, {
            key: "handleFiles",
            value: function(e) {
                var t = !0
                  , i = !1
                  , n = void 0;
                try {
                    for (var r, a = e[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                        var o = r.value;
                        this.addFile(o)
                    }
                } catch (e) {
                    i = !0,
                    n = e
                } finally {
                    try {
                        t || null == a.return || a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
            }
        }, {
            key: "_addFilesFromItems",
            value: function(e) {
                var t = this;
                return function() {
                    var i = []
                      , n = !0
                      , r = !1
                      , a = void 0;
                    try {
                        for (var o, l = e[Symbol.iterator](); !(n = (o = l.next()).done); n = !0) {
                            var s, u = o.value;
                            null != u.webkitGetAsEntry && (s = u.webkitGetAsEntry()) ? s.isFile ? i.push(t.addFile(u.getAsFile())) : s.isDirectory ? i.push(t._addFilesFromDirectory(s, s.name)) : i.push(void 0) : null != u.getAsFile && (null == u.kind || "file" === u.kind) ? i.push(t.addFile(u.getAsFile())) : i.push(void 0)
                        }
                    } catch (e) {
                        r = !0,
                        a = e
                    } finally {
                        try {
                            n || null == l.return || l.return()
                        } finally {
                            if (r)
                                throw a
                        }
                    }
                    return i
                }()
            }
        }, {
            key: "_addFilesFromDirectory",
            value: function(e, t) {
                var i = this
                  , n = e.createReader()
                  , r = function(e) {
                    return t = console,
                    i = "log",
                    n = function(t) {
                        return t.log(e)
                    }
                    ,
                    null != t && "function" == typeof t[i] ? n(t, i) : void 0;
                    var t, i, n
                }
                  , a = function() {
                    var e = i;
                    return n.readEntries((function(i) {
                        if (i.length > 0) {
                            var n = !0
                              , r = !1
                              , o = void 0;
                            try {
                                for (var l, s = i[Symbol.iterator](); !(n = (l = s.next()).done); n = !0) {
                                    var u = l.value
                                      , c = e;
                                    u.isFile ? u.file((function(e) {
                                        if (!c.options.ignoreHiddenFiles || "." !== e.name.substring(0, 1))
                                            return e.fullPath = "".concat(t, "/").concat(e.name),
                                            c.addFile(e)
                                    }
                                    )) : u.isDirectory && e._addFilesFromDirectory(u, "".concat(t, "/").concat(u.name))
                                }
                            } catch (e) {
                                r = !0,
                                o = e
                            } finally {
                                try {
                                    n || null == s.return || s.return()
                                } finally {
                                    if (r)
                                        throw o
                                }
                            }
                            a()
                        }
                        return null
                    }
                    ), r)
                };
                return a()
            }
        }, {
            key: "accept",
            value: function(e, t) {
                this.options.maxFilesize && e.size > 1048576 * this.options.maxFilesize ? t(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(e.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize)) : o.isValidFile(e, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (t(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles)),
                this.emit("maxfilesexceeded", e)) : this.options.accept.call(this, e, t) : t(this.options.dictInvalidFileType)
            }
        }, {
            key: "addFile",
            value: function(e) {
                var t = this;
                e.upload = {
                    uuid: o.uuidv4(),
                    progress: 0,
                    total: e.size,
                    bytesSent: 0,
                    filename: this._renameFile(e)
                },
                this.files.push(e),
                e.status = o.ADDED,
                this.emit("addedfile", e),
                this._enqueueThumbnail(e),
                this.accept(e, (function(i) {
                    i ? (e.accepted = !1,
                    t._errorProcessing([e], i)) : (e.accepted = !0,
                    t.options.autoQueue && t.enqueueFile(e)),
                    t._updateMaxFilesReachedClass()
                }
                ))
            }
        }, {
            key: "enqueueFiles",
            value: function(e) {
                var t = !0
                  , i = !1
                  , n = void 0;
                try {
                    for (var r, a = e[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                        var o = r.value;
                        this.enqueueFile(o)
                    }
                } catch (e) {
                    i = !0,
                    n = e
                } finally {
                    try {
                        t || null == a.return || a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return null
            }
        }, {
            key: "enqueueFile",
            value: function(e) {
                if (e.status !== o.ADDED || !0 !== e.accepted)
                    throw new Error("This file can't be queued because it has already been processed or was rejected.");
                var t = this;
                if (e.status = o.QUEUED,
                this.options.autoProcessQueue)
                    return setTimeout((function() {
                        return t.processQueue()
                    }
                    ), 0)
            }
        }, {
            key: "_enqueueThumbnail",
            value: function(e) {
                if (this.options.createImageThumbnails && e.type.match(/image.*/) && e.size <= 1048576 * this.options.maxThumbnailFilesize) {
                    var t = this;
                    return this._thumbnailQueue.push(e),
                    setTimeout((function() {
                        return t._processThumbnailQueue()
                    }
                    ), 0)
                }
            }
        }, {
            key: "_processThumbnailQueue",
            value: function() {
                var e = this;
                if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) {
                    this._processingThumbnail = !0;
                    var t = this._thumbnailQueue.shift();
                    return this.createThumbnail(t, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, !0, (function(i) {
                        return e.emit("thumbnail", t, i),
                        e._processingThumbnail = !1,
                        e._processThumbnailQueue()
                    }
                    ))
                }
            }
        }, {
            key: "removeFile",
            value: function(e) {
                if (e.status === o.UPLOADING && this.cancelUpload(e),
                this.files = m(this.files, e),
                this.emit("removedfile", e),
                0 === this.files.length)
                    return this.emit("reset")
            }
        }, {
            key: "removeAllFiles",
            value: function(e) {
                null == e && (e = !1);
                var t = !0
                  , i = !1
                  , n = void 0;
                try {
                    for (var r, a = this.files.slice()[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                        var l = r.value;
                        (l.status !== o.UPLOADING || e) && this.removeFile(l)
                    }
                } catch (e) {
                    i = !0,
                    n = e
                } finally {
                    try {
                        t || null == a.return || a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return null
            }
        }, {
            key: "resizeImage",
            value: function(e, t, i, n, r) {
                var a = this;
                return this.createThumbnail(e, t, i, n, !0, (function(t, i) {
                    if (null == i)
                        return r(e);
                    var n = a.options.resizeMimeType;
                    null == n && (n = e.type);
                    var l = i.toDataURL(n, a.options.resizeQuality);
                    return "image/jpeg" !== n && "image/jpg" !== n || (l = g.restore(e.dataURL, l)),
                    r(o.dataURItoBlob(l))
                }
                ))
            }
        }, {
            key: "createThumbnail",
            value: function(e, t, i, n, r, a) {
                var o = this
                  , l = new FileReader;
                l.onload = function() {
                    e.dataURL = l.result,
                    "image/svg+xml" !== e.type ? o.createThumbnailFromUrl(e, t, i, n, r, a) : null != a && a(l.result)
                }
                ,
                l.readAsDataURL(e)
            }
        }, {
            key: "displayExistingFile",
            value: function(e, t, i, n, r) {
                var a = void 0 === r || r;
                if (this.emit("addedfile", e),
                this.emit("complete", e),
                a) {
                    var o = this;
                    e.dataURL = t,
                    this.createThumbnailFromUrl(e, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, (function(t) {
                        o.emit("thumbnail", e, t),
                        i && i()
                    }
                    ), n)
                } else
                    this.emit("thumbnail", e, t),
                    i && i()
            }
        }, {
            key: "createThumbnailFromUrl",
            value: function(e, t, i, n, r, a, o) {
                var l = this
                  , s = document.createElement("img");
                return o && (s.crossOrigin = o),
                r = "from-image" != getComputedStyle(document.body).imageOrientation && r,
                s.onload = function() {
                    var o = l
                      , u = function(e) {
                        return e(1)
                    };
                    return "undefined" != typeof EXIF && null !== EXIF && r && (u = function(e) {
                        return EXIF.getData(s, (function() {
                            return e(EXIF.getTag(this, "Orientation"))
                        }
                        ))
                    }
                    ),
                    u((function(r) {
                        e.width = s.width,
                        e.height = s.height;
                        var l = o.options.resize.call(o, e, t, i, n)
                          , u = document.createElement("canvas")
                          , c = u.getContext("2d");
                        switch (u.width = l.trgWidth,
                        u.height = l.trgHeight,
                        r > 4 && (u.width = l.trgHeight,
                        u.height = l.trgWidth),
                        r) {
                        case 2:
                            c.translate(u.width, 0),
                            c.scale(-1, 1);
                            break;
                        case 3:
                            c.translate(u.width, u.height),
                            c.rotate(Math.PI);
                            break;
                        case 4:
                            c.translate(0, u.height),
                            c.scale(1, -1);
                            break;
                        case 5:
                            c.rotate(.5 * Math.PI),
                            c.scale(1, -1);
                            break;
                        case 6:
                            c.rotate(.5 * Math.PI),
                            c.translate(0, -u.width);
                            break;
                        case 7:
                            c.rotate(.5 * Math.PI),
                            c.translate(u.height, -u.width),
                            c.scale(-1, 1);
                            break;
                        case 8:
                            c.rotate(-.5 * Math.PI),
                            c.translate(-u.height, 0)
                        }
                        y(c, s, null != l.srcX ? l.srcX : 0, null != l.srcY ? l.srcY : 0, l.srcWidth, l.srcHeight, null != l.trgX ? l.trgX : 0, null != l.trgY ? l.trgY : 0, l.trgWidth, l.trgHeight);
                        var d = u.toDataURL("image/png");
                        if (null != a)
                            return a(d, u)
                    }
                    ))
                }
                ,
                null != a && (s.onerror = a),
                s.src = e.dataURL
            }
        }, {
            key: "processQueue",
            value: function() {
                var e = this.options.parallelUploads
                  , t = this.getUploadingFiles().length
                  , i = t;
                if (!(t >= e)) {
                    var n = this.getQueuedFiles();
                    if (n.length > 0) {
                        if (this.options.uploadMultiple)
                            return this.processFiles(n.slice(0, e - t));
                        for (; i < e; ) {
                            if (!n.length)
                                return;
                            this.processFile(n.shift()),
                            i++
                        }
                    }
                }
            }
        }, {
            key: "processFile",
            value: function(e) {
                return this.processFiles([e])
            }
        }, {
            key: "processFiles",
            value: function(e) {
                var t = !0
                  , i = !1
                  , n = void 0;
                try {
                    for (var r, a = e[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                        var l = r.value;
                        l.processing = !0,
                        l.status = o.UPLOADING,
                        this.emit("processing", l)
                    }
                } catch (e) {
                    i = !0,
                    n = e
                } finally {
                    try {
                        t || null == a.return || a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return this.options.uploadMultiple && this.emit("processingmultiple", e),
                this.uploadFiles(e)
            }
        }, {
            key: "_getFilesWithXhr",
            value: function(e) {
                return this.files.filter((function(t) {
                    return t.xhr === e
                }
                )).map((function(e) {
                    return e
                }
                ))
            }
        }, {
            key: "cancelUpload",
            value: function(e) {
                if (e.status === o.UPLOADING) {
                    var t = this._getFilesWithXhr(e.xhr)
                      , i = !0
                      , n = !1
                      , r = void 0;
                    try {
                        for (var a, l = t[Symbol.iterator](); !(i = (a = l.next()).done); i = !0) {
                            (p = a.value).status = o.CANCELED
                        }
                    } catch (e) {
                        n = !0,
                        r = e
                    } finally {
                        try {
                            i || null == l.return || l.return()
                        } finally {
                            if (n)
                                throw r
                        }
                    }
                    void 0 !== e.xhr && e.xhr.abort();
                    var s = !0
                      , u = !1
                      , c = void 0;
                    try {
                        for (var d, h = t[Symbol.iterator](); !(s = (d = h.next()).done); s = !0) {
                            var p = d.value;
                            this.emit("canceled", p)
                        }
                    } catch (e) {
                        u = !0,
                        c = e
                    } finally {
                        try {
                            s || null == h.return || h.return()
                        } finally {
                            if (u)
                                throw c
                        }
                    }
                    this.options.uploadMultiple && this.emit("canceledmultiple", t)
                } else
                    e.status !== o.ADDED && e.status !== o.QUEUED || (e.status = o.CANCELED,
                    this.emit("canceled", e),
                    this.options.uploadMultiple && this.emit("canceledmultiple", [e]));
                if (this.options.autoProcessQueue)
                    return this.processQueue()
            }
        }, {
            key: "resolveOption",
            value: function(e) {
                for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)
                    i[n - 1] = arguments[n];
                return "function" == typeof e ? e.apply(this, i) : e
            }
        }, {
            key: "uploadFile",
            value: function(e) {
                return this.uploadFiles([e])
            }
        }, {
            key: "uploadFiles",
            value: function(e) {
                var t = this;
                this._transformFiles(e, (function(i) {
                    if (t.options.chunking) {
                        var n = i[0];
                        e[0].upload.chunked = t.options.chunking && (t.options.forceChunking || n.size > t.options.chunkSize),
                        e[0].upload.totalChunkCount = Math.ceil(n.size / t.options.chunkSize)
                    }
                    if (e[0].upload.chunked) {
                        var r = t
                          , a = t
                          , l = e[0];
                        n = i[0];
                        l.upload.chunks = [];
                        var s = function() {
                            for (var t = 0; void 0 !== l.upload.chunks[t]; )
                                t++;
                            if (!(t >= l.upload.totalChunkCount)) {
                                0;
                                var i = t * r.options.chunkSize
                                  , a = Math.min(i + r.options.chunkSize, n.size)
                                  , s = {
                                    name: r._getParamName(0),
                                    data: n.webkitSlice ? n.webkitSlice(i, a) : n.slice(i, a),
                                    filename: l.upload.filename,
                                    chunkIndex: t
                                };
                                l.upload.chunks[t] = {
                                    file: l,
                                    index: t,
                                    dataBlock: s,
                                    status: o.UPLOADING,
                                    progress: 0,
                                    retries: 0
                                },
                                r._uploadData(e, [s])
                            }
                        };
                        if (l.upload.finishedChunkUpload = function(t, i) {
                            var n = a
                              , r = !0;
                            t.status = o.SUCCESS,
                            t.dataBlock = null,
                            t.xhr = null;
                            for (var u = 0; u < l.upload.totalChunkCount; u++) {
                                if (void 0 === l.upload.chunks[u])
                                    return s();
                                l.upload.chunks[u].status !== o.SUCCESS && (r = !1)
                            }
                            r && a.options.chunksUploaded(l, (function() {
                                n._finished(e, i, null)
                            }
                            ))
                        }
                        ,
                        t.options.parallelChunkUploads)
                            for (var u = 0; u < l.upload.totalChunkCount; u++)
                                s();
                        else
                            s()
                    } else {
                        var c = [];
                        for (u = 0; u < e.length; u++)
                            c[u] = {
                                name: t._getParamName(u),
                                data: i[u],
                                filename: e[u].upload.filename
                            };
                        t._uploadData(e, c)
                    }
                }
                ))
            }
        }, {
            key: "_getChunk",
            value: function(e, t) {
                for (var i = 0; i < e.upload.totalChunkCount; i++)
                    if (void 0 !== e.upload.chunks[i] && e.upload.chunks[i].xhr === t)
                        return e.upload.chunks[i]
            }
        }, {
            key: "_uploadData",
            value: function(t, i) {
                var n = this
                  , r = this
                  , a = this
                  , o = this
                  , l = new XMLHttpRequest
                  , s = !0
                  , c = !1
                  , d = void 0;
                try {
                    for (var h, p = t[Symbol.iterator](); !(s = (h = p.next()).done); s = !0) {
                        (_ = h.value).xhr = l
                    }
                } catch (e) {
                    c = !0,
                    d = e
                } finally {
                    try {
                        s || null == p.return || p.return()
                    } finally {
                        if (c)
                            throw d
                    }
                }
                t[0].upload.chunked && (t[0].upload.chunks[i[0].chunkIndex].xhr = l);
                var f = this.resolveOption(this.options.method, t)
                  , m = this.resolveOption(this.options.url, t);
                l.open(f, m, !0),
                this.resolveOption(this.options.timeout, t) && (l.timeout = this.resolveOption(this.options.timeout, t)),
                l.withCredentials = !!this.options.withCredentials,
                l.onload = function(e) {
                    n._finishedUploading(t, l, e)
                }
                ,
                l.ontimeout = function() {
                    r._handleUploadError(t, l, "Request timedout after ".concat(r.options.timeout / 1e3, " seconds"))
                }
                ,
                l.onerror = function() {
                    a._handleUploadError(t, l)
                }
                ,
                (null != l.upload ? l.upload : l).onprogress = function(e) {
                    return o._updateFilesUploadProgress(t, l, e)
                }
                ;
                var v = {
                    Accept: "application/json",
                    "Cache-Control": "no-cache",
                    "X-Requested-With": "XMLHttpRequest"
                };
                for (var y in this.options.headers && e(u)(v, this.options.headers),
                v) {
                    var g = v[y];
                    g && l.setRequestHeader(y, g)
                }
                var b = new FormData;
                if (this.options.params) {
                    var k = this.options.params;
                    for (var w in "function" == typeof k && (k = k.call(this, t, l, t[0].upload.chunked ? this._getChunk(t[0], l) : null)),
                    k) {
                        var F = k[w];
                        if (Array.isArray(F))
                            for (var E = 0; E < F.length; E++)
                                b.append(w, F[E]);
                        else
                            b.append(w, F)
                    }
                }
                var x = !0
                  , z = !1
                  , C = void 0;
                try {
                    for (var S, A = t[Symbol.iterator](); !(x = (S = A.next()).done); x = !0) {
                        var _ = S.value;
                        this.emit("sending", _, l, b)
                    }
                } catch (e) {
                    z = !0,
                    C = e
                } finally {
                    try {
                        x || null == A.return || A.return()
                    } finally {
                        if (z)
                            throw C
                    }
                }
                this.options.uploadMultiple && this.emit("sendingmultiple", t, l, b),
                this._addFormElementData(b);
                for (E = 0; E < i.length; E++) {
                    var T = i[E];
                    b.append(T.name, T.data, T.filename)
                }
                this.submitRequest(l, b, t)
            }
        }, {
            key: "_transformFiles",
            value: function(e, t) {
                for (var i = this, n = function(n) {
                    i.options.transformFile.call(i, e[n], (function(i) {
                        r[n] = i,
                        ++a === e.length && t(r)
                    }
                    ))
                }, r = [], a = 0, o = 0; o < e.length; o++)
                    n(o)
            }
        }, {
            key: "_addFormElementData",
            value: function(e) {
                var t = !0
                  , i = !1
                  , n = void 0;
                if ("FORM" === this.element.tagName)
                    try {
                        for (var r = this.element.querySelectorAll("input, textarea, select, button")[Symbol.iterator](); !(t = (s = r.next()).done); t = !0) {
                            var a = s.value
                              , o = a.getAttribute("name")
                              , l = a.getAttribute("type");
                            if (l && (l = l.toLowerCase()),
                            null != o)
                                if ("SELECT" === a.tagName && a.hasAttribute("multiple")) {
                                    t = !0,
                                    i = !1,
                                    n = void 0;
                                    try {
                                        var s;
                                        for (r = a.options[Symbol.iterator](); !(t = (s = r.next()).done); t = !0) {
                                            var u = s.value;
                                            u.selected && e.append(o, u.value)
                                        }
                                    } catch (e) {
                                        i = !0,
                                        n = e
                                    } finally {
                                        try {
                                            t || null == r.return || r.return()
                                        } finally {
                                            if (i)
                                                throw n
                                        }
                                    }
                                } else
                                    (!l || "checkbox" !== l && "radio" !== l || a.checked) && e.append(o, a.value)
                        }
                    } catch (e) {
                        i = !0,
                        n = e
                    } finally {
                        try {
                            t || null == r.return || r.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
            }
        }, {
            key: "_updateFilesUploadProgress",
            value: function(e, t, i) {
                var n = !0
                  , r = !1
                  , a = void 0;
                if (e[0].upload.chunked) {
                    c = e[0];
                    var o = this._getChunk(c, t);
                    i ? (o.progress = 100 * i.loaded / i.total,
                    o.total = i.total,
                    o.bytesSent = i.loaded) : (o.progress = 100,
                    o.bytesSent = o.total),
                    c.upload.progress = 0,
                    c.upload.total = 0,
                    c.upload.bytesSent = 0;
                    for (var l = 0; l < c.upload.totalChunkCount; l++)
                        c.upload.chunks[l] && void 0 !== c.upload.chunks[l].progress && (c.upload.progress += c.upload.chunks[l].progress,
                        c.upload.total += c.upload.chunks[l].total,
                        c.upload.bytesSent += c.upload.chunks[l].bytesSent);
                    c.upload.progress = c.upload.progress / c.upload.totalChunkCount,
                    this.emit("uploadprogress", c, c.upload.progress, c.upload.bytesSent)
                } else
                    try {
                        for (var s, u = e[Symbol.iterator](); !(n = (s = u.next()).done); n = !0) {
                            var c;
                            (c = s.value).upload.total && c.upload.bytesSent && c.upload.bytesSent == c.upload.total || (i ? (c.upload.progress = 100 * i.loaded / i.total,
                            c.upload.total = i.total,
                            c.upload.bytesSent = i.loaded) : (c.upload.progress = 100,
                            c.upload.bytesSent = c.upload.total),
                            this.emit("uploadprogress", c, c.upload.progress, c.upload.bytesSent))
                        }
                    } catch (e) {
                        r = !0,
                        a = e
                    } finally {
                        try {
                            n || null == u.return || u.return()
                        } finally {
                            if (r)
                                throw a
                        }
                    }
            }
        }, {
            key: "_finishedUploading",
            value: function(e, t, i) {
                var n;
                if (e[0].status !== o.CANCELED && 4 === t.readyState) {
                    if ("arraybuffer" !== t.responseType && "blob" !== t.responseType && (n = t.responseText,
                    t.getResponseHeader("content-type") && ~t.getResponseHeader("content-type").indexOf("application/json")))
                        try {
                            n = JSON.parse(n)
                        } catch (e) {
                            i = e,
                            n = "Invalid JSON response from server."
                        }
                    this._updateFilesUploadProgress(e, t),
                    200 <= t.status && t.status < 300 ? e[0].upload.chunked ? e[0].upload.finishedChunkUpload(this._getChunk(e[0], t), n) : this._finished(e, n, i) : this._handleUploadError(e, t, n)
                }
            }
        }, {
            key: "_handleUploadError",
            value: function(e, t, i) {
                if (e[0].status !== o.CANCELED) {
                    if (e[0].upload.chunked && this.options.retryChunks) {
                        var n = this._getChunk(e[0], t);
                        if (n.retries++ < this.options.retryChunksLimit)
                            return void this._uploadData(e, [n.dataBlock]);
                        console.warn("Retried this chunk too often. Giving up.")
                    }
                    this._errorProcessing(e, i || this.options.dictResponseError.replace("{{statusCode}}", t.status), t)
                }
            }
        }, {
            key: "submitRequest",
            value: function(e, t, i) {
                1 == e.readyState ? e.send(t) : console.warn("Cannot send this request because the XMLHttpRequest.readyState is not OPENED.")
            }
        }, {
            key: "_finished",
            value: function(e, t, i) {
                var n = !0
                  , r = !1
                  , a = void 0;
                try {
                    for (var l, s = e[Symbol.iterator](); !(n = (l = s.next()).done); n = !0) {
                        var u = l.value;
                        u.status = o.SUCCESS,
                        this.emit("success", u, t, i),
                        this.emit("complete", u)
                    }
                } catch (e) {
                    r = !0,
                    a = e
                } finally {
                    try {
                        n || null == s.return || s.return()
                    } finally {
                        if (r)
                            throw a
                    }
                }
                if (this.options.uploadMultiple && (this.emit("successmultiple", e, t, i),
                this.emit("completemultiple", e)),
                this.options.autoProcessQueue)
                    return this.processQueue()
            }
        }, {
            key: "_errorProcessing",
            value: function(e, t, i) {
                var n = !0
                  , r = !1
                  , a = void 0;
                try {
                    for (var l, s = e[Symbol.iterator](); !(n = (l = s.next()).done); n = !0) {
                        var u = l.value;
                        u.status = o.ERROR,
                        this.emit("error", u, t, i),
                        this.emit("complete", u)
                    }
                } catch (e) {
                    r = !0,
                    a = e
                } finally {
                    try {
                        n || null == s.return || s.return()
                    } finally {
                        if (r)
                            throw a
                    }
                }
                if (this.options.uploadMultiple && (this.emit("errormultiple", e, t, i),
                this.emit("completemultiple", e)),
                this.options.autoProcessQueue)
                    return this.processQueue()
            }
        }], [{
            key: "initClass",
            value: function() {
                this.prototype.Emitter = h,
                this.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "addedfiles", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached", "queuecomplete"],
                this.prototype._thumbnailQueue = [],
                this.prototype._processingThumbnail = !1
            }
        }, {
            key: "uuidv4",
            value: function() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" === e ? t : 3 & t | 8).toString(16)
                }
                ))
            }
        }]),
        o
    }(h);
    f.initClass(),
    f.options = {},
    f.optionsForElement = function(e) {
        return e.getAttribute("id") ? f.options[v(e.getAttribute("id"))] : void 0
    }
    ,
    f.instances = [],
    f.forElement = function(e) {
        if ("string" == typeof e && (e = document.querySelector(e)),
        null == (null != e ? e.dropzone : void 0))
            throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
        return e.dropzone
    }
    ,
    f.discover = function() {
        var e;
        if (document.querySelectorAll)
            e = document.querySelectorAll(".dropzone");
        else {
            e = [];
            var t = function(t) {
                return function() {
                    var i = []
                      , n = !0
                      , r = !1
                      , a = void 0;
                    try {
                        for (var o, l = t[Symbol.iterator](); !(n = (o = l.next()).done); n = !0) {
                            var s = o.value;
                            /(^|)dropzone($|)/.test(s.className) ? i.push(e.push(s)) : i.push(void 0)
                        }
                    } catch (e) {
                        r = !0,
                        a = e
                    } finally {
                        try {
                            n || null == l.return || l.return()
                        } finally {
                            if (r)
                                throw a
                        }
                    }
                    return i
                }()
            };
            t(document.getElementsByTagName("div")),
            t(document.getElementsByTagName("form"))
        }
        return function() {
            var t = []
              , i = !0
              , n = !1
              , r = void 0;
            try {
                for (var a, o = e[Symbol.iterator](); !(i = (a = o.next()).done); i = !0) {
                    var l = a.value;
                    !1 !== f.optionsForElement(l) ? t.push(new f(l)) : t.push(void 0)
                }
            } catch (e) {
                n = !0,
                r = e
            } finally {
                try {
                    i || null == o.return || o.return()
                } finally {
                    if (n)
                        throw r
                }
            }
            return t
        }()
    }
    ,
    f.blockedBrowsers = [/opera.*(Macintosh|Windows Phone).*version\/12/i],
    f.isBrowserSupported = function() {
        var e = !0;
        if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector)
            if ("classList"in document.createElement("a")) {
                void 0 !== f.blacklistedBrowsers && (f.blockedBrowsers = f.blacklistedBrowsers);
                var t = !0
                  , i = !1
                  , n = void 0;
                try {
                    for (var r, a = f.blockedBrowsers[Symbol.iterator](); !(t = (r = a.next()).done); t = !0) {
                        r.value.test(navigator.userAgent) && (e = !1)
                    }
                } catch (e) {
                    i = !0,
                    n = e
                } finally {
                    try {
                        t || null == a.return || a.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
            } else
                e = !1;
        else
            e = !1;
        return e
    }
    ,
    f.dataURItoBlob = function(e) {
        for (var t = atob(e.split(",")[1]), i = e.split(",")[0].split(":")[1].split(";")[0], n = new ArrayBuffer(t.length), r = new Uint8Array(n), a = 0, o = t.length, l = 0 <= o; l ? a <= o : a >= o; l ? a++ : a--)
            r[a] = t.charCodeAt(a);
        return new Blob([n],{
            type: i
        })
    }
    ;
    var m = function(e, t) {
        return e.filter((function(e) {
            return e !== t
        }
        )).map((function(e) {
            return e
        }
        ))
    }
      , v = function(e) {
        return e.replace(/[\-_](\w)/g, (function(e) {
            return e.charAt(1).toUpperCase()
        }
        ))
    };
    f.createElement = function(e) {
        var t = document.createElement("div");
        return t.innerHTML = e,
        t.childNodes[0]
    }
    ,
    f.elementInside = function(e, t) {
        if (e === t)
            return !0;
        for (; e = e.parentNode; )
            if (e === t)
                return !0;
        return !1
    }
    ,
    f.getElement = function(e, t) {
        var i;
        if ("string" == typeof e ? i = document.querySelector(e) : null != e.nodeType && (i = e),
        null == i)
            throw new Error("Invalid `".concat(t, "` option provided. Please provide a CSS selector or a plain HTML element."));
        return i
    }
    ,
    f.getElements = function(e, t) {
        var i, n;
        if (e instanceof Array) {
            n = [];
            try {
                var r = !0
                  , a = !1
                  , o = void 0;
                try {
                    for (var l = e[Symbol.iterator](); !(r = (s = l.next()).done); r = !0)
                        i = s.value,
                        n.push(this.getElement(i, t))
                } catch (e) {
                    a = !0,
                    o = e
                } finally {
                    try {
                        r || null == l.return || l.return()
                    } finally {
                        if (a)
                            throw o
                    }
                }
            } catch (e) {
                n = null
            }
        } else if ("string" == typeof e) {
            n = [];
            r = !0,
            a = !1,
            o = void 0;
            try {
                var s;
                for (l = document.querySelectorAll(e)[Symbol.iterator](); !(r = (s = l.next()).done); r = !0)
                    i = s.value,
                    n.push(i)
            } catch (e) {
                a = !0,
                o = e
            } finally {
                try {
                    r || null == l.return || l.return()
                } finally {
                    if (a)
                        throw o
                }
            }
        } else
            null != e.nodeType && (n = [e]);
        if (null == n || !n.length)
            throw new Error("Invalid `".concat(t, "` option provided. Please provide a CSS selector, a plain HTML element or a list of those."));
        return n
    }
    ,
    f.confirm = function(e, t, i) {
        return window.confirm(e) ? t() : null != i ? i() : void 0
    }
    ,
    f.isValidFile = function(e, t) {
        if (!t)
            return !0;
        t = t.split(",");
        var i = e.type
          , n = i.replace(/\/.*$/, "")
          , r = !0
          , a = !1
          , o = void 0;
        try {
            for (var l, s = t[Symbol.iterator](); !(r = (l = s.next()).done); r = !0) {
                var u = l.value;
                if ("." === (u = u.trim()).charAt(0)) {
                    if (-1 !== e.name.toLowerCase().indexOf(u.toLowerCase(), e.name.length - u.length))
                        return !0
                } else if (/\/\*$/.test(u)) {
                    if (n === u.replace(/\/.*$/, ""))
                        return !0
                } else if (i === u)
                    return !0
            }
        } catch (e) {
            a = !0,
            o = e
        } finally {
            try {
                r || null == s.return || s.return()
            } finally {
                if (a)
                    throw o
            }
        }
        return !1
    }
    ,
    "undefined" != typeof jQuery && null !== jQuery && (jQuery.fn.dropzone = function(e) {
        return this.each((function() {
            return new f(this,e)
        }
        ))
    }
    ),
    f.ADDED = "added",
    f.QUEUED = "queued",
    f.ACCEPTED = f.QUEUED,
    f.UPLOADING = "uploading",
    f.PROCESSING = f.UPLOADING,
    f.CANCELED = "canceled",
    f.ERROR = "error",
    f.SUCCESS = "success";
    var y = function(e, t, i, n, r, a, o, l, s, u) {
        var c = function(e) {
            e.naturalWidth;
            var t = e.naturalHeight
              , i = document.createElement("canvas");
            i.width = 1,
            i.height = t;
            var n = i.getContext("2d");
            n.drawImage(e, 0, 0);
            for (var r = n.getImageData(1, 0, 1, t).data, a = 0, o = t, l = t; l > a; )
                0 === r[4 * (l - 1) + 3] ? o = l : a = l,
                l = o + a >> 1;
            var s = l / t;
            return 0 === s ? 1 : s
        }(t);
        return e.drawImage(t, i, n, r, a, o, l, s, u / c)
    }
      , g = function() {
        "use strict";
        function e() {
            i(this, e)
        }
        return r(e, null, [{
            key: "initClass",
            value: function() {
                this.KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
            }
        }, {
            key: "encode64",
            value: function(e) {
                for (var t = "", i = void 0, n = void 0, r = "", a = void 0, o = void 0, l = void 0, s = "", u = 0; a = (i = e[u++]) >> 2,
                o = (3 & i) << 4 | (n = e[u++]) >> 4,
                l = (15 & n) << 2 | (r = e[u++]) >> 6,
                s = 63 & r,
                isNaN(n) ? l = s = 64 : isNaN(r) && (s = 64),
                t = t + this.KEY_STR.charAt(a) + this.KEY_STR.charAt(o) + this.KEY_STR.charAt(l) + this.KEY_STR.charAt(s),
                i = n = r = "",
                a = o = l = s = "",
                u < e.length; )
                    ;
                return t
            }
        }, {
            key: "restore",
            value: function(e, t) {
                if (!e.match("data:image/jpeg;base64,"))
                    return t;
                var i = this.decode64(e.replace("data:image/jpeg;base64,", ""))
                  , n = this.slice2Segments(i)
                  , r = this.exifManipulation(t, n);
                return "data:image/jpeg;base64,".concat(this.encode64(r))
            }
        }, {
            key: "exifManipulation",
            value: function(e, t) {
                var i = this.getExifArray(t)
                  , n = this.insertExif(e, i);
                return new Uint8Array(n)
            }
        }, {
            key: "getExifArray",
            value: function(e) {
                for (var t = void 0, i = 0; i < e.length; ) {
                    if (255 === (t = e[i])[0] & 225 === t[1])
                        return t;
                    i++
                }
                return []
            }
        }, {
            key: "insertExif",
            value: function(e, t) {
                var i = e.replace("data:image/jpeg;base64,", "")
                  , n = this.decode64(i)
                  , r = n.indexOf(255, 3)
                  , a = n.slice(0, r)
                  , o = n.slice(r)
                  , l = a;
                return l = (l = l.concat(t)).concat(o)
            }
        }, {
            key: "slice2Segments",
            value: function(e) {
                for (var t = 0, i = []; ; ) {
                    if (255 === e[t] & 218 === e[t + 1])
                        break;
                    if (255 === e[t] & 216 === e[t + 1])
                        t += 2;
                    else {
                        var n = t + (256 * e[t + 2] + e[t + 3]) + 2
                          , r = e.slice(t, n);
                        i.push(r),
                        t = n
                    }
                    if (t > e.length)
                        break
                }
                return i
            }
        }, {
            key: "decode64",
            value: function(e) {
                var t = void 0
                  , i = void 0
                  , n = ""
                  , r = void 0
                  , a = void 0
                  , o = ""
                  , l = 0
                  , s = [];
                for (/[^A-Za-z0-9\+\/\=]/g.exec(e) && console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),
                e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); t = this.KEY_STR.indexOf(e.charAt(l++)) << 2 | (r = this.KEY_STR.indexOf(e.charAt(l++))) >> 4,
                i = (15 & r) << 4 | (a = this.KEY_STR.indexOf(e.charAt(l++))) >> 2,
                n = (3 & a) << 6 | (o = this.KEY_STR.indexOf(e.charAt(l++))),
                s.push(t),
                64 !== a && s.push(i),
                64 !== o && s.push(n),
                t = i = n = "",
                r = a = o = "",
                l < e.length; )
                    ;
                return s
            }
        }]),
        e
    }();
    g.initClass();
    window.Dropzone = f
}();
var events_liked = {};
function events_alert(row, opts) {
    var o = this;
    if (typeof o.premiumAlertContent == 'undefined')
        o.premiumAlertContent = '';
    var fillRow = function() {
        if (typeof row != 'object')
            return;
        jQuery.each(row, function(k, v) {
            if (typeof v == 'object') {
                jQuery.each(v, function(k2, v2) {
                    jQuery('[name="event[' + k + '][' + k2 + ']"]').val(v2);
                });
            } else {
                jQuery('[name="event[' + k + ']"]').val(v);
                if ((k == 'event_image_url') && v && (v != 'remove')) {
                    jQuery('#uploadEventImage').css('background-image', 'url(' + v + ')');
                    jQuery('.avatarEditButton').addClass('avatarHideOnNotOver');
                    jQuery('#removeEventImageBtn').show();
                }
            }
        });
        events_check_type(true);
        if (opts && opts.onposting) {
            jQuery('.events_hide_on_edit_posting').hide();
        }
        if (opts && opts.onediteventonly) {
            jQuery('.events_hide_on_edit_posting').hide();
        }
    };
    alertPremium({
        'error': 'generic',
        'mainBlocCss': 'width: 100%;',
        'texte': '<div id="premiumAlertContent" style="width: 100%">' + (o.premiumAlertContent ? o.premiumAlertContent : '<div style="text-align: center; padding: 100px 0;"><i class="fa-solid fa-spinner fa-spin fa-2xl"></i><br><br>Chargement du formulaire...</div>') + '</div>',
        'logo': 'fa-calendar-star',
        'logoStyle': 'transform: rotate(10deg);',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'btns': `
  <div class="blocpremiumBtn" id="event_visual_btn" onclick="jQuery('#events_submit_btn').click();">Enregistrer l'évènement !</div>
  <div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();">Annuler</div>
  `,
        'fctOnClose': function() {
            if (opts && opts.removeeventonclose) {
                jQuery('[name=topictype][value=4]:checked').click();
            }
            return true;
        },
        'fctAfterShown': function() {
            if (!o.premiumAlertContent) {
                jQuery.get('/nolog.eventspopup.php?rci=', function(res) {
                    o.premiumAlertContent = res;
                    jQuery('#premiumAlertContent').slideUp('slow', function() {
                        jQuery('#premiumAlertContent').html(res);
                        fillRow();
                        jQuery('#premiumAlertContent').slideDown();
                    });
                });
            }
        }
    });
    jQuery('#premiumAlertContent').data('opts', opts);
    if (o.premiumAlertContent) {
        fillRow();
    }
    gtag('event', 'event_create_open');
}
var events_alert_list_delete_id = '';
var events_alert_list_delete_id_tmp = '';
function events_alert_list(open_event_id) {
    var o = this;
    if (typeof o.premiumAlertContentList == 'undefined')
        o.premiumAlertContentList = '';
    if (typeof open_event_id == 'undefined')
        open_event_id = 0;
    o.premiumAlertContentList = '';
    var memo_events_liked = JSON.parse(JSON.stringify(events_liked));
    alertPremium({
        'error': 'generic',
        'texte': `<style>
  .bloc.blocEventPopup .blocwrapper {
   padding: 0;
  }
  .bloc.blocEventPopup {
   overflow: hidden;
   border-radius: 0.5em;
  }
  </style>` + '<div id="premiumAlertContent">' + (o.premiumAlertContentList ? o.premiumAlertContentList : '<div style="text-align: center; padding: 100px 0;"><i class="fa-solid fa-spinner fa-spin fa-2xl"></i><br><br>Chargement des évènements...</div>') + '</div>',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'notextstyle': 1,
        'mainBlocCss': 'width: 100%;',
        'btns': `<div class="blocpremiumBtn event_show_on_delete" style="display: none" onclick="closeAlertPremium(); events_alert_list_delete_id = events_alert_list_delete_id_tmp; events_alert_list();">Oui</div>` + `<div class="blocpremiumBtnSoft2 event_show_on_delete" style="display: none" onclick="jQuery('.event_show_infos,.event_actions,.event_hide_on_delete').show(); jQuery('.event_show_on_delete').hide();">Annuler</div>` + `<div class="blocpremiumBtnSoft2 event_hide_on_delete" id="events_list_btn_popup" onclick="if (jQuery('.event_show_big').length) events_alert_list_click_one(0); else closeAlertPremium(); return false;">Fermer</div>`,
        'fctOnClose': function() {
            return true;
        },
        'fctAfterShown': function() {
            if (!o.premiumAlertContentList) {
                var plusParams = '';
                if (events_alert_list_delete_id) {
                    plusParams = '&deletekey=' + events_alert_list_delete_id;
                    events_alert_list_delete_id = events_alert_list_delete_id_tmp = '';
                }
                jQuery.get('/eventslistpopup.php?rci=' + plusParams, function(res) {
                    o.premiumAlertContentList = res;
                    jQuery('#premiumAlertContent').slideUp('slow', function() {
                        jQuery('#premiumAlertContent').html(res);
                        if (open_event_id) {
                            jQuery('#event_' + open_event_id).click();
                            jQuery('#events_list_btn_popup').html('Fermer').attr('onclick', 'closeAlertPremium(); return false;');
                        }
                        jQuery('#premiumAlertContent').slideDown();
                    });
                });
            }
        }
    });
}
function events_alert_list_click_one(event_id) {
    if (!event_id) {
        jQuery('.hide_on_one_event').show();
        jQuery('#events_list_btn_popup').html('Fermer');
        jQuery('.event_show_personnes').hide();
        jQuery('.event_show_infos').show();
        jQuery('.events_list .sel').removeClass('sel');
        jQuery('.events_list .event_tabs > div:first').addClass('sel');
        jQuery('.event_show_big').removeClass('event_show_big');
        jQuery('.event_nb_persons_tab').attr('class', 'event_nb_persons_tab');
    } else {
        jQuery('.hide_on_one_event:not(#event_' + event_id + ')').hide();
        jQuery('#events_list_btn_popup').html('Retour');
        jQuery('#event_' + event_id).addClass('event_show_big');
        var oldnb = parseInt(jQuery('.event_nb_persons_' + event_id + ':first').text().split(' ')[0]);
        if ((oldnb <= 1) && jQuery('.event_nb_persons_tab').attr('suffix'))
            oldnb += ' ' + jQuery('.event_nb_persons_tab').attr('suffix');
        else if ((oldnb > 1) && jQuery('.event_nb_persons_tab').attr('suffixmulti'))
            oldnb += ' ' + jQuery('.event_nb_persons_tab').attr('suffixmulti');
        jQuery('.event_nb_persons_tab').addClass('event_nb_persons_' + event_id + '').html(oldnb);
    }
    ;jQuery('.event_tabs').toggle();
}
function events_check_show_personnes_empty() {
    var nbCurrent = parseInt(jQuery('.event_nb_persons_tab').text().split(' ')[0]);
    if (nbCurrent)
        jQuery('.event_no_user').hide();
    else
        jQuery('.event_no_user').show();
}
function events_alert_posting() {
    alertPremium({
        'error': 'generic',
        'texte': '<div id="premiumAlertContent">' + '<br>Votre événement est presque prêt !<br><div style="font-weight: 400">Remplissez le sujet et publiez-le pour finaliser sa création.</div>' + '</div>',
        'logo': 'fa-calendar-star',
        'logoStyle': 'transform: rotate(10deg);',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'btns': `
  <div class="blocpremiumBtn" id="event_visual_btn" onclick="closeAlertPremium();">Ok !</div>
  `,
    });
}
function events_alert_saved(updated) {
    alertPremium({
        'error': 'generic',
        'texte': '<div id="premiumAlertContent">' + (updated ? `<br>Les informations de votre évènement ont bien été mises à jour&nbsp;!` : `<br>Votre évènement a bien été enregistré&nbsp;!`) + '</div>',
        'logo': 'fa-calendar-star',
        'logoStyle': 'transform: rotate(10deg);',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'btns': `
  <div class="blocpremiumBtn" id="event_visual_btn" onclick="document.location.reload(); return false;">Ok !</div>
  `,
    });
}
function events_check_type(firstcall) {
    var opts = jQuery('#premiumAlertContent').data('opts');
    var t = jQuery('[name="event[event_type]"]').val();
    console.log(opts);
    if (jQuery('[name="event[event_id]"]').val() || (opts && opts.onposting))
        jQuery('#event_visual_btn').html('Mettre à jour l\'évènement');
    else
        jQuery('#event_visual_btn').html(t == 'topic' ? 'Continuer...' : 'Enregistrer l\'évènement !');
    if (firstcall) {
        jQuery('.for_event_type:not(.for_event_type_' + t + ')').hide().find('input,select,textarea').prop('disabled', 1);
        jQuery('.for_event_type_' + t).show().find('input,select,textarea').prop('disabled', 0);
    } else {
        jQuery('.for_event_type:not(.for_event_type_' + t + ')').slideUp('fast').find('input,select,textarea').prop('disabled', 1);
        jQuery('.for_event_type_' + t).slideDown('fast').find('input,select,textarea').prop('disabled', 0);
    }
}
function events_check_submit() {
    var sendWhenReady = function(croppedImage) {
        jQuery('[name="event[event_image_url]"]').val(croppedImage);
        return events_check_submit_next();
    }
    if (avatarFileType) {
        var croppedImage = avatarCropper.getCroppedCanvas({
            minWidth: 500,
            width: 500
        }).toDataURL("image/jpeg", 0.8);
        return sendWhenReady(croppedImage);
    } else {
        return sendWhenReady(jQuery('[name="event[event_image_url]"]').val());
    }
}
function events_check_submit_next() {
    var opts = jQuery('#premiumAlertContent').data('opts');
    var errors = {};
    if (!jQuery('[name="event[event_subject]"]').val().length)
        errors['event_subject'] = 'Vous devez indiquer le sujet de votre évènement';
    if (!jQuery('[name="event[event_description]"]').val().length)
        errors['event_description'] = 'Vous devez décrire votre évènement';
    var minDate = Date.parse(jQuery('[name="event[event_date]"]').attr('min'));
    var maxDate = Date.parse(jQuery('[name="event[event_date]"]').attr('max'));
    var setDate = Date.parse(jQuery('[name="event[event_date]"]').val());
    if (setDate < minDate)
        errors['event_date'] = 'Vous ne pouvez pas prévoir un évènement dans le passé';
    else if (setDate > maxDate)
        errors['event_date'] = 'Vous ne pouvez pas prévoir un évènement à plus d\'un an';
    if ((jQuery('[name="event[event_type]"]').val() == 'url') && !jQuery('[name="event[event_datas][url]"]').val().match(/https?\:\/\/.+/i)) {
        errors['event_datas][url'] = 'Vous devez indiquer l\'url associée à votre évènement';
    }
    if ((jQuery('[name="event[event_type]"]').val() == 'address') && !jQuery('[name="event[event_datas][address]"]').val()) {
        errors['event_datas][address'] = 'Vous devez indiquer l\'adresse de votre évènement';
    }
    hasError = false;
    jQuery('.event_error').remove();
    jQuery.each(errors, function(k, v) {
        hasError = true;
        var error = jQuery('<div class="event_error"></div>');
        error.html('⚠️ ' + v);
        jQuery('[name="event[' + k + ']"]').after(error);
    });
    jQuery('.event_error').fadeIn();
    if (hasError)
        return false;
    if (opts && opts.onposting) {
        var unindexed_array = jQuery('#events_form').serializeArray();
        var json = {};
        jQuery.map(unindexed_array, function(n, i) {
            var name = n['name'].substring(6, n['name'].length - 1).split('][');
            if (name[1]) {
                if (!json[name[0]])
                    json[name[0]] = {};
                json[name[0]][name[1]] = n['value'];
            } else {
                json[name[0]] = n['value'];
            }
        });
        events_draw_json(json);
        alertPremiumDatas.onClose = function() {
            return true;
        }
        ;
        closeAlertPremium();
        return false;
    }
    var params = jQuery('#events_form').serializeArray();
    if ((jQuery('[name="event[event_type]"]').val() == 'topic') && !jQuery('[name="event[event_id]"]').val()) {
        jQuery('#events_form').attr('action', '/posting.php?mode=newtopic&f=' + jQuery('[name="event[forum_id_new_topic]"]').val());
        return true;
    }
    jQuery('#events_submit_result').load('/nolog.eventspopup.php', params);
    return false;
}
function events_draw_json(json) {
    var html = jQuery('<div></div>');
    if (json.event_image_url) {
        html.append(jQuery('<div style="text-align: center;"><img src="' + json.event_image_url + '" style="width: 100%; max-width: 300px; aspect-ratio: 2; border-radius: 5px; margin-bottom: 1em;"></div>'));
    }
    json.event_date = json.event_date.replace('T', ' ');
    var d = json.event_date.split(' ')[0].split('-');
    var h = json.event_date.split(' ')[1].split(':');
    html.append('<div style="font-size: 0.9em;"><i class="fa-solid fa-calendar fa-fw"></i> Le ' + d[2] + '/' + d[1] + '/' + d[0] + ' à ' + h[0] + ':' + h[1] + '</div>');
    if (jQuery('#events_edit_button').length) {
        var vis;
        if (json.event_topic_visibility == 'blur') {
            vis = 'Contenu du sujet <b>brouillé</b> en attendant le début de l\'évènement';
        } else if (json.event_topic_visibility == 'hidden') {
            vis = 'Contenu du sujet <b>masqué</b> en attendant le début de l\'évènement';
        } else if (json.event_topic_visibility == 'visible') {
            vis = 'Contenu du sujet <b>visible</b> en attendant le début de l\'évènement';
        }
        html.append('<div style="font-size: 0.9em;"><i class="fa-solid fa-eye fa-fw"></i> ' + vis + '</div>');
    }
    var t = jQuery('<div style="font-weight: bold; margin-top: 1em;"></div>').text(json.event_subject);
    html.append(t);
    var t = jQuery('<div style="font-size: 0.9em;"></div>').text(json.event_description);
    html.append(t);
    jQuery('#posting_event_details').html('').append(html);
    var inputHidden = jQuery('<input name="event_json" type="hidden">');
    inputHidden.val(JSON.stringify(json));
    jQuery('#posting_event_details').append(inputHidden);
    posting_current_event_json = json;
}
function events_like(event_id, set, likekey) {
    showLoading();
    jQuery.post('/nolog.eventspopup.php?like=' + set + '&event_id=' + event_id + '&likekey=' + likekey, function(res) {
        hideLoading();
        if (res == "1") {
            var nb = -1;
            events_liked['event_' + event_id] = set;
            if (set == 1) {
                jQuery('#event_' + event_id + ',.event_' + event_id).addClass('event_liked');
                nb = 1;
            } else
                jQuery('#event_' + event_id + ',.event_' + event_id).removeClass('event_liked');
            jQuery('.event_nb_persons_' + event_id).each(function() {
                var oldnb = parseInt(jQuery(this).text().split(' ')[0]);
                oldnb += nb;
                if ((oldnb <= 1) && jQuery(this).attr('suffix'))
                    oldnb += ' ' + jQuery(this).attr('suffix');
                else if ((oldnb > 1) && jQuery(this).attr('suffixmulti'))
                    oldnb += ' ' + jQuery(this).attr('suffixmulti');
                jQuery(this).html(oldnb);
            });
        }
        events_check_show_personnes_empty();
    });
}
const imageUrlToBase64 = async (url) => {
    const data = await fetch(url);
    const blob = await data.blob();
    return new Promise( (resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(blob);
        reader.onloadend = () => {
            const base64data = reader.result;
            resolve(base64data);
        }
        ;
        reader.onerror = reject;
    }
    );
}
;
/*!
 * JIC JavaScript Library v2.0.2
 * https://github.com/brunobar79/J-I-C/
 *
 * Copyright 2016, Bruno Barbieri
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Date: Tue Jul 11 13:13:03 2016 -0400
 */
var jic = {
    compress: function(source_img_obj, quality, output_format) {
        var mime_type;
        if (output_format === "png") {
            mime_type = "image/png";
        } else if (output_format === "webp") {
            mime_type = "image/webp";
        } else {
            mime_type = "image/jpeg";
        }
        var cvs = document.createElement('canvas');
        cvs.width = source_img_obj.naturalWidth;
        cvs.height = source_img_obj.naturalHeight;
        var ctx = cvs.getContext("2d").drawImage(source_img_obj, 0, 0);
        var newImageData = cvs.toDataURL(mime_type, quality / 100);
        var result_image_obj = new Image();
        result_image_obj.src = newImageData;
        return result_image_obj;
    },
    upload: function(compressed_img_obj, upload_url, file_input_name, filename, successCallback, errorCallback, duringCallback, customHeaders) {
        if (XMLHttpRequest.prototype.sendAsBinary === undefined) {
            XMLHttpRequest.prototype.sendAsBinary = function(string) {
                var bytes = Array.prototype.map.call(string, function(c) {
                    return c.charCodeAt(0) & 0xff;
                });
                this.send(new Uint8Array(bytes).buffer);
            }
            ;
        }
        var type;
        if (filename.substr(-4).toLowerCase() === ".png") {
            type = "image/png";
        } else if (filename.substr(-5).toLowerCase() === ".webp") {
            type = "image/webp";
        } else {
            type = "image/jpeg";
        }
        var data = compressed_img_obj.src;
        data = data.replace('data:' + type + ';base64,', '');
        var xhr = new XMLHttpRequest();
        xhr.open('POST', upload_url, true);
        var boundary = 'someboundary';
        xhr.setRequestHeader('Content-Type', 'multipart/form-data; boundary=' + boundary);
        if (customHeaders && typeof customHeaders === "object") {
            for (var headerKey in customHeaders) {
                xhr.setRequestHeader(headerKey, customHeaders[headerKey]);
            }
        }
        if (duringCallback && duringCallback instanceof Function) {
            xhr.upload.onprogress = function(evt) {
                if (evt.lengthComputable) {
                    duringCallback((evt.loaded / evt.total) * 100);
                }
            }
            ;
        }
        xhr.sendAsBinary(['--' + boundary, 'Content-Disposition: form-data; name="' + file_input_name + '"; filename="' + filename + '"', 'Content-Type: ' + type, '', atob(data), '--' + boundary + '--'].join('\r\n'));
        xhr.onreadystatechange = function() {
            if (this.readyState == 4) {
                if (this.status == 200) {
                    successCallback(this.responseText);
                } else if (this.status >= 400) {
                    if (errorCallback && errorCallback instanceof Function) {
                        errorCallback(this.responseText);
                    }
                }
            }
        }
        ;
    }
};
var interactions = {};
interactions.clickFollow = function(o, user_id, rci, set) {
    showLoading();
    jQuery.post('/nolog.interactions.php', {
        'action': 'setFolow',
        'user_id': user_id,
        'rci': rci,
        'set': set
    }, function(res) {
        if (typeof res.type != 'undefined') {
            jQuery(o).removeClass(['status_', 'status_friend']).addClass('status_' + res.type);
        }
    }, 'json').fail(hideLoading).done(hideLoading);
}
;
var kchatim = {};
kchatim.show = function() {
    var chat = jQuery(`<div style="position: fixed; right: 10px; bottom: 25px; z-index: 90000; width: 300px; background-color: white; box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.3); border-radius: 0.7em; overflow: hidden; color: black;">
 
  <div style="background-color: rgba(0, 0, 0, 0.1); padding: 5px;">fermer</div>
  <div style="display: flex; width: 100%; ">
   <div style="width: 70px; background-color: red; overflow: auto; height: 400px;">
   Users 
   </div>
   <div style="flex: 1; display: flex; flex-direction: column">
   
    <div id="chatimconversation" style="background-color: blue; height: calc( 400px - 50px ); overflow: auto;">conversations d scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
    Users Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
    Users Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently </div>
    <div style="height: 50px;">
     <input type="text"><input type="submit">
    </div>
   </div>
  </div>
 </div>`);
    jQuery('#mainheader').prepend(chat);
}
;
function likeSubmit(datas, o) {
    jQuery(o).data('everLiked', 1);
    jQuery(o).find('i').addClass('liked');
    if (datas.choice === "false")
        jQuery(o).find('i').removeClass('fa-solid liked').addClass('fa-regular');
    else
        jQuery(o).find('i').removeClass('fa-regular').addClass('fa-solid liked');
    datas = jQuery.extend(datas, {
        'confirm': 'Oui',
        'mode': 'thanks'
    });
    showLoading();
    gtag('event', 'like');
    jQuery.ajax({
        url: '/posting.php',
        type: 'POST',
        data: datas,
        dataType: "html",
        error: function() {
            hideLoading();
        },
        success: function(html) {
            hideLoading();
            try {
                var html = html.split('<!-- DRAW_THANKS_START --><!--')[1].split('--><!-- DRAW_THANKS_STOP -->')[0];
                if (localObj = jQuery(o).parents('.votes').find('.thanks_list')) {
                    localObj.html(html);
                }
            } catch (e) {}
        }
    });
    return false;
}
function likePopup(datas, o) {
    jQuery('.autoRollUp:not(.likePopupDropdownChoiceX)').slideUp(200);
    if (jQuery(o).parent().find('.likePopupDropdown:visible').length)
        return;
    jQuery('.likePopupDropdownChoiceX').remove();
    var curchoice = jQuery(o).attr('curchoice');
    var html = jQuery(`<div class="likePopupDropdown likePopupDropdownChoiceX autoRollUp "><div style="display: flex; gap: 1px;"></div></div>`);
    var inner = html.find('div');
    jQuery.each(THANKSLIST, function(k, v) {
        var choice = jQuery('<div class="likePopupDropdownChoice' + (curchoice === k ? ' sel' : '') + '">' + v.html + '</div>');
        choice.click(function() {
            var setchoice = (curchoice === k ? 'false' : k);
            likeSubmit(jQuery.extend(datas, {
                'choice': setchoice,
                'curchoice': curchoice
            }), o);
            jQuery(o).attr('curchoice', setchoice);
        });
        inner.append(choice);
    });
    jQuery(o).parent().append(html);
    html.slideDown(100);
    event.stopPropagation();
}
function parseThanksToParse() {
    if (!XOOIT_USER_CONNECTED)
        return;
    jQuery('.thanksToParse').removeClass('thanksToParse').find('.thankIcon').click(function(event) {
        jQuery('.autoRollUp:not(.likePopupDropdown)').slideUp(200);
        if (jQuery(this).find('.likePopupDropdown:visible').length)
            return;
        jQuery('.likePopupDropdown').remove();
        var json = JSON.parse(jQuery(this).parents('.thanks_list').attr('thanksdatas'));
        var mytag = jQuery(this).attr('mytag');
        var mychoice = jQuery(this).parents('.votes').find('[curchoice]').attr('curchoice');
        var html = jQuery(`<div class="likePopupDropdown autoRollUp forceBottomOnMobile" style="z-index: 1010; right: auto; left: 0; font-size: 0.625em; ">` + `<div style="display: flex; align-items: center">` + `<div class="forIcon" style="text-align: center; font-size: 3em; line-height: 1.3em; width: 1.4em;"></div>` + `<div class="forInner" style="flex: 1; display: flex;gap: 0.3em;width: 200px;flex-direction: column;align-content: flex-start;align-items: flex-start; padding: 0.5em; max-height: 200px; overflow: auto;"></div>` + `</div>`);
        html.find('div.forIcon').html(jQuery(this).html());
        var inner = html.find('div.forInner');
        if (mychoice == mytag) {
            var myName = jQuery('<div style="font-weight: bold;"></div>');
            myName.html(USERPERMS.username_with_avatar);
            inner.append(myName);
        }
        if (json[mytag]) {
            jQuery.each(json[mytag], function(k, v) {
                inner.append('<div style="line-height: 1.2em">' + v + '</div>');
            });
        }
        jQuery(this).append(html);
        html.slideDown(100);
        event.stopPropagation();
    });
}
!function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self)["lottie-player"] = {})
}(this, (function(exports) {
    "use strict";
    function _asyncIterator(t) {
        var e, r, i, s = 2;
        for ("undefined" != typeof Symbol && (r = Symbol.asyncIterator,
        i = Symbol.iterator); s--; ) {
            if (r && null != (e = t[r]))
                return e.call(t);
            if (i && null != (e = t[i]))
                return new AsyncFromSyncIterator(e.call(t));
            r = "@@asyncIterator",
            i = "@@iterator"
        }
        throw new TypeError("Object is not async iterable")
    }
    function AsyncFromSyncIterator(t) {
        function e(t) {
            if (Object(t) !== t)
                return Promise.reject(new TypeError(t + " is not an object."));
            var e = t.done;
            return Promise.resolve(t.value).then((function(t) {
                return {
                    value: t,
                    done: e
                }
            }
            ))
        }
        return AsyncFromSyncIterator = function(t) {
            this.s = t,
            this.n = t.next
        }
        ,
        AsyncFromSyncIterator.prototype = {
            s: null,
            n: null,
            next: function() {
                return e(this.n.apply(this.s, arguments))
            },
            return: function(t) {
                var r = this.s.return;
                return void 0 === r ? Promise.resolve({
                    value: t,
                    done: !0
                }) : e(r.apply(this.s, arguments))
            },
            throw: function(t) {
                var r = this.s.return;
                return void 0 === r ? Promise.reject(t) : e(r.apply(this.s, arguments))
            }
        },
        new AsyncFromSyncIterator(t)
    }
    var REACT_ELEMENT_TYPE;
    function _jsx(t, e, r, i) {
        REACT_ELEMENT_TYPE || (REACT_ELEMENT_TYPE = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103);
        var s = t && t.defaultProps
          , a = arguments.length - 3;
        if (e || 0 === a || (e = {
            children: void 0
        }),
        1 === a)
            e.children = i;
        else if (a > 1) {
            for (var n = new Array(a), o = 0; o < a; o++)
                n[o] = arguments[o + 3];
            e.children = n
        }
        if (e && s)
            for (var h in s)
                void 0 === e[h] && (e[h] = s[h]);
        else
            e || (e = s || {});
        return {
            $$typeof: REACT_ELEMENT_TYPE,
            type: t,
            key: void 0 === r ? null : "" + r,
            ref: null,
            props: e,
            _owner: null
        }
    }
    function ownKeys(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(t);
            e && (i = i.filter((function(e) {
                return Object.getOwnPropertyDescriptor(t, e).enumerable
            }
            ))),
            r.push.apply(r, i)
        }
        return r
    }
    function _objectSpread2(t) {
        for (var e = 1; e < arguments.length; e++) {
            var r = null != arguments[e] ? arguments[e] : {};
            e % 2 ? ownKeys(Object(r), !0).forEach((function(e) {
                _defineProperty(t, e, r[e])
            }
            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : ownKeys(Object(r)).forEach((function(e) {
                Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
            }
            ))
        }
        return t
    }
    function _typeof(t) {
        return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        }
        : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
        ,
        _typeof(t)
    }
    function _wrapRegExp() {
        _wrapRegExp = function(t, e) {
            return new r(t,void 0,e)
        }
        ;
        var t = RegExp.prototype
          , e = new WeakMap;
        function r(t, i, s) {
            var a = new RegExp(t,i);
            return e.set(a, s || e.get(t)),
            _setPrototypeOf(a, r.prototype)
        }
        function i(t, r) {
            var i = e.get(r);
            return Object.keys(i).reduce((function(e, r) {
                return e[r] = t[i[r]],
                e
            }
            ), Object.create(null))
        }
        return _inherits(r, RegExp),
        r.prototype.exec = function(e) {
            var r = t.exec.call(this, e);
            return r && (r.groups = i(r, this)),
            r
        }
        ,
        r.prototype[Symbol.replace] = function(r, s) {
            if ("string" == typeof s) {
                var a = e.get(this);
                return t[Symbol.replace].call(this, r, s.replace(/\$<([^>]+)>/g, (function(t, e) {
                    return "$" + a[e]
                }
                )))
            }
            if ("function" == typeof s) {
                var n = this;
                return t[Symbol.replace].call(this, r, (function() {
                    var t = arguments;
                    return "object" != typeof t[t.length - 1] && (t = [].slice.call(t)).push(i(t, n)),
                    s.apply(this, t)
                }
                ))
            }
            return t[Symbol.replace].call(this, r, s)
        }
        ,
        _wrapRegExp.apply(this, arguments)
    }
    function _AwaitValue(t) {
        this.wrapped = t
    }
    function _AsyncGenerator(t) {
        var e, r;
        function i(e, r) {
            try {
                var a = t[e](r)
                  , n = a.value
                  , o = n instanceof _AwaitValue;
                Promise.resolve(o ? n.wrapped : n).then((function(t) {
                    o ? i("return" === e ? "return" : "next", t) : s(a.done ? "return" : "normal", t)
                }
                ), (function(t) {
                    i("throw", t)
                }
                ))
            } catch (t) {
                s("throw", t)
            }
        }
        function s(t, s) {
            switch (t) {
            case "return":
                e.resolve({
                    value: s,
                    done: !0
                });
                break;
            case "throw":
                e.reject(s);
                break;
            default:
                e.resolve({
                    value: s,
                    done: !1
                })
            }
            (e = e.next) ? i(e.key, e.arg) : r = null
        }
        this._invoke = function(t, s) {
            return new Promise((function(a, n) {
                var o = {
                    key: t,
                    arg: s,
                    resolve: a,
                    reject: n,
                    next: null
                };
                r ? r = r.next = o : (e = r = o,
                i(t, s))
            }
            ))
        }
        ,
        "function" != typeof t.return && (this.return = void 0)
    }
    function _wrapAsyncGenerator(t) {
        return function() {
            return new _AsyncGenerator(t.apply(this, arguments))
        }
    }
    function _awaitAsyncGenerator(t) {
        return new _AwaitValue(t)
    }
    function _asyncGeneratorDelegate(t, e) {
        var r = {}
          , i = !1;
        function s(r, s) {
            return i = !0,
            s = new Promise((function(e) {
                e(t[r](s))
            }
            )),
            {
                done: !1,
                value: e(s)
            }
        }
        return r["undefined" != typeof Symbol && Symbol.iterator || "@@iterator"] = function() {
            return this
        }
        ,
        r.next = function(t) {
            return i ? (i = !1,
            t) : s("next", t)
        }
        ,
        "function" == typeof t.throw && (r.throw = function(t) {
            if (i)
                throw i = !1,
                t;
            return s("throw", t)
        }
        ),
        "function" == typeof t.return && (r.return = function(t) {
            return i ? (i = !1,
            t) : s("return", t)
        }
        ),
        r
    }
    function asyncGeneratorStep(t, e, r, i, s, a, n) {
        try {
            var o = t[a](n)
              , h = o.value
        } catch (t) {
            return void r(t)
        }
        o.done ? e(h) : Promise.resolve(h).then(i, s)
    }
    function _asyncToGenerator(t) {
        return function() {
            var e = this
              , r = arguments;
            return new Promise((function(i, s) {
                var a = t.apply(e, r);
                function n(t) {
                    asyncGeneratorStep(a, i, s, n, o, "next", t)
                }
                function o(t) {
                    asyncGeneratorStep(a, i, s, n, o, "throw", t)
                }
                n(void 0)
            }
            ))
        }
    }
    function _classCallCheck(t, e) {
        if (!(t instanceof e))
            throw new TypeError("Cannot call a class as a function")
    }
    function _defineProperties(t, e) {
        for (var r = 0; r < e.length; r++) {
            var i = e[r];
            i.enumerable = i.enumerable || !1,
            i.configurable = !0,
            "value"in i && (i.writable = !0),
            Object.defineProperty(t, i.key, i)
        }
    }
    function _createClass(t, e, r) {
        return e && _defineProperties(t.prototype, e),
        r && _defineProperties(t, r),
        Object.defineProperty(t, "prototype", {
            writable: !1
        }),
        t
    }
    function _defineEnumerableProperties(t, e) {
        for (var r in e) {
            (a = e[r]).configurable = a.enumerable = !0,
            "value"in a && (a.writable = !0),
            Object.defineProperty(t, r, a)
        }
        if (Object.getOwnPropertySymbols)
            for (var i = Object.getOwnPropertySymbols(e), s = 0; s < i.length; s++) {
                var a, n = i[s];
                (a = e[n]).configurable = a.enumerable = !0,
                "value"in a && (a.writable = !0),
                Object.defineProperty(t, n, a)
            }
        return t
    }
    function _defaults(t, e) {
        for (var r = Object.getOwnPropertyNames(e), i = 0; i < r.length; i++) {
            var s = r[i]
              , a = Object.getOwnPropertyDescriptor(e, s);
            a && a.configurable && void 0 === t[s] && Object.defineProperty(t, s, a)
        }
        return t
    }
    function _defineProperty(t, e, r) {
        return e in t ? Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = r,
        t
    }
    function _extends() {
        return _extends = Object.assign || function(t) {
            for (var e = 1; e < arguments.length; e++) {
                var r = arguments[e];
                for (var i in r)
                    Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
            }
            return t
        }
        ,
        _extends.apply(this, arguments)
    }
    function _objectSpread(t) {
        for (var e = 1; e < arguments.length; e++) {
            var r = null != arguments[e] ? Object(arguments[e]) : {}
              , i = Object.keys(r);
            "function" == typeof Object.getOwnPropertySymbols && i.push.apply(i, Object.getOwnPropertySymbols(r).filter((function(t) {
                return Object.getOwnPropertyDescriptor(r, t).enumerable
            }
            ))),
            i.forEach((function(e) {
                _defineProperty(t, e, r[e])
            }
            ))
        }
        return t
    }
    function _inherits(t, e) {
        if ("function" != typeof e && null !== e)
            throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }),
        Object.defineProperty(t, "prototype", {
            writable: !1
        }),
        e && _setPrototypeOf(t, e)
    }
    function _inheritsLoose(t, e) {
        t.prototype = Object.create(e.prototype),
        t.prototype.constructor = t,
        _setPrototypeOf(t, e)
    }
    function _getPrototypeOf(t) {
        return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        }
        ,
        _getPrototypeOf(t)
    }
    function _setPrototypeOf(t, e) {
        return _setPrototypeOf = Object.setPrototypeOf || function(t, e) {
            return t.__proto__ = e,
            t
        }
        ,
        _setPrototypeOf(t, e)
    }
    function _isNativeReflectConstruct() {
        if ("undefined" == typeof Reflect || !Reflect.construct)
            return !1;
        if (Reflect.construct.sham)
            return !1;
        if ("function" == typeof Proxy)
            return !0;
        try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
            ))),
            !0
        } catch (t) {
            return !1
        }
    }
    function _construct(t, e, r) {
        return _construct = _isNativeReflectConstruct() ? Reflect.construct : function(t, e, r) {
            var i = [null];
            i.push.apply(i, e);
            var s = new (Function.bind.apply(t, i));
            return r && _setPrototypeOf(s, r.prototype),
            s
        }
        ,
        _construct.apply(null, arguments)
    }
    function _isNativeFunction(t) {
        return -1 !== Function.toString.call(t).indexOf("[native code]")
    }
    function _wrapNativeSuper(t) {
        var e = "function" == typeof Map ? new Map : void 0;
        return _wrapNativeSuper = function(t) {
            if (null === t || !_isNativeFunction(t))
                return t;
            if ("function" != typeof t)
                throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== e) {
                if (e.has(t))
                    return e.get(t);
                e.set(t, r)
            }
            function r() {
                return _construct(t, arguments, _getPrototypeOf(this).constructor)
            }
            return r.prototype = Object.create(t.prototype, {
                constructor: {
                    value: r,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            _setPrototypeOf(r, t)
        }
        ,
        _wrapNativeSuper(t)
    }
    function _instanceof(t, e) {
        return null != e && "undefined" != typeof Symbol && e[Symbol.hasInstance] ? !!e[Symbol.hasInstance](t) : t instanceof e
    }
    function _interopRequireDefault(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    function _getRequireWildcardCache(t) {
        if ("function" != typeof WeakMap)
            return null;
        var e = new WeakMap
          , r = new WeakMap;
        return (_getRequireWildcardCache = function(t) {
            return t ? r : e
        }
        )(t)
    }
    function _interopRequireWildcard(t, e) {
        if (!e && t && t.__esModule)
            return t;
        if (null === t || "object" != typeof t && "function" != typeof t)
            return {
                default: t
            };
        var r = _getRequireWildcardCache(e);
        if (r && r.has(t))
            return r.get(t);
        var i = {}
          , s = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var a in t)
            if ("default" !== a && Object.prototype.hasOwnProperty.call(t, a)) {
                var n = s ? Object.getOwnPropertyDescriptor(t, a) : null;
                n && (n.get || n.set) ? Object.defineProperty(i, a, n) : i[a] = t[a]
            }
        return i.default = t,
        r && r.set(t, i),
        i
    }
    function _newArrowCheck(t, e) {
        if (t !== e)
            throw new TypeError("Cannot instantiate an arrow function")
    }
    function _objectDestructuringEmpty(t) {
        if (null == t)
            throw new TypeError("Cannot destructure undefined")
    }
    function _objectWithoutPropertiesLoose(t, e) {
        if (null == t)
            return {};
        var r, i, s = {}, a = Object.keys(t);
        for (i = 0; i < a.length; i++)
            r = a[i],
            e.indexOf(r) >= 0 || (s[r] = t[r]);
        return s
    }
    function _objectWithoutProperties(t, e) {
        if (null == t)
            return {};
        var r, i, s = _objectWithoutPropertiesLoose(t, e);
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(t);
            for (i = 0; i < a.length; i++)
                r = a[i],
                e.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(t, r) && (s[r] = t[r])
        }
        return s
    }
    function _assertThisInitialized(t) {
        if (void 0 === t)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t
    }
    function _possibleConstructorReturn(t, e) {
        if (e && ("object" == typeof e || "function" == typeof e))
            return e;
        if (void 0 !== e)
            throw new TypeError("Derived constructors may only return object or undefined");
        return _assertThisInitialized(t)
    }
    function _createSuper(t) {
        var e = _isNativeReflectConstruct();
        return function() {
            var r, i = _getPrototypeOf(t);
            if (e) {
                var s = _getPrototypeOf(this).constructor;
                r = Reflect.construct(i, arguments, s)
            } else
                r = i.apply(this, arguments);
            return _possibleConstructorReturn(this, r)
        }
    }
    function _superPropBase(t, e) {
        for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = _getPrototypeOf(t)); )
            ;
        return t
    }
    function _get() {
        return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(t, e, r) {
            var i = _superPropBase(t, e);
            if (i) {
                var s = Object.getOwnPropertyDescriptor(i, e);
                return s.get ? s.get.call(arguments.length < 3 ? t : r) : s.value
            }
        }
        ,
        _get.apply(this, arguments)
    }
    function set(t, e, r, i) {
        return set = "undefined" != typeof Reflect && Reflect.set ? Reflect.set : function(t, e, r, i) {
            var s, a = _superPropBase(t, e);
            if (a) {
                if ((s = Object.getOwnPropertyDescriptor(a, e)).set)
                    return s.set.call(i, r),
                    !0;
                if (!s.writable)
                    return !1
            }
            if (s = Object.getOwnPropertyDescriptor(i, e)) {
                if (!s.writable)
                    return !1;
                s.value = r,
                Object.defineProperty(i, e, s)
            } else
                _defineProperty(i, e, r);
            return !0
        }
        ,
        set(t, e, r, i)
    }
    function _set(t, e, r, i, s) {
        if (!set(t, e, r, i || t) && s)
            throw new Error("failed to set property");
        return r
    }
    function _taggedTemplateLiteral(t, e) {
        return e || (e = t.slice(0)),
        Object.freeze(Object.defineProperties(t, {
            raw: {
                value: Object.freeze(e)
            }
        }))
    }
    function _taggedTemplateLiteralLoose(t, e) {
        return e || (e = t.slice(0)),
        t.raw = e,
        t
    }
    function _readOnlyError(t) {
        throw new TypeError('"' + t + '" is read-only')
    }
    function _writeOnlyError(t) {
        throw new TypeError('"' + t + '" is write-only')
    }
    function _classNameTDZError(t) {
        throw new Error('Class "' + t + '" cannot be referenced in computed property keys.')
    }
    function _temporalUndefined() {}
    function _tdz(t) {
        throw new ReferenceError(t + " is not defined - temporal dead zone")
    }
    function _temporalRef(t, e) {
        return t === _temporalUndefined ? _tdz(e) : t
    }
    function _slicedToArray(t, e) {
        return _arrayWithHoles(t) || _iterableToArrayLimit(t, e) || _unsupportedIterableToArray(t, e) || _nonIterableRest()
    }
    function _slicedToArrayLoose(t, e) {
        return _arrayWithHoles(t) || _iterableToArrayLimitLoose(t, e) || _unsupportedIterableToArray(t, e) || _nonIterableRest()
    }
    function _toArray(t) {
        return _arrayWithHoles(t) || _iterableToArray(t) || _unsupportedIterableToArray(t) || _nonIterableRest()
    }
    function _toConsumableArray(t) {
        return _arrayWithoutHoles(t) || _iterableToArray(t) || _unsupportedIterableToArray(t) || _nonIterableSpread()
    }
    function _arrayWithoutHoles(t) {
        if (Array.isArray(t))
            return _arrayLikeToArray(t)
    }
    function _arrayWithHoles(t) {
        if (Array.isArray(t))
            return t
    }
    function _maybeArrayLike(t, e, r) {
        if (e && !Array.isArray(e) && "number" == typeof e.length) {
            var i = e.length;
            return _arrayLikeToArray(e, void 0 !== r && r < i ? r : i)
        }
        return t(e, r)
    }
    function _iterableToArray(t) {
        if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"])
            return Array.from(t)
    }
    function _iterableToArrayLimit(t, e) {
        var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (null != r) {
            var i, s, a = [], n = !0, o = !1;
            try {
                for (r = r.call(t); !(n = (i = r.next()).done) && (a.push(i.value),
                !e || a.length !== e); n = !0)
                    ;
            } catch (t) {
                o = !0,
                s = t
            } finally {
                try {
                    n || null == r.return || r.return()
                } finally {
                    if (o)
                        throw s
                }
            }
            return a
        }
    }
    function _iterableToArrayLimitLoose(t, e) {
        var r = t && ("undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]);
        if (null != r) {
            var i = [];
            for (r = r.call(t),
            _step; !(_step = r.next()).done && (i.push(_step.value),
            !e || i.length !== e); )
                ;
            return i
        }
    }
    function _unsupportedIterableToArray(t, e) {
        if (t) {
            if ("string" == typeof t)
                return _arrayLikeToArray(t, e);
            var r = Object.prototype.toString.call(t).slice(8, -1);
            return "Object" === r && t.constructor && (r = t.constructor.name),
            "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(t, e) : void 0
        }
    }
    function _arrayLikeToArray(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var r = 0, i = new Array(e); r < e; r++)
            i[r] = t[r];
        return i
    }
    function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    function _createForOfIteratorHelper(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (!r) {
            if (Array.isArray(t) || (r = _unsupportedIterableToArray(t)) || e && t && "number" == typeof t.length) {
                r && (t = r);
                var i = 0
                  , s = function() {};
                return {
                    s: s,
                    n: function() {
                        return i >= t.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: t[i++]
                        }
                    },
                    e: function(t) {
                        throw t
                    },
                    f: s
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var a, n = !0, o = !1;
        return {
            s: function() {
                r = r.call(t)
            },
            n: function() {
                var t = r.next();
                return n = t.done,
                t
            },
            e: function(t) {
                o = !0,
                a = t
            },
            f: function() {
                try {
                    n || null == r.return || r.return()
                } finally {
                    if (o)
                        throw a
                }
            }
        }
    }
    function _createForOfIteratorHelperLoose(t, e) {
        var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
        if (r)
            return (r = r.call(t)).next.bind(r);
        if (Array.isArray(t) || (r = _unsupportedIterableToArray(t)) || e && t && "number" == typeof t.length) {
            r && (t = r);
            var i = 0;
            return function() {
                return i >= t.length ? {
                    done: !0
                } : {
                    done: !1,
                    value: t[i++]
                }
            }
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    function _skipFirstGeneratorNext(t) {
        return function() {
            var e = t.apply(this, arguments);
            return e.next(),
            e
        }
    }
    function _toPrimitive(t, e) {
        if ("object" != typeof t || null === t)
            return t;
        var r = t[Symbol.toPrimitive];
        if (void 0 !== r) {
            var i = r.call(t, e || "default");
            if ("object" != typeof i)
                return i;
            throw new TypeError("@@toPrimitive must return a primitive value.")
        }
        return ("string" === e ? String : Number)(t)
    }
    function _toPropertyKey(t) {
        var e = _toPrimitive(t, "string");
        return "symbol" == typeof e ? e : String(e)
    }
    function _initializerWarningHelper(t, e) {
        throw new Error("Decorating class property failed. Please ensure that proposal-class-properties is enabled and runs after the decorators transform.")
    }
    function _initializerDefineProperty(t, e, r, i) {
        r && Object.defineProperty(t, e, {
            enumerable: r.enumerable,
            configurable: r.configurable,
            writable: r.writable,
            value: r.initializer ? r.initializer.call(i) : void 0
        })
    }
    function _applyDecoratedDescriptor(t, e, r, i, s) {
        var a = {};
        return Object.keys(i).forEach((function(t) {
            a[t] = i[t]
        }
        )),
        a.enumerable = !!a.enumerable,
        a.configurable = !!a.configurable,
        ("value"in a || a.initializer) && (a.writable = !0),
        a = r.slice().reverse().reduce((function(r, i) {
            return i(t, e, r) || r
        }
        ), a),
        s && void 0 !== a.initializer && (a.value = a.initializer ? a.initializer.call(s) : void 0,
        a.initializer = void 0),
        void 0 === a.initializer && (Object.defineProperty(t, e, a),
        a = null),
        a
    }
    _AsyncGenerator.prototype["function" == typeof Symbol && Symbol.asyncIterator || "@@asyncIterator"] = function() {
        return this
    }
    ,
    _AsyncGenerator.prototype.next = function(t) {
        return this._invoke("next", t)
    }
    ,
    _AsyncGenerator.prototype.throw = function(t) {
        return this._invoke("throw", t)
    }
    ,
    _AsyncGenerator.prototype.return = function(t) {
        return this._invoke("return", t)
    }
    ;
    var id = 0;
    function _classPrivateFieldLooseKey(t) {
        return "__private_" + id++ + "_" + t
    }
    function _classPrivateFieldLooseBase(t, e) {
        if (!Object.prototype.hasOwnProperty.call(t, e))
            throw new TypeError("attempted to use private field on non-instance");
        return t
    }
    function _classPrivateFieldGet(t, e) {
        return _classApplyDescriptorGet(t, _classExtractFieldDescriptor(t, e, "get"))
    }
    function _classPrivateFieldSet(t, e, r) {
        return _classApplyDescriptorSet(t, _classExtractFieldDescriptor(t, e, "set"), r),
        r
    }
    function _classPrivateFieldDestructureSet(t, e) {
        return _classApplyDescriptorDestructureSet(t, _classExtractFieldDescriptor(t, e, "set"))
    }
    function _classExtractFieldDescriptor(t, e, r) {
        if (!e.has(t))
            throw new TypeError("attempted to " + r + " private field on non-instance");
        return e.get(t)
    }
    function _classStaticPrivateFieldSpecGet(t, e, r) {
        return _classCheckPrivateStaticAccess(t, e),
        _classCheckPrivateStaticFieldDescriptor(r, "get"),
        _classApplyDescriptorGet(t, r)
    }
    function _classStaticPrivateFieldSpecSet(t, e, r, i) {
        return _classCheckPrivateStaticAccess(t, e),
        _classCheckPrivateStaticFieldDescriptor(r, "set"),
        _classApplyDescriptorSet(t, r, i),
        i
    }
    function _classStaticPrivateMethodGet(t, e, r) {
        return _classCheckPrivateStaticAccess(t, e),
        r
    }
    function _classStaticPrivateMethodSet() {
        throw new TypeError("attempted to set read only static private field")
    }
    function _classApplyDescriptorGet(t, e) {
        return e.get ? e.get.call(t) : e.value
    }
    function _classApplyDescriptorSet(t, e, r) {
        if (e.set)
            e.set.call(t, r);
        else {
            if (!e.writable)
                throw new TypeError("attempted to set read only private field");
            e.value = r
        }
    }
    function _classApplyDescriptorDestructureSet(t, e) {
        if (e.set)
            return "__destrObj"in e || (e.__destrObj = {
                set value(r) {
                    e.set.call(t, r)
                }
            }),
            e.__destrObj;
        if (!e.writable)
            throw new TypeError("attempted to set read only private field");
        return e
    }
    function _classStaticPrivateFieldDestructureSet(t, e, r) {
        return _classCheckPrivateStaticAccess(t, e),
        _classCheckPrivateStaticFieldDescriptor(r, "set"),
        _classApplyDescriptorDestructureSet(t, r)
    }
    function _classCheckPrivateStaticAccess(t, e) {
        if (t !== e)
            throw new TypeError("Private static access of wrong provenance")
    }
    function _classCheckPrivateStaticFieldDescriptor(t, e) {
        if (void 0 === t)
            throw new TypeError("attempted to " + e + " private static field before its declaration")
    }
    function _decorate(t, e, r, i) {
        var s = _getDecoratorsApi();
        if (i)
            for (var a = 0; a < i.length; a++)
                s = i[a](s);
        var n = e((function(t) {
            s.initializeInstanceElements(t, o.elements)
        }
        ), r)
          , o = s.decorateClass(_coalesceClassElements(n.d.map(_createElementDescriptor)), t);
        return s.initializeClassElements(n.F, o.elements),
        s.runClassFinishers(n.F, o.finishers)
    }
    function _getDecoratorsApi() {
        _getDecoratorsApi = function() {
            return t
        }
        ;
        var t = {
            elementsDefinitionOrder: [["method"], ["field"]],
            initializeInstanceElements: function(t, e) {
                ["method", "field"].forEach((function(r) {
                    e.forEach((function(e) {
                        e.kind === r && "own" === e.placement && this.defineClassElement(t, e)
                    }
                    ), this)
                }
                ), this)
            },
            initializeClassElements: function(t, e) {
                var r = t.prototype;
                ["method", "field"].forEach((function(i) {
                    e.forEach((function(e) {
                        var s = e.placement;
                        if (e.kind === i && ("static" === s || "prototype" === s)) {
                            var a = "static" === s ? t : r;
                            this.defineClassElement(a, e)
                        }
                    }
                    ), this)
                }
                ), this)
            },
            defineClassElement: function(t, e) {
                var r = e.descriptor;
                if ("field" === e.kind) {
                    var i = e.initializer;
                    r = {
                        enumerable: r.enumerable,
                        writable: r.writable,
                        configurable: r.configurable,
                        value: void 0 === i ? void 0 : i.call(t)
                    }
                }
                Object.defineProperty(t, e.key, r)
            },
            decorateClass: function(t, e) {
                var r = []
                  , i = []
                  , s = {
                    static: [],
                    prototype: [],
                    own: []
                };
                if (t.forEach((function(t) {
                    this.addElementPlacement(t, s)
                }
                ), this),
                t.forEach((function(t) {
                    if (!_hasDecorators(t))
                        return r.push(t);
                    var e = this.decorateElement(t, s);
                    r.push(e.element),
                    r.push.apply(r, e.extras),
                    i.push.apply(i, e.finishers)
                }
                ), this),
                !e)
                    return {
                        elements: r,
                        finishers: i
                    };
                var a = this.decorateConstructor(r, e);
                return i.push.apply(i, a.finishers),
                a.finishers = i,
                a
            },
            addElementPlacement: function(t, e, r) {
                var i = e[t.placement];
                if (!r && -1 !== i.indexOf(t.key))
                    throw new TypeError("Duplicated element (" + t.key + ")");
                i.push(t.key)
            },
            decorateElement: function(t, e) {
                for (var r = [], i = [], s = t.decorators, a = s.length - 1; a >= 0; a--) {
                    var n = e[t.placement];
                    n.splice(n.indexOf(t.key), 1);
                    var o = this.fromElementDescriptor(t)
                      , h = this.toElementFinisherExtras((0,
                    s[a])(o) || o);
                    t = h.element,
                    this.addElementPlacement(t, e),
                    h.finisher && i.push(h.finisher);
                    var l = h.extras;
                    if (l) {
                        for (var p = 0; p < l.length; p++)
                            this.addElementPlacement(l[p], e);
                        r.push.apply(r, l)
                    }
                }
                return {
                    element: t,
                    finishers: i,
                    extras: r
                }
            },
            decorateConstructor: function(t, e) {
                for (var r = [], i = e.length - 1; i >= 0; i--) {
                    var s = this.fromClassDescriptor(t)
                      , a = this.toClassDescriptor((0,
                    e[i])(s) || s);
                    if (void 0 !== a.finisher && r.push(a.finisher),
                    void 0 !== a.elements) {
                        t = a.elements;
                        for (var n = 0; n < t.length - 1; n++)
                            for (var o = n + 1; o < t.length; o++)
                                if (t[n].key === t[o].key && t[n].placement === t[o].placement)
                                    throw new TypeError("Duplicated element (" + t[n].key + ")")
                    }
                }
                return {
                    elements: t,
                    finishers: r
                }
            },
            fromElementDescriptor: function(t) {
                var e = {
                    kind: t.kind,
                    key: t.key,
                    placement: t.placement,
                    descriptor: t.descriptor
                };
                return Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Descriptor",
                    configurable: !0
                }),
                "field" === t.kind && (e.initializer = t.initializer),
                e
            },
            toElementDescriptors: function(t) {
                if (void 0 !== t)
                    return _toArray(t).map((function(t) {
                        var e = this.toElementDescriptor(t);
                        return this.disallowProperty(t, "finisher", "An element descriptor"),
                        this.disallowProperty(t, "extras", "An element descriptor"),
                        e
                    }
                    ), this)
            },
            toElementDescriptor: function(t) {
                var e = String(t.kind);
                if ("method" !== e && "field" !== e)
                    throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "' + e + '"');
                var r = _toPropertyKey(t.key)
                  , i = String(t.placement);
                if ("static" !== i && "prototype" !== i && "own" !== i)
                    throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "' + i + '"');
                var s = t.descriptor;
                this.disallowProperty(t, "elements", "An element descriptor");
                var a = {
                    kind: e,
                    key: r,
                    placement: i,
                    descriptor: Object.assign({}, s)
                };
                return "field" !== e ? this.disallowProperty(t, "initializer", "A method descriptor") : (this.disallowProperty(s, "get", "The property descriptor of a field descriptor"),
                this.disallowProperty(s, "set", "The property descriptor of a field descriptor"),
                this.disallowProperty(s, "value", "The property descriptor of a field descriptor"),
                a.initializer = t.initializer),
                a
            },
            toElementFinisherExtras: function(t) {
                return {
                    element: this.toElementDescriptor(t),
                    finisher: _optionalCallableProperty(t, "finisher"),
                    extras: this.toElementDescriptors(t.extras)
                }
            },
            fromClassDescriptor: function(t) {
                var e = {
                    kind: "class",
                    elements: t.map(this.fromElementDescriptor, this)
                };
                return Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Descriptor",
                    configurable: !0
                }),
                e
            },
            toClassDescriptor: function(t) {
                var e = String(t.kind);
                if ("class" !== e)
                    throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "' + e + '"');
                this.disallowProperty(t, "key", "A class descriptor"),
                this.disallowProperty(t, "placement", "A class descriptor"),
                this.disallowProperty(t, "descriptor", "A class descriptor"),
                this.disallowProperty(t, "initializer", "A class descriptor"),
                this.disallowProperty(t, "extras", "A class descriptor");
                var r = _optionalCallableProperty(t, "finisher");
                return {
                    elements: this.toElementDescriptors(t.elements),
                    finisher: r
                }
            },
            runClassFinishers: function(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var i = (0,
                    e[r])(t);
                    if (void 0 !== i) {
                        if ("function" != typeof i)
                            throw new TypeError("Finishers must return a constructor.");
                        t = i
                    }
                }
                return t
            },
            disallowProperty: function(t, e, r) {
                if (void 0 !== t[e])
                    throw new TypeError(r + " can't have a ." + e + " property.")
            }
        };
        return t
    }
    function _createElementDescriptor(t) {
        var e, r = _toPropertyKey(t.key);
        "method" === t.kind ? e = {
            value: t.value,
            writable: !0,
            configurable: !0,
            enumerable: !1
        } : "get" === t.kind ? e = {
            get: t.value,
            configurable: !0,
            enumerable: !1
        } : "set" === t.kind ? e = {
            set: t.value,
            configurable: !0,
            enumerable: !1
        } : "field" === t.kind && (e = {
            configurable: !0,
            writable: !0,
            enumerable: !0
        });
        var i = {
            kind: "field" === t.kind ? "field" : "method",
            key: r,
            placement: t.static ? "static" : "field" === t.kind ? "own" : "prototype",
            descriptor: e
        };
        return t.decorators && (i.decorators = t.decorators),
        "field" === t.kind && (i.initializer = t.value),
        i
    }
    function _coalesceGetterSetter(t, e) {
        void 0 !== t.descriptor.get ? e.descriptor.get = t.descriptor.get : e.descriptor.set = t.descriptor.set
    }
    function _coalesceClassElements(t) {
        for (var e = [], r = function(t) {
            return "method" === t.kind && t.key === a.key && t.placement === a.placement
        }, i = 0; i < t.length; i++) {
            var s, a = t[i];
            if ("method" === a.kind && (s = e.find(r)))
                if (_isDataDescriptor(a.descriptor) || _isDataDescriptor(s.descriptor)) {
                    if (_hasDecorators(a) || _hasDecorators(s))
                        throw new ReferenceError("Duplicated methods (" + a.key + ") can't be decorated.");
                    s.descriptor = a.descriptor
                } else {
                    if (_hasDecorators(a)) {
                        if (_hasDecorators(s))
                            throw new ReferenceError("Decorators can't be placed on different accessors with for the same property (" + a.key + ").");
                        s.decorators = a.decorators
                    }
                    _coalesceGetterSetter(a, s)
                }
            else
                e.push(a)
        }
        return e
    }
    function _hasDecorators(t) {
        return t.decorators && t.decorators.length
    }
    function _isDataDescriptor(t) {
        return void 0 !== t && !(void 0 === t.value && void 0 === t.writable)
    }
    function _optionalCallableProperty(t, e) {
        var r = t[e];
        if (void 0 !== r && "function" != typeof r)
            throw new TypeError("Expected '" + e + "' to be a function");
        return r
    }
    function _classPrivateMethodGet(t, e, r) {
        if (!e.has(t))
            throw new TypeError("attempted to get private field on non-instance");
        return r
    }
    function _checkPrivateRedeclaration(t, e) {
        if (e.has(t))
            throw new TypeError("Cannot initialize the same private elements twice on an object")
    }
    function _classPrivateFieldInitSpec(t, e, r) {
        _checkPrivateRedeclaration(t, e),
        e.set(t, r)
    }
    function _classPrivateMethodInitSpec(t, e) {
        _checkPrivateRedeclaration(t, e),
        e.add(t)
    }
    function _classPrivateMethodSet() {
        throw new TypeError("attempted to reassign private method")
    }

    /*! *****************************************************************************
	Copyright (c) Microsoft Corporation.

	Permission to use, copy, modify, and/or distribute this software for any
	purpose with or without fee is hereby granted.

	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
	REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
	INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
	LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
	OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
	PERFORMANCE OF THIS SOFTWARE.
	***************************************************************************** */
    var _extendStatics = function(t, e) {
        return _extendStatics = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e
        }
        || function(t, e) {
            for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
        }
        ,
        _extendStatics(t, e)
    };
    function __extends(t, e) {
        if ("function" != typeof e && null !== e)
            throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
        function r() {
            this.constructor = t
        }
        _extendStatics(t, e),
        t.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype,
        new r)
    }
    var _assign = function() {
        return _assign = Object.assign || function(t) {
            for (var e, r = 1, i = arguments.length; r < i; r++)
                for (var s in e = arguments[r])
                    Object.prototype.hasOwnProperty.call(e, s) && (t[s] = e[s]);
            return t
        }
        ,
        _assign.apply(this, arguments)
    };
    function __rest(t, e) {
        var r = {};
        for (var i in t)
            Object.prototype.hasOwnProperty.call(t, i) && e.indexOf(i) < 0 && (r[i] = t[i]);
        if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
            var s = 0;
            for (i = Object.getOwnPropertySymbols(t); s < i.length; s++)
                e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, i[s]) && (r[i[s]] = t[i[s]])
        }
        return r
    }
    function __decorate(t, e, r, i) {
        var s, a = arguments.length, n = a < 3 ? e : null === i ? i = Object.getOwnPropertyDescriptor(e, r) : i;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            n = Reflect.decorate(t, e, r, i);
        else
            for (var o = t.length - 1; o >= 0; o--)
                (s = t[o]) && (n = (a < 3 ? s(n) : a > 3 ? s(e, r, n) : s(e, r)) || n);
        return a > 3 && n && Object.defineProperty(e, r, n),
        n
    }
    function __param(t, e) {
        return function(r, i) {
            e(r, i, t)
        }
    }
    function __metadata(t, e) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
            return Reflect.metadata(t, e)
    }
    function __awaiter(t, e, r, i) {
        return new (r || (r = Promise))((function(s, a) {
            function n(t) {
                try {
                    h(i.next(t))
                } catch (t) {
                    a(t)
                }
            }
            function o(t) {
                try {
                    h(i.throw(t))
                } catch (t) {
                    a(t)
                }
            }
            function h(t) {
                var e;
                t.done ? s(t.value) : (e = t.value,
                e instanceof r ? e : new r((function(t) {
                    t(e)
                }
                ))).then(n, o)
            }
            h((i = i.apply(t, e || [])).next())
        }
        ))
    }
    function __generator(t, e) {
        var r, i, s, a, n = {
            label: 0,
            sent: function() {
                if (1 & s[0])
                    throw s[1];
                return s[1]
            },
            trys: [],
            ops: []
        };
        return a = {
            next: o(0),
            throw: o(1),
            return: o(2)
        },
        "function" == typeof Symbol && (a[Symbol.iterator] = function() {
            return this
        }
        ),
        a;
        function o(a) {
            return function(o) {
                return function(a) {
                    if (r)
                        throw new TypeError("Generator is already executing.");
                    for (; n; )
                        try {
                            if (r = 1,
                            i && (s = 2 & a[0] ? i.return : a[0] ? i.throw || ((s = i.return) && s.call(i),
                            0) : i.next) && !(s = s.call(i, a[1])).done)
                                return s;
                            switch (i = 0,
                            s && (a = [2 & a[0], s.value]),
                            a[0]) {
                            case 0:
                            case 1:
                                s = a;
                                break;
                            case 4:
                                return n.label++,
                                {
                                    value: a[1],
                                    done: !1
                                };
                            case 5:
                                n.label++,
                                i = a[1],
                                a = [0];
                                continue;
                            case 7:
                                a = n.ops.pop(),
                                n.trys.pop();
                                continue;
                            default:
                                if (!(s = n.trys,
                                (s = s.length > 0 && s[s.length - 1]) || 6 !== a[0] && 2 !== a[0])) {
                                    n = 0;
                                    continue
                                }
                                if (3 === a[0] && (!s || a[1] > s[0] && a[1] < s[3])) {
                                    n.label = a[1];
                                    break
                                }
                                if (6 === a[0] && n.label < s[1]) {
                                    n.label = s[1],
                                    s = a;
                                    break
                                }
                                if (s && n.label < s[2]) {
                                    n.label = s[2],
                                    n.ops.push(a);
                                    break
                                }
                                s[2] && n.ops.pop(),
                                n.trys.pop();
                                continue
                            }
                            a = e.call(t, n)
                        } catch (t) {
                            a = [6, t],
                            i = 0
                        } finally {
                            r = s = 0
                        }
                    if (5 & a[0])
                        throw a[1];
                    return {
                        value: a[0] ? a[1] : void 0,
                        done: !0
                    }
                }([a, o])
            }
        }
    }
    var __createBinding = Object.create ? function(t, e, r, i) {
        void 0 === i && (i = r),
        Object.defineProperty(t, i, {
            enumerable: !0,
            get: function() {
                return e[r]
            }
        })
    }
    : function(t, e, r, i) {
        void 0 === i && (i = r),
        t[i] = e[r]
    }
    ;
    function __exportStar(t, e) {
        for (var r in t)
            "default" === r || Object.prototype.hasOwnProperty.call(e, r) || __createBinding(e, t, r)
    }
    function __values(t) {
        var e = "function" == typeof Symbol && Symbol.iterator
          , r = e && t[e]
          , i = 0;
        if (r)
            return r.call(t);
        if (t && "number" == typeof t.length)
            return {
                next: function() {
                    return t && i >= t.length && (t = void 0),
                    {
                        value: t && t[i++],
                        done: !t
                    }
                }
            };
        throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
    }
    function __read(t, e) {
        var r = "function" == typeof Symbol && t[Symbol.iterator];
        if (!r)
            return t;
        var i, s, a = r.call(t), n = [];
        try {
            for (; (void 0 === e || e-- > 0) && !(i = a.next()).done; )
                n.push(i.value)
        } catch (t) {
            s = {
                error: t
            }
        } finally {
            try {
                i && !i.done && (r = a.return) && r.call(a)
            } finally {
                if (s)
                    throw s.error
            }
        }
        return n
    }
    function __spread() {
        for (var t = [], e = 0; e < arguments.length; e++)
            t = t.concat(__read(arguments[e]));
        return t
    }
    function __spreadArrays() {
        for (var t = 0, e = 0, r = arguments.length; e < r; e++)
            t += arguments[e].length;
        var i = Array(t)
          , s = 0;
        for (e = 0; e < r; e++)
            for (var a = arguments[e], n = 0, o = a.length; n < o; n++,
            s++)
                i[s] = a[n];
        return i
    }
    function __spreadArray(t, e, r) {
        if (r || 2 === arguments.length)
            for (var i, s = 0, a = e.length; s < a; s++)
                !i && s in e || (i || (i = Array.prototype.slice.call(e, 0, s)),
                i[s] = e[s]);
        return t.concat(i || Array.prototype.slice.call(e))
    }
    function __await(t) {
        return this instanceof __await ? (this.v = t,
        this) : new __await(t)
    }
    function __asyncGenerator(t, e, r) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var i, s = r.apply(t, e || []), a = [];
        return i = {},
        n("next"),
        n("throw"),
        n("return"),
        i[Symbol.asyncIterator] = function() {
            return this
        }
        ,
        i;
        function n(t) {
            s[t] && (i[t] = function(e) {
                return new Promise((function(r, i) {
                    a.push([t, e, r, i]) > 1 || o(t, e)
                }
                ))
            }
            )
        }
        function o(t, e) {
            try {
                !function(t) {
                    t.value instanceof __await ? Promise.resolve(t.value.v).then(h, l) : p(a[0][2], t)
                }(s[t](e))
            } catch (t) {
                p(a[0][3], t)
            }
        }
        function h(t) {
            o("next", t)
        }
        function l(t) {
            o("throw", t)
        }
        function p(t, e) {
            t(e),
            a.shift(),
            a.length && o(a[0][0], a[0][1])
        }
    }
    function __asyncDelegator(t) {
        var e, r;
        return e = {},
        i("next"),
        i("throw", (function(t) {
            throw t
        }
        )),
        i("return"),
        e[Symbol.iterator] = function() {
            return this
        }
        ,
        e;
        function i(i, s) {
            e[i] = t[i] ? function(e) {
                return (r = !r) ? {
                    value: __await(t[i](e)),
                    done: "return" === i
                } : s ? s(e) : e
            }
            : s
        }
    }
    function __asyncValues(t) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var e, r = t[Symbol.asyncIterator];
        return r ? r.call(t) : (t = "function" == typeof __values ? __values(t) : t[Symbol.iterator](),
        e = {},
        i("next"),
        i("throw"),
        i("return"),
        e[Symbol.asyncIterator] = function() {
            return this
        }
        ,
        e);
        function i(r) {
            e[r] = t[r] && function(e) {
                return new Promise((function(i, s) {
                    (function(t, e, r, i) {
                        Promise.resolve(i).then((function(e) {
                            t({
                                value: e,
                                done: r
                            })
                        }
                        ), e)
                    }
                    )(i, s, (e = t[r](e)).done, e.value)
                }
                ))
            }
        }
    }
    function __makeTemplateObject(t, e) {
        return Object.defineProperty ? Object.defineProperty(t, "raw", {
            value: e
        }) : t.raw = e,
        t
    }
    var __setModuleDefault = Object.create ? function(t, e) {
        Object.defineProperty(t, "default", {
            enumerable: !0,
            value: e
        })
    }
    : function(t, e) {
        t.default = e
    }
    ;
    function __importStar(t) {
        if (t && t.__esModule)
            return t;
        var e = {};
        if (null != t)
            for (var r in t)
                "default" !== r && Object.prototype.hasOwnProperty.call(t, r) && __createBinding(e, t, r);
        return __setModuleDefault(e, t),
        e
    }
    function __importDefault(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    function __classPrivateFieldGet(t, e, r, i) {
        if ("a" === r && !i)
            throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof e ? t !== e || !i : !e.has(t))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? i : "a" === r ? i.call(t) : i ? i.value : e.get(t)
    }
    function __classPrivateFieldSet(t, e, r, i, s) {
        if ("m" === i)
            throw new TypeError("Private method is not writable");
        if ("a" === i && !s)
            throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof e ? t !== e || !s : !e.has(t))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === i ? s.call(t, r) : s ? s.value = r : e.set(t, r),
        r
    }
    var t$3 = window.ShadowRoot && (void 0 === window.ShadyCSS || window.ShadyCSS.nativeShadow) && "adoptedStyleSheets"in Document.prototype && "replace"in CSSStyleSheet.prototype
      , e$8 = Symbol()
      , n$5 = new Map;
    class s$3 {
        constructor(t, e) {
            if (this._$cssResult$ = !0,
            e !== e$8)
                throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
            this.cssText = t
        }
        get styleSheet() {
            var t = n$5.get(this.cssText);
            return t$3 && void 0 === t && (n$5.set(this.cssText, t = new CSSStyleSheet),
            t.replaceSync(this.cssText)),
            t
        }
        toString() {
            return this.cssText
        }
    }
    var o$5 = t => new s$3("string" == typeof t ? t : t + "",e$8), r$3 = function(t) {
        for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
            r[i - 1] = arguments[i];
        var s = 1 === t.length ? t[0] : r.reduce(( (e, r, i) => e + (t => {
            if (!0 === t._$cssResult$)
                return t.cssText;
            if ("number" == typeof t)
                return t;
            throw Error("Value passed to 'css' function must be a 'css' function result: " + t + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")
        }
        )(r) + t[i + 1]), t[0]);
        return new s$3(s,e$8)
    }, i$3 = (t, e) => {
        t$3 ? t.adoptedStyleSheets = e.map((t => t instanceof CSSStyleSheet ? t : t.styleSheet)) : e.forEach((e => {
            var r = document.createElement("style")
              , i = window.litNonce;
            void 0 !== i && r.setAttribute("nonce", i),
            r.textContent = e.cssText,
            t.appendChild(r)
        }
        ))
    }
    , S$1 = t$3 ? t => t : t => t instanceof CSSStyleSheet ? (t => {
        var e = "";
        for (var r of t.cssRules)
            e += r.cssText;
        return o$5(e)
    }
    )(t) : t, s$2, e$7 = window.trustedTypes, r$2 = e$7 ? e$7.emptyScript : "", h$2 = window.reactiveElementPolyfillSupport, o$4 = {
        toAttribute(t, e) {
            switch (e) {
            case Boolean:
                t = t ? r$2 : null;
                break;
            case Object:
            case Array:
                t = null == t ? t : JSON.stringify(t)
            }
            return t
        },
        fromAttribute(t, e) {
            var r = t;
            switch (e) {
            case Boolean:
                r = null !== t;
                break;
            case Number:
                r = null === t ? null : Number(t);
                break;
            case Object:
            case Array:
                try {
                    r = JSON.parse(t)
                } catch (t) {
                    r = null
                }
            }
            return r
        }
    }, n$4 = (t, e) => e !== t && (e == e || t == t), l$3 = {
        attribute: !0,
        type: String,
        converter: o$4,
        reflect: !1,
        hasChanged: n$4
    }, t$2;
    class a$1 extends HTMLElement {
        constructor() {
            super(),
            this._$Et = new Map,
            this.isUpdatePending = !1,
            this.hasUpdated = !1,
            this._$Ei = null,
            this.o()
        }
        static addInitializer(t) {
            var e;
            null !== (e = this.l) && void 0 !== e || (this.l = []),
            this.l.push(t)
        }
        static get observedAttributes() {
            this.finalize();
            var t = [];
            return this.elementProperties.forEach(( (e, r) => {
                var i = this._$Eh(r, e);
                void 0 !== i && (this._$Eu.set(i, r),
                t.push(i))
            }
            )),
            t
        }
        static createProperty(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : l$3;
            if (e.state && (e.attribute = !1),
            this.finalize(),
            this.elementProperties.set(t, e),
            !e.noAccessor && !this.prototype.hasOwnProperty(t)) {
                var r = "symbol" == typeof t ? Symbol() : "__" + t
                  , i = this.getPropertyDescriptor(t, r, e);
                void 0 !== i && Object.defineProperty(this.prototype, t, i)
            }
        }
        static getPropertyDescriptor(t, e, r) {
            return {
                get() {
                    return this[e]
                },
                set(i) {
                    var s = this[t];
                    this[e] = i,
                    this.requestUpdate(t, s, r)
                },
                configurable: !0,
                enumerable: !0
            }
        }
        static getPropertyOptions(t) {
            return this.elementProperties.get(t) || l$3
        }
        static finalize() {
            if (this.hasOwnProperty("finalized"))
                return !1;
            this.finalized = !0;
            var t = Object.getPrototypeOf(this);
            if (t.finalize(),
            this.elementProperties = new Map(t.elementProperties),
            this._$Eu = new Map,
            this.hasOwnProperty("properties")) {
                var e = this.properties
                  , r = [...Object.getOwnPropertyNames(e), ...Object.getOwnPropertySymbols(e)];
                for (var i of r)
                    this.createProperty(i, e[i])
            }
            return this.elementStyles = this.finalizeStyles(this.styles),
            !0
        }
        static finalizeStyles(t) {
            var e = [];
            if (Array.isArray(t)) {
                var r = new Set(t.flat(1 / 0).reverse());
                for (var i of r)
                    e.unshift(S$1(i))
            } else
                void 0 !== t && e.push(S$1(t));
            return e
        }
        static _$Eh(t, e) {
            var r = e.attribute;
            return !1 === r ? void 0 : "string" == typeof r ? r : "string" == typeof t ? t.toLowerCase() : void 0
        }
        o() {
            var t;
            this._$Ep = new Promise((t => this.enableUpdating = t)),
            this._$AL = new Map,
            this._$Em(),
            this.requestUpdate(),
            null === (t = this.constructor.l) || void 0 === t || t.forEach((t => t(this)))
        }
        addController(t) {
            var e, r;
            (null !== (e = this._$Eg) && void 0 !== e ? e : this._$Eg = []).push(t),
            void 0 !== this.renderRoot && this.isConnected && (null === (r = t.hostConnected) || void 0 === r || r.call(t))
        }
        removeController(t) {
            var e;
            null === (e = this._$Eg) || void 0 === e || e.splice(this._$Eg.indexOf(t) >>> 0, 1)
        }
        _$Em() {
            this.constructor.elementProperties.forEach(( (t, e) => {
                this.hasOwnProperty(e) && (this._$Et.set(e, this[e]),
                delete this[e])
            }
            ))
        }
        createRenderRoot() {
            var t, e = null !== (t = this.shadowRoot) && void 0 !== t ? t : this.attachShadow(this.constructor.shadowRootOptions);
            return i$3(e, this.constructor.elementStyles),
            e
        }
        connectedCallback() {
            var t;
            void 0 === this.renderRoot && (this.renderRoot = this.createRenderRoot()),
            this.enableUpdating(!0),
            null === (t = this._$Eg) || void 0 === t || t.forEach((t => {
                var e;
                return null === (e = t.hostConnected) || void 0 === e ? void 0 : e.call(t)
            }
            ))
        }
        enableUpdating(t) {}
        disconnectedCallback() {
            var t;
            null === (t = this._$Eg) || void 0 === t || t.forEach((t => {
                var e;
                return null === (e = t.hostDisconnected) || void 0 === e ? void 0 : e.call(t)
            }
            ))
        }
        attributeChangedCallback(t, e, r) {
            this._$AK(t, r)
        }
        _$ES(t, e) {
            var r, i, s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : l$3, a = this.constructor._$Eh(t, s);
            if (void 0 !== a && !0 === s.reflect) {
                var n = (null !== (i = null === (r = s.converter) || void 0 === r ? void 0 : r.toAttribute) && void 0 !== i ? i : o$4.toAttribute)(e, s.type);
                this._$Ei = t,
                null == n ? this.removeAttribute(a) : this.setAttribute(a, n),
                this._$Ei = null
            }
        }
        _$AK(t, e) {
            var r, i, s, a = this.constructor, n = a._$Eu.get(t);
            if (void 0 !== n && this._$Ei !== n) {
                var o = a.getPropertyOptions(n)
                  , h = o.converter
                  , l = null !== (s = null !== (i = null === (r = h) || void 0 === r ? void 0 : r.fromAttribute) && void 0 !== i ? i : "function" == typeof h ? h : null) && void 0 !== s ? s : o$4.fromAttribute;
                this._$Ei = n,
                this[n] = l(e, o.type),
                this._$Ei = null
            }
        }
        requestUpdate(t, e, r) {
            var i = !0;
            void 0 !== t && (((r = r || this.constructor.getPropertyOptions(t)).hasChanged || n$4)(this[t], e) ? (this._$AL.has(t) || this._$AL.set(t, e),
            !0 === r.reflect && this._$Ei !== t && (void 0 === this._$E_ && (this._$E_ = new Map),
            this._$E_.set(t, r))) : i = !1),
            !this.isUpdatePending && i && (this._$Ep = this._$EC())
        }
        _$EC() {
            var t = this;
            return _asyncToGenerator((function*() {
                t.isUpdatePending = !0;
                try {
                    yield t._$Ep
                } catch (e) {
                    Promise.reject(e)
                }
                var e = t.scheduleUpdate();
                return null != e && (yield e),
                !t.isUpdatePending
            }
            ))()
        }
        scheduleUpdate() {
            return this.performUpdate()
        }
        performUpdate() {
            var t;
            if (this.isUpdatePending) {
                this.hasUpdated,
                this._$Et && (this._$Et.forEach(( (t, e) => this[e] = t)),
                this._$Et = void 0);
                var e = !1
                  , r = this._$AL;
                try {
                    (e = this.shouldUpdate(r)) ? (this.willUpdate(r),
                    null === (t = this._$Eg) || void 0 === t || t.forEach((t => {
                        var e;
                        return null === (e = t.hostUpdate) || void 0 === e ? void 0 : e.call(t)
                    }
                    )),
                    this.update(r)) : this._$EU()
                } catch (t) {
                    throw e = !1,
                    this._$EU(),
                    t
                }
                e && this._$AE(r)
            }
        }
        willUpdate(t) {}
        _$AE(t) {
            var e;
            null === (e = this._$Eg) || void 0 === e || e.forEach((t => {
                var e;
                return null === (e = t.hostUpdated) || void 0 === e ? void 0 : e.call(t)
            }
            )),
            this.hasUpdated || (this.hasUpdated = !0,
            this.firstUpdated(t)),
            this.updated(t)
        }
        _$EU() {
            this._$AL = new Map,
            this.isUpdatePending = !1
        }
        get updateComplete() {
            return this.getUpdateComplete()
        }
        getUpdateComplete() {
            return this._$Ep
        }
        shouldUpdate(t) {
            return !0
        }
        update(t) {
            void 0 !== this._$E_ && (this._$E_.forEach(( (t, e) => this._$ES(e, this[e], t))),
            this._$E_ = void 0),
            this._$EU()
        }
        updated(t) {}
        firstUpdated(t) {}
    }
    a$1.finalized = !0,
    a$1.elementProperties = new Map,
    a$1.elementStyles = [],
    a$1.shadowRootOptions = {
        mode: "open"
    },
    null == h$2 || h$2({
        ReactiveElement: a$1
    }),
    (null !== (s$2 = globalThis.reactiveElementVersions) && void 0 !== s$2 ? s$2 : globalThis.reactiveElementVersions = []).push("1.2.1");
    var i$2 = globalThis.trustedTypes
      , s$1 = i$2 ? i$2.createPolicy("lit-html", {
        createHTML: t => t
    }) : void 0
      , e$6 = "lit$".concat((Math.random() + "").slice(9), "$")
      , o$3 = "?" + e$6
      , n$3 = "<".concat(o$3, ">")
      , l$2 = document
      , h$1 = function() {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        return l$2.createComment(t)
    }
      , r$1 = t => null === t || "object" != typeof t && "function" != typeof t
      , d = Array.isArray
      , u = t => {
        var e;
        return d(t) || "function" == typeof (null === (e = t) || void 0 === e ? void 0 : e[Symbol.iterator])
    }
      , c = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g
      , v = /-->/g
      , a = />/g
      , f = />|[  \n \r](?:([^\s"'>=/]+)([\n\r]*=[\n\r]*(?:[^\n\r"'`<>=]|("|')|))|$)/g
      , _ = /'/g
      , m = /"/g
      , g = /^(?:script|style|textarea)$/i
      , p = t => function(e) {
        for (var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
            i[s - 1] = arguments[s];
        return {
            _$litType$: t,
            strings: e,
            values: i
        }
    }
      , $ = p(1)
      , y = p(2)
      , b = Symbol.for("lit-noChange")
      , w = Symbol.for("lit-nothing")
      , T = new WeakMap
      , x = (t, e, r) => {
        var i, s, a = null !== (i = null == r ? void 0 : r.renderBefore) && void 0 !== i ? i : e, n = a._$litPart$;
        if (void 0 === n) {
            var o = null !== (s = null == r ? void 0 : r.renderBefore) && void 0 !== s ? s : null;
            a._$litPart$ = n = new N(e.insertBefore(h$1(), o),o,void 0,null != r ? r : {})
        }
        return n._$AI(t),
        n
    }
      , A = l$2.createTreeWalker(l$2, 129, null, !1)
      , C = (t, e) => {
        for (var r, i = t.length - 1, s = [], n = 2 === e ? "<svg>" : "", o = c, h = 0; h < i; h++) {
            for (var l = t[h], p = void 0, u = void 0, d = -1, y = 0; y < l.length && (o.lastIndex = y,
            null !== (u = o.exec(l))); )
                y = o.lastIndex,
                o === c ? "!--" === u[1] ? o = v : void 0 !== u[1] ? o = a : void 0 !== u[2] ? (g.test(u[2]) && (r = RegExp("</" + u[2], "g")),
                o = f) : void 0 !== u[3] && (o = f) : o === f ? ">" === u[0] ? (o = null != r ? r : c,
                d = -1) : void 0 === u[1] ? d = -2 : (d = o.lastIndex - u[2].length,
                p = u[1],
                o = void 0 === u[3] ? f : '"' === u[3] ? m : _) : o === m || o === _ ? o = f : o === v || o === a ? o = c : (o = f,
                r = void 0);
            var b = o === f && t[h + 1].startsWith("/>") ? " " : "";
            n += o === c ? l + n$3 : d >= 0 ? (s.push(p),
            l.slice(0, d) + "$lit$" + l.slice(d) + e$6 + b) : l + e$6 + (-2 === d ? (s.push(void 0),
            h) : b)
        }
        var P = n + (t[i] || "<?>") + (2 === e ? "</svg>" : "");
        if (!Array.isArray(t) || !t.hasOwnProperty("raw"))
            throw Error("invalid template strings array");
        return [void 0 !== s$1 ? s$1.createHTML(P) : P, s]
    }
    ;
    class E {
        constructor(t, e) {
            var r, {strings: i, _$litType$: s} = t;
            this.parts = [];
            var a = 0
              , n = 0
              , o = i.length - 1
              , h = this.parts
              , [l,p] = C(i, s);
            if (this.el = E.createElement(l, e),
            A.currentNode = this.el.content,
            2 === s) {
                var c = this.el.content
                  , f = c.firstChild;
                f.remove(),
                c.append(...f.childNodes)
            }
            for (; null !== (r = A.nextNode()) && h.length < o; ) {
                if (1 === r.nodeType) {
                    if (r.hasAttributes()) {
                        var u = [];
                        for (var d of r.getAttributeNames())
                            if (d.endsWith("$lit$") || d.startsWith(e$6)) {
                                var m = p[n++];
                                if (u.push(d),
                                void 0 !== m) {
                                    var y = r.getAttribute(m.toLowerCase() + "$lit$").split(e$6)
                                      , v = /([.?@])?(.*)/.exec(m);
                                    h.push({
                                        type: 1,
                                        index: a,
                                        name: v[2],
                                        strings: y,
                                        ctor: "." === v[1] ? M : "?" === v[1] ? H : "@" === v[1] ? I : S
                                    })
                                } else
                                    h.push({
                                        type: 6,
                                        index: a
                                    })
                            }
                        for (var b of u)
                            r.removeAttribute(b)
                    }
                    if (g.test(r.tagName)) {
                        var _ = r.textContent.split(e$6)
                          , P = _.length - 1;
                        if (P > 0) {
                            r.textContent = i$2 ? i$2.emptyScript : "";
                            for (var x = 0; x < P; x++)
                                r.append(_[x], h$1()),
                                A.nextNode(),
                                h.push({
                                    type: 2,
                                    index: ++a
                                });
                            r.append(_[P], h$1())
                        }
                    }
                } else if (8 === r.nodeType)
                    if (r.data === o$3)
                        h.push({
                            type: 2,
                            index: a
                        });
                    else
                        for (var w = -1; -1 !== (w = r.data.indexOf(e$6, w + 1)); )
                            h.push({
                                type: 7,
                                index: a
                            }),
                            w += e$6.length - 1;
                a++
            }
        }
        static createElement(t, e) {
            var r = l$2.createElement("template");
            return r.innerHTML = t,
            r
        }
    }
    function P(t, e) {
        var r, i, s, a, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t, o = arguments.length > 3 ? arguments[3] : void 0;
        if (e === b)
            return e;
        var h = void 0 !== o ? null === (r = n._$Cl) || void 0 === r ? void 0 : r[o] : n._$Cu
          , l = r$1(e) ? void 0 : e._$litDirective$;
        return (null == h ? void 0 : h.constructor) !== l && (null === (i = null == h ? void 0 : h._$AO) || void 0 === i || i.call(h, !1),
        void 0 === l ? h = void 0 : (h = new l(t))._$AT(t, n, o),
        void 0 !== o ? (null !== (s = (a = n)._$Cl) && void 0 !== s ? s : a._$Cl = [])[o] = h : n._$Cu = h),
        void 0 !== h && (e = P(t, h._$AS(t, e.values), h, o)),
        e
    }
    class V {
        constructor(t, e) {
            this.v = [],
            this._$AN = void 0,
            this._$AD = t,
            this._$AM = e
        }
        get parentNode() {
            return this._$AM.parentNode
        }
        get _$AU() {
            return this._$AM._$AU
        }
        p(t) {
            var e, {el: {content: r}, parts: i} = this._$AD, s = (null !== (e = null == t ? void 0 : t.creationScope) && void 0 !== e ? e : l$2).importNode(r, !0);
            A.currentNode = s;
            for (var a = A.nextNode(), n = 0, o = 0, h = i[0]; void 0 !== h; ) {
                if (n === h.index) {
                    var l = void 0;
                    2 === h.type ? l = new N(a,a.nextSibling,this,t) : 1 === h.type ? l = new h.ctor(a,h.name,h.strings,this,t) : 6 === h.type && (l = new L(a,this,t)),
                    this.v.push(l),
                    h = i[++o]
                }
                n !== (null == h ? void 0 : h.index) && (a = A.nextNode(),
                n++)
            }
            return s
        }
        m(t) {
            var e = 0;
            for (var r of this.v)
                void 0 !== r && (void 0 !== r.strings ? (r._$AI(t, r, e),
                e += r.strings.length - 2) : r._$AI(t[e])),
                e++
        }
    }
    class N {
        constructor(t, e, r, i) {
            var s;
            this.type = 2,
            this._$AH = w,
            this._$AN = void 0,
            this._$AA = t,
            this._$AB = e,
            this._$AM = r,
            this.options = i,
            this._$Cg = null === (s = null == i ? void 0 : i.isConnected) || void 0 === s || s
        }
        get _$AU() {
            var t, e;
            return null !== (e = null === (t = this._$AM) || void 0 === t ? void 0 : t._$AU) && void 0 !== e ? e : this._$Cg
        }
        get parentNode() {
            var t = this._$AA.parentNode
              , e = this._$AM;
            return void 0 !== e && 11 === t.nodeType && (t = e.parentNode),
            t
        }
        get startNode() {
            return this._$AA
        }
        get endNode() {
            return this._$AB
        }
        _$AI(t) {
            t = P(this, t, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this),
            r$1(t) ? t === w || null == t || "" === t ? (this._$AH !== w && this._$AR(),
            this._$AH = w) : t !== this._$AH && t !== b && this.$(t) : void 0 !== t._$litType$ ? this.T(t) : void 0 !== t.nodeType ? this.S(t) : u(t) ? this.A(t) : this.$(t)
        }
        M(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._$AB;
            return this._$AA.parentNode.insertBefore(t, e)
        }
        S(t) {
            this._$AH !== t && (this._$AR(),
            this._$AH = this.M(t))
        }
        $(t) {
            this._$AH !== w && r$1(this._$AH) ? this._$AA.nextSibling.data = t : this.S(l$2.createTextNode(t)),
            this._$AH = t
        }
        T(t) {
            var e, {values: r, _$litType$: i} = t, s = "number" == typeof i ? this._$AC(t) : (void 0 === i.el && (i.el = E.createElement(i.h, this.options)),
            i);
            if ((null === (e = this._$AH) || void 0 === e ? void 0 : e._$AD) === s)
                this._$AH.m(r);
            else {
                var a = new V(s,this)
                  , n = a.p(this.options);
                a.m(r),
                this.S(n),
                this._$AH = a
            }
        }
        _$AC(t) {
            var e = T.get(t.strings);
            return void 0 === e && T.set(t.strings, e = new E(t)),
            e
        }
        A(t) {
            d(this._$AH) || (this._$AH = [],
            this._$AR());
            var e, r = this._$AH, i = 0;
            for (var s of t)
                i === r.length ? r.push(e = new N(this.M(h$1()),this.M(h$1()),this,this.options)) : e = r[i],
                e._$AI(s),
                i++;
            i < r.length && (this._$AR(e && e._$AB.nextSibling, i),
            r.length = i)
        }
        _$AR() {
            var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._$AA.nextSibling, r = arguments.length > 1 ? arguments[1] : void 0;
            for (null === (t = this._$AP) || void 0 === t || t.call(this, !1, !0, r); e && e !== this._$AB; ) {
                var i = e.nextSibling;
                e.remove(),
                e = i
            }
        }
        setConnected(t) {
            var e;
            void 0 === this._$AM && (this._$Cg = t,
            null === (e = this._$AP) || void 0 === e || e.call(this, t))
        }
    }
    class S {
        constructor(t, e, r, i, s) {
            this.type = 1,
            this._$AH = w,
            this._$AN = void 0,
            this.element = t,
            this.name = e,
            this._$AM = i,
            this.options = s,
            r.length > 2 || "" !== r[0] || "" !== r[1] ? (this._$AH = Array(r.length - 1).fill(new String),
            this.strings = r) : this._$AH = w
        }
        get tagName() {
            return this.element.tagName
        }
        get _$AU() {
            return this._$AM._$AU
        }
        _$AI(t) {
            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this
              , r = arguments.length > 2 ? arguments[2] : void 0
              , i = arguments.length > 3 ? arguments[3] : void 0
              , s = this.strings
              , a = !1;
            if (void 0 === s)
                t = P(this, t, e, 0),
                (a = !r$1(t) || t !== this._$AH && t !== b) && (this._$AH = t);
            else {
                var n, o, h = t;
                for (t = s[0],
                n = 0; n < s.length - 1; n++)
                    (o = P(this, h[r + n], e, n)) === b && (o = this._$AH[n]),
                    a || (a = !r$1(o) || o !== this._$AH[n]),
                    o === w ? t = w : t !== w && (t += (null != o ? o : "") + s[n + 1]),
                    this._$AH[n] = o
            }
            a && !i && this.k(t)
        }
        k(t) {
            t === w ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, null != t ? t : "")
        }
    }
    class M extends S {
        constructor() {
            super(...arguments),
            this.type = 3
        }
        k(t) {
            this.element[this.name] = t === w ? void 0 : t
        }
    }
    var k = i$2 ? i$2.emptyScript : "";
    class H extends S {
        constructor() {
            super(...arguments),
            this.type = 4
        }
        k(t) {
            t && t !== w ? this.element.setAttribute(this.name, k) : this.element.removeAttribute(this.name)
        }
    }
    class I extends S {
        constructor(t, e, r, i, s) {
            super(t, e, r, i, s),
            this.type = 5
        }
        _$AI(t) {
            var e;
            if ((t = null !== (e = P(this, t, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this, 0)) && void 0 !== e ? e : w) !== b) {
                var r = this._$AH
                  , i = t === w && r !== w || t.capture !== r.capture || t.once !== r.once || t.passive !== r.passive
                  , s = t !== w && (r === w || i);
                i && this.element.removeEventListener(this.name, this, r),
                s && this.element.addEventListener(this.name, this, t),
                this._$AH = t
            }
        }
        handleEvent(t) {
            var e, r;
            "function" == typeof this._$AH ? this._$AH.call(null !== (r = null === (e = this.options) || void 0 === e ? void 0 : e.host) && void 0 !== r ? r : this.element, t) : this._$AH.handleEvent(t)
        }
    }
    class L {
        constructor(t, e, r) {
            this.element = t,
            this.type = 6,
            this._$AN = void 0,
            this._$AM = e,
            this.options = r
        }
        get _$AU() {
            return this._$AM._$AU
        }
        _$AI(t) {
            P(this, t)
        }
    }
    var R = {
        P: "$lit$",
        V: e$6,
        L: o$3,
        I: 1,
        N: C,
        R: V,
        D: u,
        j: P,
        H: N,
        O: S,
        F: H,
        B: I,
        W: M,
        Z: L
    }, z = window.litHtmlPolyfillSupport, l$1, o$2;
    null == z || z(E, N),
    (null !== (t$2 = globalThis.litHtmlVersions) && void 0 !== t$2 ? t$2 : globalThis.litHtmlVersions = []).push("2.1.2");
    var r = a$1;
    class s extends a$1 {
        constructor() {
            super(...arguments),
            this.renderOptions = {
                host: this
            },
            this._$Dt = void 0
        }
        createRenderRoot() {
            var t, e, r = super.createRenderRoot();
            return null !== (t = (e = this.renderOptions).renderBefore) && void 0 !== t || (e.renderBefore = r.firstChild),
            r
        }
        update(t) {
            var e = this.render();
            this.hasUpdated || (this.renderOptions.isConnected = this.isConnected),
            super.update(t),
            this._$Dt = x(e, this.renderRoot, this.renderOptions)
        }
        connectedCallback() {
            var t;
            super.connectedCallback(),
            null === (t = this._$Dt) || void 0 === t || t.setConnected(!0)
        }
        disconnectedCallback() {
            var t;
            super.disconnectedCallback(),
            null === (t = this._$Dt) || void 0 === t || t.setConnected(!1)
        }
        render() {
            return b
        }
    }
    s.finalized = !0,
    s._$litElement$ = !0,
    null === (l$1 = globalThis.litElementHydrateSupport) || void 0 === l$1 || l$1.call(globalThis, {
        LitElement: s
    });
    var n$2 = globalThis.litElementPolyfillSupport;
    null == n$2 || n$2({
        LitElement: s
    });
    var h = {
        _$AK: (t, e, r) => {
            t._$AK(e, r)
        }
        ,
        _$AL: t => t._$AL
    };
    (null !== (o$2 = globalThis.litElementVersions) && void 0 !== o$2 ? o$2 : globalThis.litElementVersions = []).push("3.1.2");
    var n$1 = t => e => "function" == typeof e ? ( (t, e) => (window.customElements.define(t, e),
    e))(t, e) : ( (t, e) => {
        var {kind: r, elements: i} = e;
        return {
            kind: r,
            elements: i,
            finisher(e) {
                window.customElements.define(t, e)
            }
        }
    }
    )(t, e)
      , i$1 = (t, e) => "method" === e.kind && e.descriptor && !("value"in e.descriptor) ? _objectSpread2(_objectSpread2({}, e), {}, {
        finisher(r) {
            r.createProperty(e.key, t)
        }
    }) : {
        kind: "field",
        key: Symbol(),
        placement: "own",
        descriptor: {},
        originalKey: e.key,
        initializer() {
            "function" == typeof e.initializer && (this[e.key] = e.initializer.call(this))
        },
        finisher(r) {
            r.createProperty(e.key, t)
        }
    };
    function e$5(t) {
        return (e, r) => void 0 !== r ? ( (t, e, r) => {
            e.constructor.createProperty(r, t)
        }
        )(t, e, r) : i$1(t, e)
    }
    function t$1(t) {
        return e$5(_objectSpread2(_objectSpread2({}, t), {}, {
            state: !0
        }))
    }
    var e$4 = (t, e, r) => {
        Object.defineProperty(e, r, t)
    }
    , t = (t, e) => ({
        kind: "method",
        placement: "prototype",
        key: e.key,
        descriptor: t
    }), o$1 = t => {
        var {finisher: e, descriptor: r} = t;
        return (t, i) => {
            var s;
            if (void 0 === i) {
                var a = null !== (s = t.originalKey) && void 0 !== s ? s : t.key
                  , n = null != r ? {
                    kind: "method",
                    placement: "prototype",
                    key: a,
                    descriptor: r(t.key)
                } : _objectSpread2(_objectSpread2({}, t), {}, {
                    key: a
                });
                return null != e && (n.finisher = function(t) {
                    e(t, a)
                }
                ),
                n
            }
            var o = t.constructor;
            void 0 !== r && Object.defineProperty(t, i, r(i)),
            null == e || e(o, i)
        }
    }
    , n;
    function e$3(t) {
        return o$1({
            finisher: (e, r) => {
                Object.assign(e.prototype[r], t)
            }
        })
    }
    function i(t, e) {
        return o$1({
            descriptor: r => {
                var i = {
                    get() {
                        var e, r;
                        return null !== (r = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelector(t)) && void 0 !== r ? r : null
                    },
                    enumerable: !0,
                    configurable: !0
                };
                if (e) {
                    var s = "symbol" == typeof r ? Symbol() : "__" + r;
                    i.get = function() {
                        var e, r;
                        return void 0 === this[s] && (this[s] = null !== (r = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelector(t)) && void 0 !== r ? r : null),
                        this[s]
                    }
                }
                return i
            }
        })
    }
    function e$2(t) {
        return o$1({
            descriptor: e => ({
                get() {
                    var e, r;
                    return null !== (r = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelectorAll(t)) && void 0 !== r ? r : []
                },
                enumerable: !0,
                configurable: !0
            })
        })
    }
    function e$1(t) {
        return o$1({
            descriptor: e => ({
                get() {
                    var e = this;
                    return _asyncToGenerator((function*() {
                        var r;
                        return yield e.updateComplete,
                        null === (r = e.renderRoot) || void 0 === r ? void 0 : r.querySelector(t)
                    }
                    ))()
                },
                enumerable: !0,
                configurable: !0
            })
        })
    }
    var e = null != (null === (n = window.HTMLSlotElement) || void 0 === n ? void 0 : n.prototype.assignedElements) ? (t, e) => t.assignedElements(e) : (t, e) => t.assignedNodes(e).filter((t => t.nodeType === Node.ELEMENT_NODE));
    function l(t) {
        var {slot: r, selector: i} = null != t ? t : {};
        return o$1({
            descriptor: s => ({
                get() {
                    var s, a = "slot" + (r ? "[name=".concat(r, "]") : ":not([name])"), n = null === (s = this.renderRoot) || void 0 === s ? void 0 : s.querySelector(a), o = null != n ? e(n, t) : [];
                    return i ? o.filter((t => t.matches(i))) : o
                },
                enumerable: !0,
                configurable: !0
            })
        })
    }
    function o(t, e, r) {
        var i, s = t;
        return "object" == typeof t ? (s = t.slot,
        i = t) : i = {
            flatten: e
        },
        r ? l({
            slot: s,
            flatten: e,
            selector: r
        }) : o$1({
            descriptor: t => ({
                get() {
                    var t, e, r = "slot" + (s ? "[name=".concat(s, "]") : ":not([name])"), a = null === (t = this.renderRoot) || void 0 === t ? void 0 : t.querySelector(r);
                    return null !== (e = null == a ? void 0 : a.assignedNodes(i)) && void 0 !== e ? e : []
                },
                enumerable: !0,
                configurable: !0
            })
        })
    }
    var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
    function getDefaultExportFromCjs(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
    }
    function getDefaultExportFromNamespaceIfPresent(t) {
        return t && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
    }
    function getDefaultExportFromNamespaceIfNotNamed(t) {
        return t && Object.prototype.hasOwnProperty.call(t, "default") && 1 === Object.keys(t).length ? t.default : t
    }
    function getAugmentedNamespace(t) {
        if (t.__esModule)
            return t;
        var e = Object.defineProperty({}, "__esModule", {
            value: !0
        });
        return Object.keys(t).forEach((function(r) {
            var i = Object.getOwnPropertyDescriptor(t, r);
            Object.defineProperty(e, r, i.get ? i : {
                enumerable: !0,
                get: function() {
                    return t[r]
                }
            })
        }
        )),
        e
    }
    function commonjsRequire(t) {
        throw new Error('Could not dynamically require "' + t + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')
    }
    var lottie$1 = {
        exports: {}
    };
    (function(module, exports) {
        var factory;
        "undefined" != typeof navigator && (factory = function() {
            var svgNS = "http://www.w3.org/2000/svg"
              , locationHref = ""
              , _useWebWorker = !1
              , initialDefaultFrame = -999999
              , setWebWorker = function(t) {
                _useWebWorker = !!t
            }
              , getWebWorker = function() {
                return _useWebWorker
            }
              , setLocationHref = function(t) {
                locationHref = t
            }
              , getLocationHref = function() {
                return locationHref
            };
            function createTag(t) {
                return document.createElement(t)
            }
            function extendPrototype(t, e) {
                var r, i, s = t.length;
                for (r = 0; r < s; r += 1)
                    for (var a in i = t[r].prototype)
                        Object.prototype.hasOwnProperty.call(i, a) && (e.prototype[a] = i[a])
            }
            function getDescriptor(t, e) {
                return Object.getOwnPropertyDescriptor(t, e)
            }
            function createProxyFunction(t) {
                function e() {}
                return e.prototype = t,
                e
            }
            var audioControllerFactory = function() {
                function t(t) {
                    this.audios = [],
                    this.audioFactory = t,
                    this._volume = 1,
                    this._isMuted = !1
                }
                return t.prototype = {
                    addAudio: function(t) {
                        this.audios.push(t)
                    },
                    pause: function() {
                        var t, e = this.audios.length;
                        for (t = 0; t < e; t += 1)
                            this.audios[t].pause()
                    },
                    resume: function() {
                        var t, e = this.audios.length;
                        for (t = 0; t < e; t += 1)
                            this.audios[t].resume()
                    },
                    setRate: function(t) {
                        var e, r = this.audios.length;
                        for (e = 0; e < r; e += 1)
                            this.audios[e].setRate(t)
                    },
                    createAudio: function(t) {
                        return this.audioFactory ? this.audioFactory(t) : window.Howl ? new window.Howl({
                            src: [t]
                        }) : {
                            isPlaying: !1,
                            play: function() {
                                this.isPlaying = !0
                            },
                            seek: function() {
                                this.isPlaying = !1
                            },
                            playing: function() {},
                            rate: function() {},
                            setVolume: function() {}
                        }
                    },
                    setAudioFactory: function(t) {
                        this.audioFactory = t
                    },
                    setVolume: function(t) {
                        this._volume = t,
                        this._updateVolume()
                    },
                    mute: function() {
                        this._isMuted = !0,
                        this._updateVolume()
                    },
                    unmute: function() {
                        this._isMuted = !1,
                        this._updateVolume()
                    },
                    getVolume: function() {
                        return this._volume
                    },
                    _updateVolume: function() {
                        var t, e = this.audios.length;
                        for (t = 0; t < e; t += 1)
                            this.audios[t].volume(this._volume * (this._isMuted ? 0 : 1))
                    }
                },
                function() {
                    return new t
                }
            }()
              , createTypedArray = function() {
                function t(t, e) {
                    var r, i = 0, s = [];
                    switch (t) {
                    case "int16":
                    case "uint8c":
                        r = 1;
                        break;
                    default:
                        r = 1.1
                    }
                    for (i = 0; i < e; i += 1)
                        s.push(r);
                    return s
                }
                return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array ? function(e, r) {
                    return "float32" === e ? new Float32Array(r) : "int16" === e ? new Int16Array(r) : "uint8c" === e ? new Uint8ClampedArray(r) : t(e, r)
                }
                : t
            }();
            function createSizedArray(t) {
                return Array.apply(null, {
                    length: t
                })
            }
            function _typeof$6(t) {
                return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof$6(t)
            }
            var subframeEnabled = !0
              , expressionsPlugin = null
              , expressionsInterfaces = null
              , idPrefix$1 = ""
              , isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
              , _shouldRoundValues = !1
              , bmPow = Math.pow
              , bmSqrt = Math.sqrt
              , bmFloor = Math.floor
              , bmMax = Math.max
              , bmMin = Math.min
              , BMMath = {};
            function ProjectInterface$1() {
                return {}
            }
            !function() {
                var t, e = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"], r = e.length;
                for (t = 0; t < r; t += 1)
                    BMMath[e[t]] = Math[e[t]]
            }(),
            BMMath.random = Math.random,
            BMMath.abs = function(t) {
                if ("object" === _typeof$6(t) && t.length) {
                    var e, r = createSizedArray(t.length), i = t.length;
                    for (e = 0; e < i; e += 1)
                        r[e] = Math.abs(t[e]);
                    return r
                }
                return Math.abs(t)
            }
            ;
            var defaultCurveSegments = 150
              , degToRads = Math.PI / 180
              , roundCorner = .5519;
            function roundValues(t) {
                _shouldRoundValues = !!t
            }
            function bmRnd(t) {
                return _shouldRoundValues ? Math.round(t) : t
            }
            function styleDiv(t) {
                t.style.position = "absolute",
                t.style.top = 0,
                t.style.left = 0,
                t.style.display = "block",
                t.style.transformOrigin = "0 0",
                t.style.webkitTransformOrigin = "0 0",
                t.style.backfaceVisibility = "visible",
                t.style.webkitBackfaceVisibility = "visible",
                t.style.transformStyle = "preserve-3d",
                t.style.webkitTransformStyle = "preserve-3d",
                t.style.mozTransformStyle = "preserve-3d"
            }
            function BMEnterFrameEvent(t, e, r, i) {
                this.type = t,
                this.currentTime = e,
                this.totalTime = r,
                this.direction = i < 0 ? -1 : 1
            }
            function BMCompleteEvent(t, e) {
                this.type = t,
                this.direction = e < 0 ? -1 : 1
            }
            function BMCompleteLoopEvent(t, e, r, i) {
                this.type = t,
                this.currentLoop = r,
                this.totalLoops = e,
                this.direction = i < 0 ? -1 : 1
            }
            function BMSegmentStartEvent(t, e, r) {
                this.type = t,
                this.firstFrame = e,
                this.totalFrames = r
            }
            function BMDestroyEvent(t, e) {
                this.type = t,
                this.target = e
            }
            function BMRenderFrameErrorEvent(t, e) {
                this.type = "renderFrameError",
                this.nativeError = t,
                this.currentTime = e
            }
            function BMConfigErrorEvent(t) {
                this.type = "configError",
                this.nativeError = t
            }
            function BMAnimationConfigErrorEvent(t, e) {
                this.type = t,
                this.nativeError = e
            }
            var createElementID = (_count = 0,
            function() {
                return idPrefix$1 + "__lottie_element_" + (_count += 1)
            }
            ), _count;
            function HSVtoRGB(t, e, r) {
                var i, s, a, n, o, h, l, p;
                switch (h = r * (1 - e),
                l = r * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e),
                p = r * (1 - (1 - o) * e),
                n % 6) {
                case 0:
                    i = r,
                    s = p,
                    a = h;
                    break;
                case 1:
                    i = l,
                    s = r,
                    a = h;
                    break;
                case 2:
                    i = h,
                    s = r,
                    a = p;
                    break;
                case 3:
                    i = h,
                    s = l,
                    a = r;
                    break;
                case 4:
                    i = p,
                    s = h,
                    a = r;
                    break;
                case 5:
                    i = r,
                    s = h,
                    a = l
                }
                return [i, s, a]
            }
            function RGBtoHSV(t, e, r) {
                var i, s = Math.max(t, e, r), a = Math.min(t, e, r), n = s - a, o = 0 === s ? 0 : n / s, h = s / 255;
                switch (s) {
                case a:
                    i = 0;
                    break;
                case t:
                    i = e - r + n * (e < r ? 6 : 0),
                    i /= 6 * n;
                    break;
                case e:
                    i = r - t + 2 * n,
                    i /= 6 * n;
                    break;
                case r:
                    i = t - e + 4 * n,
                    i /= 6 * n
                }
                return [i, o, h]
            }
            function addSaturationToRGB(t, e) {
                var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                return r[1] += e,
                r[1] > 1 ? r[1] = 1 : r[1] <= 0 && (r[1] = 0),
                HSVtoRGB(r[0], r[1], r[2])
            }
            function addBrightnessToRGB(t, e) {
                var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                return r[2] += e,
                r[2] > 1 ? r[2] = 1 : r[2] < 0 && (r[2] = 0),
                HSVtoRGB(r[0], r[1], r[2])
            }
            function addHueToRGB(t, e) {
                var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
                return r[0] += e / 360,
                r[0] > 1 ? r[0] -= 1 : r[0] < 0 && (r[0] += 1),
                HSVtoRGB(r[0], r[1], r[2])
            }
            var rgbToHex = function() {
                var t, e, r = [];
                for (t = 0; t < 256; t += 1)
                    e = t.toString(16),
                    r[t] = 1 === e.length ? "0" + e : e;
                return function(t, e, i) {
                    return t < 0 && (t = 0),
                    e < 0 && (e = 0),
                    i < 0 && (i = 0),
                    "#" + r[t] + r[e] + r[i]
                }
            }()
              , setSubframeEnabled = function(t) {
                subframeEnabled = !!t
            }
              , getSubframeEnabled = function() {
                return subframeEnabled
            }
              , setExpressionsPlugin = function(t) {
                expressionsPlugin = t
            }
              , getExpressionsPlugin = function() {
                return expressionsPlugin
            }
              , setExpressionInterfaces = function(t) {
                expressionsInterfaces = t
            }
              , getExpressionInterfaces = function() {
                return expressionsInterfaces
            }
              , setDefaultCurveSegments = function(t) {
                defaultCurveSegments = t
            }
              , getDefaultCurveSegments = function() {
                return defaultCurveSegments
            }
              , setIdPrefix = function(t) {
                idPrefix$1 = t
            }
              , getIdPrefix = function() {
                return idPrefix$1
            };
            function createNS(t) {
                return document.createElementNS(svgNS, t)
            }
            function _typeof$5(t) {
                return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof$5(t)
            }
            var dataManager = function() {
                var t, e, r = 1, i = [], s = {
                    onmessage: function() {},
                    postMessage: function(e) {
                        t({
                            data: e
                        })
                    }
                }, _workerSelf = {
                    postMessage: function(t) {
                        s.onmessage({
                            data: t
                        })
                    }
                };
                function a() {
                    e || (e = function(e) {
                        if (window.Worker && window.Blob && getWebWorker()) {
                            var r = new Blob(["var _workerSelf = self; self.onmessage = ", e.toString()],{
                                type: "text/javascript"
                            })
                              , i = URL.createObjectURL(r);
                            return new Worker(i)
                        }
                        return t = e,
                        s
                    }((function(t) {
                        if (_workerSelf.dataManager || (_workerSelf.dataManager = function() {
                            function t(s, a) {
                                var n, o, h, l, p, f, u = s.length;
                                for (o = 0; o < u; o += 1)
                                    if ("ks"in (n = s[o]) && !n.completed) {
                                        if (n.completed = !0,
                                        n.hasMask) {
                                            var d = n.masksProperties;
                                            for (l = d.length,
                                            h = 0; h < l; h += 1)
                                                if (d[h].pt.k.i)
                                                    i(d[h].pt.k);
                                                else
                                                    for (f = d[h].pt.k.length,
                                                    p = 0; p < f; p += 1)
                                                        d[h].pt.k[p].s && i(d[h].pt.k[p].s[0]),
                                                        d[h].pt.k[p].e && i(d[h].pt.k[p].e[0])
                                        }
                                        0 === n.ty ? (n.layers = e(n.refId, a),
                                        t(n.layers, a)) : 4 === n.ty ? r(n.shapes) : 5 === n.ty && c(n)
                                    }
                            }
                            function e(t, e) {
                                var r = function(t, e) {
                                    for (var r = 0, i = e.length; r < i; ) {
                                        if (e[r].id === t)
                                            return e[r];
                                        r += 1
                                    }
                                    return null
                                }(t, e);
                                return r ? r.layers.__used ? JSON.parse(JSON.stringify(r.layers)) : (r.layers.__used = !0,
                                r.layers) : null
                            }
                            function r(t) {
                                var e, s, a;
                                for (e = t.length - 1; e >= 0; e -= 1)
                                    if ("sh" === t[e].ty)
                                        if (t[e].ks.k.i)
                                            i(t[e].ks.k);
                                        else
                                            for (a = t[e].ks.k.length,
                                            s = 0; s < a; s += 1)
                                                t[e].ks.k[s].s && i(t[e].ks.k[s].s[0]),
                                                t[e].ks.k[s].e && i(t[e].ks.k[s].e[0]);
                                    else
                                        "gr" === t[e].ty && r(t[e].it)
                            }
                            function i(t) {
                                var e, r = t.i.length;
                                for (e = 0; e < r; e += 1)
                                    t.i[e][0] += t.v[e][0],
                                    t.i[e][1] += t.v[e][1],
                                    t.o[e][0] += t.v[e][0],
                                    t.o[e][1] += t.v[e][1]
                            }
                            function s(t, e) {
                                var r = e ? e.split(".") : [100, 100, 100];
                                return t[0] > r[0] || !(r[0] > t[0]) && (t[1] > r[1] || !(r[1] > t[1]) && (t[2] > r[2] || !(r[2] > t[2]) && null))
                            }
                            var a, n = function() {
                                var t = [4, 4, 14];
                                function e(t) {
                                    var e, r, i, s = t.length;
                                    for (e = 0; e < s; e += 1)
                                        5 === t[e].ty && (i = void 0,
                                        i = (r = t[e]).t.d,
                                        r.t.d = {
                                            k: [{
                                                s: i,
                                                t: 0
                                            }]
                                        })
                                }
                                return function(r) {
                                    if (s(t, r.v) && (e(r.layers),
                                    r.assets)) {
                                        var i, a = r.assets.length;
                                        for (i = 0; i < a; i += 1)
                                            r.assets[i].layers && e(r.assets[i].layers)
                                    }
                                }
                            }(), o = (a = [4, 7, 99],
                            function(t) {
                                if (t.chars && !s(a, t.v)) {
                                    var e, i = t.chars.length;
                                    for (e = 0; e < i; e += 1) {
                                        var n = t.chars[e];
                                        n.data && n.data.shapes && (r(n.data.shapes),
                                        n.data.ip = 0,
                                        n.data.op = 99999,
                                        n.data.st = 0,
                                        n.data.sr = 1,
                                        n.data.ks = {
                                            p: {
                                                k: [0, 0],
                                                a: 0
                                            },
                                            s: {
                                                k: [100, 100],
                                                a: 0
                                            },
                                            a: {
                                                k: [0, 0],
                                                a: 0
                                            },
                                            r: {
                                                k: 0,
                                                a: 0
                                            },
                                            o: {
                                                k: 100,
                                                a: 0
                                            }
                                        },
                                        t.chars[e].t || (n.data.shapes.push({
                                            ty: "no"
                                        }),
                                        n.data.shapes[0].it.push({
                                            p: {
                                                k: [0, 0],
                                                a: 0
                                            },
                                            s: {
                                                k: [100, 100],
                                                a: 0
                                            },
                                            a: {
                                                k: [0, 0],
                                                a: 0
                                            },
                                            r: {
                                                k: 0,
                                                a: 0
                                            },
                                            o: {
                                                k: 100,
                                                a: 0
                                            },
                                            sk: {
                                                k: 0,
                                                a: 0
                                            },
                                            sa: {
                                                k: 0,
                                                a: 0
                                            },
                                            ty: "tr"
                                        })))
                                    }
                                }
                            }
                            ), h = function() {
                                var t = [5, 7, 15];
                                function e(t) {
                                    var e, r, i = t.length;
                                    for (e = 0; e < i; e += 1)
                                        5 === t[e].ty && (r = void 0,
                                        "number" == typeof (r = t[e].t.p).a && (r.a = {
                                            a: 0,
                                            k: r.a
                                        }),
                                        "number" == typeof r.p && (r.p = {
                                            a: 0,
                                            k: r.p
                                        }),
                                        "number" == typeof r.r && (r.r = {
                                            a: 0,
                                            k: r.r
                                        }))
                                }
                                return function(r) {
                                    if (s(t, r.v) && (e(r.layers),
                                    r.assets)) {
                                        var i, a = r.assets.length;
                                        for (i = 0; i < a; i += 1)
                                            r.assets[i].layers && e(r.assets[i].layers)
                                    }
                                }
                            }(), l = function() {
                                var t = [4, 1, 9];
                                function e(t) {
                                    var r, i, s, a = t.length;
                                    for (r = 0; r < a; r += 1)
                                        if ("gr" === t[r].ty)
                                            e(t[r].it);
                                        else if ("fl" === t[r].ty || "st" === t[r].ty)
                                            if (t[r].c.k && t[r].c.k[0].i)
                                                for (s = t[r].c.k.length,
                                                i = 0; i < s; i += 1)
                                                    t[r].c.k[i].s && (t[r].c.k[i].s[0] /= 255,
                                                    t[r].c.k[i].s[1] /= 255,
                                                    t[r].c.k[i].s[2] /= 255,
                                                    t[r].c.k[i].s[3] /= 255),
                                                    t[r].c.k[i].e && (t[r].c.k[i].e[0] /= 255,
                                                    t[r].c.k[i].e[1] /= 255,
                                                    t[r].c.k[i].e[2] /= 255,
                                                    t[r].c.k[i].e[3] /= 255);
                                            else
                                                t[r].c.k[0] /= 255,
                                                t[r].c.k[1] /= 255,
                                                t[r].c.k[2] /= 255,
                                                t[r].c.k[3] /= 255
                                }
                                function r(t) {
                                    var r, i = t.length;
                                    for (r = 0; r < i; r += 1)
                                        4 === t[r].ty && e(t[r].shapes)
                                }
                                return function(e) {
                                    if (s(t, e.v) && (r(e.layers),
                                    e.assets)) {
                                        var i, a = e.assets.length;
                                        for (i = 0; i < a; i += 1)
                                            e.assets[i].layers && r(e.assets[i].layers)
                                    }
                                }
                            }(), p = function() {
                                var t = [4, 4, 18];
                                function e(t) {
                                    var r, i, s;
                                    for (r = t.length - 1; r >= 0; r -= 1)
                                        if ("sh" === t[r].ty)
                                            if (t[r].ks.k.i)
                                                t[r].ks.k.c = t[r].closed;
                                            else
                                                for (s = t[r].ks.k.length,
                                                i = 0; i < s; i += 1)
                                                    t[r].ks.k[i].s && (t[r].ks.k[i].s[0].c = t[r].closed),
                                                    t[r].ks.k[i].e && (t[r].ks.k[i].e[0].c = t[r].closed);
                                        else
                                            "gr" === t[r].ty && e(t[r].it)
                                }
                                function r(t) {
                                    var r, i, s, a, n, o, h = t.length;
                                    for (i = 0; i < h; i += 1) {
                                        if ((r = t[i]).hasMask) {
                                            var l = r.masksProperties;
                                            for (a = l.length,
                                            s = 0; s < a; s += 1)
                                                if (l[s].pt.k.i)
                                                    l[s].pt.k.c = l[s].cl;
                                                else
                                                    for (o = l[s].pt.k.length,
                                                    n = 0; n < o; n += 1)
                                                        l[s].pt.k[n].s && (l[s].pt.k[n].s[0].c = l[s].cl),
                                                        l[s].pt.k[n].e && (l[s].pt.k[n].e[0].c = l[s].cl)
                                        }
                                        4 === r.ty && e(r.shapes)
                                    }
                                }
                                return function(e) {
                                    if (s(t, e.v) && (r(e.layers),
                                    e.assets)) {
                                        var i, a = e.assets.length;
                                        for (i = 0; i < a; i += 1)
                                            e.assets[i].layers && r(e.assets[i].layers)
                                    }
                                }
                            }();
                            function c(t) {
                                0 === t.t.a.length && t.t.p
                            }
                            var f = {
                                completeData: function(r) {
                                    r.__complete || (l(r),
                                    n(r),
                                    o(r),
                                    h(r),
                                    p(r),
                                    t(r.layers, r.assets),
                                    function(r, i) {
                                        if (r) {
                                            var s = 0
                                              , a = r.length;
                                            for (s = 0; s < a; s += 1)
                                                1 === r[s].t && (r[s].data.layers = e(r[s].data.refId, i),
                                                t(r[s].data.layers, i))
                                        }
                                    }(r.chars, r.assets),
                                    r.__complete = !0)
                                }
                            };
                            return f.checkColors = l,
                            f.checkChars = o,
                            f.checkPathProperties = h,
                            f.checkShapes = p,
                            f.completeLayers = t,
                            f
                        }()),
                        _workerSelf.assetLoader || (_workerSelf.assetLoader = function() {
                            function t(t) {
                                var e = t.getResponseHeader("content-type");
                                return e && "json" === t.responseType && -1 !== e.indexOf("json") || t.response && "object" === _typeof$5(t.response) ? t.response : t.response && "string" == typeof t.response ? JSON.parse(t.response) : t.responseText ? JSON.parse(t.responseText) : null
                            }
                            return {
                                load: function(e, r, i, s) {
                                    var a, n = new XMLHttpRequest;
                                    try {
                                        n.responseType = "json"
                                    } catch (t) {}
                                    n.onreadystatechange = function() {
                                        if (4 === n.readyState)
                                            if (200 === n.status)
                                                a = t(n),
                                                i(a);
                                            else
                                                try {
                                                    a = t(n),
                                                    i(a)
                                                } catch (t) {
                                                    s && s(t)
                                                }
                                    }
                                    ;
                                    try {
                                        n.open(["G", "E", "T"].join(""), e, !0)
                                    } catch (t) {
                                        n.open(["G", "E", "T"].join(""), r + "/" + e, !0)
                                    }
                                    n.send()
                                }
                            }
                        }()),
                        "loadAnimation" === t.data.type)
                            _workerSelf.assetLoader.load(t.data.path, t.data.fullPath, (function(e) {
                                _workerSelf.dataManager.completeData(e),
                                _workerSelf.postMessage({
                                    id: t.data.id,
                                    payload: e,
                                    status: "success"
                                })
                            }
                            ), (function() {
                                _workerSelf.postMessage({
                                    id: t.data.id,
                                    status: "error"
                                })
                            }
                            ));
                        else if ("complete" === t.data.type) {
                            var e = t.data.animation;
                            _workerSelf.dataManager.completeData(e),
                            _workerSelf.postMessage({
                                id: t.data.id,
                                payload: e,
                                status: "success"
                            })
                        } else
                            "loadData" === t.data.type && _workerSelf.assetLoader.load(t.data.path, t.data.fullPath, (function(e) {
                                _workerSelf.postMessage({
                                    id: t.data.id,
                                    payload: e,
                                    status: "success"
                                })
                            }
                            ), (function() {
                                _workerSelf.postMessage({
                                    id: t.data.id,
                                    status: "error"
                                })
                            }
                            ))
                    }
                    )),
                    e.onmessage = function(t) {
                        var e = t.data
                          , r = e.id
                          , s = i[r];
                        i[r] = null,
                        "success" === e.status ? s.onComplete(e.payload) : s.onError && s.onError()
                    }
                    )
                }
                function n(t, e) {
                    var s = "processId_" + (r += 1);
                    return i[s] = {
                        onComplete: t,
                        onError: e
                    },
                    s
                }
                return {
                    loadAnimation: function(t, r, i) {
                        a();
                        var s = n(r, i);
                        e.postMessage({
                            type: "loadAnimation",
                            path: t,
                            fullPath: window.location.origin + window.location.pathname,
                            id: s
                        })
                    },
                    loadData: function(t, r, i) {
                        a();
                        var s = n(r, i);
                        e.postMessage({
                            type: "loadData",
                            path: t,
                            fullPath: window.location.origin + window.location.pathname,
                            id: s
                        })
                    },
                    completeAnimation: function(t, r, i) {
                        a();
                        var s = n(r, i);
                        e.postMessage({
                            type: "complete",
                            animation: t,
                            id: s
                        })
                    }
                }
            }()
              , ImagePreloader = function() {
                var t = function() {
                    var t = createTag("canvas");
                    t.width = 1,
                    t.height = 1;
                    var e = t.getContext("2d");
                    return e.fillStyle = "rgba(0,0,0,0)",
                    e.fillRect(0, 0, 1, 1),
                    t
                }();
                function e() {
                    this.loadedAssets += 1,
                    this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
                }
                function r() {
                    this.loadedFootagesCount += 1,
                    this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
                }
                function i(t, e, r) {
                    var i = "";
                    if (t.e)
                        i = t.p;
                    else if (e) {
                        var s = t.p;
                        -1 !== s.indexOf("images/") && (s = s.split("/")[1]),
                        i = e + s
                    } else
                        i = r,
                        i += t.u ? t.u : "",
                        i += t.p;
                    return i
                }
                function s(t) {
                    var e = 0
                      , r = setInterval(function() {
                        (t.getBBox().width || e > 500) && (this._imageLoaded(),
                        clearInterval(r)),
                        e += 1
                    }
                    .bind(this), 50)
                }
                function a(t) {
                    var e = {
                        assetData: t
                    }
                      , r = i(t, this.assetsPath, this.path);
                    return dataManager.loadData(r, function(t) {
                        e.img = t,
                        this._footageLoaded()
                    }
                    .bind(this), function() {
                        e.img = {},
                        this._footageLoaded()
                    }
                    .bind(this)),
                    e
                }
                function n() {
                    this._imageLoaded = e.bind(this),
                    this._footageLoaded = r.bind(this),
                    this.testImageLoaded = s.bind(this),
                    this.createFootageData = a.bind(this),
                    this.assetsPath = "",
                    this.path = "",
                    this.totalImages = 0,
                    this.totalFootages = 0,
                    this.loadedAssets = 0,
                    this.loadedFootagesCount = 0,
                    this.imagesLoadedCb = null,
                    this.images = []
                }
                return n.prototype = {
                    loadAssets: function(t, e) {
                        var r;
                        this.imagesLoadedCb = e;
                        var i = t.length;
                        for (r = 0; r < i; r += 1)
                            t[r].layers || (t[r].t && "seq" !== t[r].t ? 3 === t[r].t && (this.totalFootages += 1,
                            this.images.push(this.createFootageData(t[r]))) : (this.totalImages += 1,
                            this.images.push(this._createImageData(t[r]))))
                    },
                    setAssetsPath: function(t) {
                        this.assetsPath = t || ""
                    },
                    setPath: function(t) {
                        this.path = t || ""
                    },
                    loadedImages: function() {
                        return this.totalImages === this.loadedAssets
                    },
                    loadedFootages: function() {
                        return this.totalFootages === this.loadedFootagesCount
                    },
                    destroy: function() {
                        this.imagesLoadedCb = null,
                        this.images.length = 0
                    },
                    getAsset: function(t) {
                        for (var e = 0, r = this.images.length; e < r; ) {
                            if (this.images[e].assetData === t)
                                return this.images[e].img;
                            e += 1
                        }
                        return null
                    },
                    createImgData: function(e) {
                        var r = i(e, this.assetsPath, this.path)
                          , s = createTag("img");
                        s.crossOrigin = "anonymous",
                        s.addEventListener("load", this._imageLoaded, !1),
                        s.addEventListener("error", function() {
                            a.img = t,
                            this._imageLoaded()
                        }
                        .bind(this), !1),
                        s.src = r;
                        var a = {
                            img: s,
                            assetData: e
                        };
                        return a
                    },
                    createImageData: function(e) {
                        var r = i(e, this.assetsPath, this.path)
                          , s = createNS("image");
                        isSafari ? this.testImageLoaded(s) : s.addEventListener("load", this._imageLoaded, !1),
                        s.addEventListener("error", function() {
                            a.img = t,
                            this._imageLoaded()
                        }
                        .bind(this), !1),
                        s.setAttributeNS("http://www.w3.org/1999/xlink", "href", r),
                        this._elementHelper.append ? this._elementHelper.append(s) : this._elementHelper.appendChild(s);
                        var a = {
                            img: s,
                            assetData: e
                        };
                        return a
                    },
                    imageLoaded: e,
                    footageLoaded: r,
                    setCacheType: function(t, e) {
                        "svg" === t ? (this._elementHelper = e,
                        this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this)
                    }
                },
                n
            }();
            function BaseEvent() {}
            BaseEvent.prototype = {
                triggerEvent: function(t, e) {
                    if (this._cbs[t])
                        for (var r = this._cbs[t], i = 0; i < r.length; i += 1)
                            r[i](e)
                },
                addEventListener: function(t, e) {
                    return this._cbs[t] || (this._cbs[t] = []),
                    this._cbs[t].push(e),
                    function() {
                        this.removeEventListener(t, e)
                    }
                    .bind(this)
                },
                removeEventListener: function(t, e) {
                    if (e) {
                        if (this._cbs[t]) {
                            for (var r = 0, i = this._cbs[t].length; r < i; )
                                this._cbs[t][r] === e && (this._cbs[t].splice(r, 1),
                                r -= 1,
                                i -= 1),
                                r += 1;
                            this._cbs[t].length || (this._cbs[t] = null)
                        }
                    } else
                        this._cbs[t] = null
                }
            };
            var markerParser = function() {
                function t(t) {
                    for (var e, r = t.split("\r\n"), i = {}, s = 0, a = 0; a < r.length; a += 1)
                        2 === (e = r[a].split(":")).length && (i[e[0]] = e[1].trim(),
                        s += 1);
                    if (0 === s)
                        throw new Error;
                    return i
                }
                return function(e) {
                    for (var r = [], i = 0; i < e.length; i += 1) {
                        var s = e[i]
                          , a = {
                            time: s.tm,
                            duration: s.dr
                        };
                        try {
                            a.payload = JSON.parse(e[i].cm)
                        } catch (r) {
                            try {
                                a.payload = t(e[i].cm)
                            } catch (t) {
                                a.payload = {
                                    name: e[i].cm
                                }
                            }
                        }
                        r.push(a)
                    }
                    return r
                }
            }()
              , ProjectInterface = function() {
                function t(t) {
                    this.compositions.push(t)
                }
                return function() {
                    function e(t) {
                        for (var e = 0, r = this.compositions.length; e < r; ) {
                            if (this.compositions[e].data && this.compositions[e].data.nm === t)
                                return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame),
                                this.compositions[e].compInterface;
                            e += 1
                        }
                        return null
                    }
                    return e.compositions = [],
                    e.currentFrame = 0,
                    e.registerComposition = t,
                    e
                }
            }()
              , renderers = {}
              , registerRenderer = function(t, e) {
                renderers[t] = e
            };
            function getRenderer(t) {
                return renderers[t]
            }
            function getRegisteredRenderer() {
                if (renderers.canvas)
                    return "canvas";
                for (var t in renderers)
                    if (renderers[t])
                        return t;
                return ""
            }
            function _typeof$4(t) {
                return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof$4(t)
            }
            var AnimationItem = function() {
                this._cbs = [],
                this.name = "",
                this.path = "",
                this.isLoaded = !1,
                this.currentFrame = 0,
                this.currentRawFrame = 0,
                this.firstFrame = 0,
                this.totalFrames = 0,
                this.frameRate = 0,
                this.frameMult = 0,
                this.playSpeed = 1,
                this.playDirection = 1,
                this.playCount = 0,
                this.animationData = {},
                this.assets = [],
                this.isPaused = !0,
                this.autoplay = !1,
                this.loop = !0,
                this.renderer = null,
                this.animationID = createElementID(),
                this.assetsPath = "",
                this.timeCompleted = 0,
                this.segmentPos = 0,
                this.isSubframeEnabled = getSubframeEnabled(),
                this.segments = [],
                this._idle = !0,
                this._completedLoop = !1,
                this.projectInterface = ProjectInterface(),
                this.imagePreloader = new ImagePreloader,
                this.audioController = audioControllerFactory(),
                this.markers = [],
                this.configAnimation = this.configAnimation.bind(this),
                this.onSetupError = this.onSetupError.bind(this),
                this.onSegmentComplete = this.onSegmentComplete.bind(this),
                this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame",0,0,0),
                this.expressionsPlugin = getExpressionsPlugin()
            };
            extendPrototype([BaseEvent], AnimationItem),
            AnimationItem.prototype.setParams = function(t) {
                (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
                var e = "svg";
                t.animType ? e = t.animType : t.renderer && (e = t.renderer);
                var r = getRenderer(e);
                this.renderer = new r(this,t.rendererSettings),
                this.imagePreloader.setCacheType(e, this.renderer.globalData.defs),
                this.renderer.setProjectInterface(this.projectInterface),
                this.animType = e,
                "" === t.loop || null === t.loop || void 0 === t.loop || !0 === t.loop ? this.loop = !0 : !1 === t.loop ? this.loop = !1 : this.loop = parseInt(t.loop, 10),
                this.autoplay = !("autoplay"in t) || t.autoplay,
                this.name = t.name ? t.name : "",
                this.autoloadSegments = !Object.prototype.hasOwnProperty.call(t, "autoloadSegments") || t.autoloadSegments,
                this.assetsPath = t.assetsPath,
                this.initialSegment = t.initialSegment,
                t.audioFactory && this.audioController.setAudioFactory(t.audioFactory),
                t.animationData ? this.setupAnimation(t.animationData) : t.path && (-1 !== t.path.lastIndexOf("\\") ? this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1) : this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1),
                this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1),
                this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")),
                dataManager.loadAnimation(t.path, this.configAnimation, this.onSetupError))
            }
            ,
            AnimationItem.prototype.onSetupError = function() {
                this.trigger("data_failed")
            }
            ,
            AnimationItem.prototype.setupAnimation = function(t) {
                dataManager.completeAnimation(t, this.configAnimation)
            }
            ,
            AnimationItem.prototype.setData = function(t, e) {
                e && "object" !== _typeof$4(e) && (e = JSON.parse(e));
                var r = {
                    wrapper: t,
                    animationData: e
                }
                  , i = t.attributes;
                r.path = i.getNamedItem("data-animation-path") ? i.getNamedItem("data-animation-path").value : i.getNamedItem("data-bm-path") ? i.getNamedItem("data-bm-path").value : i.getNamedItem("bm-path") ? i.getNamedItem("bm-path").value : "",
                r.animType = i.getNamedItem("data-anim-type") ? i.getNamedItem("data-anim-type").value : i.getNamedItem("data-bm-type") ? i.getNamedItem("data-bm-type").value : i.getNamedItem("bm-type") ? i.getNamedItem("bm-type").value : i.getNamedItem("data-bm-renderer") ? i.getNamedItem("data-bm-renderer").value : i.getNamedItem("bm-renderer") ? i.getNamedItem("bm-renderer").value : getRegisteredRenderer() || "canvas";
                var s = i.getNamedItem("data-anim-loop") ? i.getNamedItem("data-anim-loop").value : i.getNamedItem("data-bm-loop") ? i.getNamedItem("data-bm-loop").value : i.getNamedItem("bm-loop") ? i.getNamedItem("bm-loop").value : "";
                "false" === s ? r.loop = !1 : "true" === s ? r.loop = !0 : "" !== s && (r.loop = parseInt(s, 10));
                var a = i.getNamedItem("data-anim-autoplay") ? i.getNamedItem("data-anim-autoplay").value : i.getNamedItem("data-bm-autoplay") ? i.getNamedItem("data-bm-autoplay").value : !i.getNamedItem("bm-autoplay") || i.getNamedItem("bm-autoplay").value;
                r.autoplay = "false" !== a,
                r.name = i.getNamedItem("data-name") ? i.getNamedItem("data-name").value : i.getNamedItem("data-bm-name") ? i.getNamedItem("data-bm-name").value : i.getNamedItem("bm-name") ? i.getNamedItem("bm-name").value : "",
                "false" === (i.getNamedItem("data-anim-prerender") ? i.getNamedItem("data-anim-prerender").value : i.getNamedItem("data-bm-prerender") ? i.getNamedItem("data-bm-prerender").value : i.getNamedItem("bm-prerender") ? i.getNamedItem("bm-prerender").value : "") && (r.prerender = !1),
                r.path ? this.setParams(r) : this.trigger("destroy")
            }
            ,
            AnimationItem.prototype.includeLayers = function(t) {
                t.op > this.animationData.op && (this.animationData.op = t.op,
                this.totalFrames = Math.floor(t.op - this.animationData.ip));
                var e, r, i = this.animationData.layers, s = i.length, a = t.layers, n = a.length;
                for (r = 0; r < n; r += 1)
                    for (e = 0; e < s; ) {
                        if (i[e].id === a[r].id) {
                            i[e] = a[r];
                            break
                        }
                        e += 1
                    }
                if ((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars),
                this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)),
                t.assets)
                    for (s = t.assets.length,
                    e = 0; e < s; e += 1)
                        this.animationData.assets.push(t.assets[e]);
                this.animationData.__complete = !1,
                dataManager.completeAnimation(this.animationData, this.onSegmentComplete)
            }
            ,
            AnimationItem.prototype.onSegmentComplete = function(t) {
                this.animationData = t;
                var e = getExpressionsPlugin();
                e && e.initExpressions(this),
                this.loadNextSegment()
            }
            ,
            AnimationItem.prototype.loadNextSegment = function() {
                var t = this.animationData.segments;
                if (!t || 0 === t.length || !this.autoloadSegments)
                    return this.trigger("data_ready"),
                    void (this.timeCompleted = this.totalFrames);
                var e = t.shift();
                this.timeCompleted = e.time * this.frameRate;
                var r = this.path + this.fileName + "_" + this.segmentPos + ".json";
                this.segmentPos += 1,
                dataManager.loadData(r, this.includeLayers.bind(this), function() {
                    this.trigger("data_failed")
                }
                .bind(this))
            }
            ,
            AnimationItem.prototype.loadSegments = function() {
                this.animationData.segments || (this.timeCompleted = this.totalFrames),
                this.loadNextSegment()
            }
            ,
            AnimationItem.prototype.imagesLoaded = function() {
                this.trigger("loaded_images"),
                this.checkLoaded()
            }
            ,
            AnimationItem.prototype.preloadImages = function() {
                this.imagePreloader.setAssetsPath(this.assetsPath),
                this.imagePreloader.setPath(this.path),
                this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))
            }
            ,
            AnimationItem.prototype.configAnimation = function(t) {
                if (this.renderer)
                    try {
                        this.animationData = t,
                        this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]),
                        this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip),
                        this.firstFrame = Math.round(this.animationData.ip)),
                        this.renderer.configAnimation(t),
                        t.assets || (t.assets = []),
                        this.assets = this.animationData.assets,
                        this.frameRate = this.animationData.fr,
                        this.frameMult = this.animationData.fr / 1e3,
                        this.renderer.searchExtraCompositions(t.assets),
                        this.markers = markerParser(t.markers || []),
                        this.trigger("config_ready"),
                        this.preloadImages(),
                        this.loadSegments(),
                        this.updaFrameModifier(),
                        this.waitForFontsLoaded(),
                        this.isPaused && this.audioController.pause()
                    } catch (t) {
                        this.triggerConfigError(t)
                    }
            }
            ,
            AnimationItem.prototype.waitForFontsLoaded = function() {
                this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20))
            }
            ,
            AnimationItem.prototype.checkLoaded = function() {
                if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages()) {
                    this.isLoaded = !0;
                    var t = getExpressionsPlugin();
                    t && t.initExpressions(this),
                    this.renderer.initItems(),
                    setTimeout(function() {
                        this.trigger("DOMLoaded")
                    }
                    .bind(this), 0),
                    this.gotoFrame(),
                    this.autoplay && this.play()
                }
            }
            ,
            AnimationItem.prototype.resize = function(t, e) {
                var r = "number" == typeof t ? t : void 0
                  , i = "number" == typeof e ? e : void 0;
                this.renderer.updateContainerSize(r, i)
            }
            ,
            AnimationItem.prototype.setSubframe = function(t) {
                this.isSubframeEnabled = !!t
            }
            ,
            AnimationItem.prototype.gotoFrame = function() {
                this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame,
                this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted),
                this.trigger("enterFrame"),
                this.renderFrame(),
                this.trigger("drawnFrame")
            }
            ,
            AnimationItem.prototype.renderFrame = function() {
                if (!1 !== this.isLoaded && this.renderer)
                    try {
                        this.expressionsPlugin && this.expressionsPlugin.resetFrame(),
                        this.renderer.renderFrame(this.currentFrame + this.firstFrame)
                    } catch (t) {
                        this.triggerRenderFrameError(t)
                    }
            }
            ,
            AnimationItem.prototype.play = function(t) {
                t && this.name !== t || !0 === this.isPaused && (this.isPaused = !1,
                this.trigger("_play"),
                this.audioController.resume(),
                this._idle && (this._idle = !1,
                this.trigger("_active")))
            }
            ,
            AnimationItem.prototype.pause = function(t) {
                t && this.name !== t || !1 === this.isPaused && (this.isPaused = !0,
                this.trigger("_pause"),
                this._idle = !0,
                this.trigger("_idle"),
                this.audioController.pause())
            }
            ,
            AnimationItem.prototype.togglePause = function(t) {
                t && this.name !== t || (!0 === this.isPaused ? this.play() : this.pause())
            }
            ,
            AnimationItem.prototype.stop = function(t) {
                t && this.name !== t || (this.pause(),
                this.playCount = 0,
                this._completedLoop = !1,
                this.setCurrentRawFrameValue(0))
            }
            ,
            AnimationItem.prototype.getMarkerData = function(t) {
                for (var e, r = 0; r < this.markers.length; r += 1)
                    if ((e = this.markers[r]).payload && e.payload.name === t)
                        return e;
                return null
            }
            ,
            AnimationItem.prototype.goToAndStop = function(t, e, r) {
                if (!r || this.name === r) {
                    var i = Number(t);
                    if (isNaN(i)) {
                        var s = this.getMarkerData(t);
                        s && this.goToAndStop(s.time, !0)
                    } else
                        e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier);
                    this.pause()
                }
            }
            ,
            AnimationItem.prototype.goToAndPlay = function(t, e, r) {
                if (!r || this.name === r) {
                    var i = Number(t);
                    if (isNaN(i)) {
                        var s = this.getMarkerData(t);
                        s && (s.duration ? this.playSegments([s.time, s.time + s.duration], !0) : this.goToAndStop(s.time, !0))
                    } else
                        this.goToAndStop(i, e, r);
                    this.play()
                }
            }
            ,
            AnimationItem.prototype.advanceTime = function(t) {
                if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                    var e = this.currentRawFrame + t * this.frameModifier
                      , r = !1;
                    e >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? e >= this.totalFrames ? (this.playCount += 1,
                    this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames),
                    this._completedLoop = !0,
                    this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(e) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || (r = !0,
                    e = this.totalFrames - 1) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && !0 !== this.loop ? (r = !0,
                    e = 0) : (this.setCurrentRawFrameValue(this.totalFrames + e % this.totalFrames),
                    this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = !0)) : this.setCurrentRawFrameValue(e),
                    r && (this.setCurrentRawFrameValue(e),
                    this.pause(),
                    this.trigger("complete"))
                }
            }
            ,
            AnimationItem.prototype.adjustSegment = function(t, e) {
                this.playCount = 0,
                t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)),
                this.totalFrames = t[0] - t[1],
                this.timeCompleted = this.totalFrames,
                this.firstFrame = t[1],
                this.setCurrentRawFrameValue(this.totalFrames - .001 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)),
                this.totalFrames = t[1] - t[0],
                this.timeCompleted = this.totalFrames,
                this.firstFrame = t[0],
                this.setCurrentRawFrameValue(.001 + e)),
                this.trigger("segmentStart")
            }
            ,
            AnimationItem.prototype.setSegment = function(t, e) {
                var r = -1;
                this.isPaused && (this.currentRawFrame + this.firstFrame < t ? r = t : this.currentRawFrame + this.firstFrame > e && (r = e - t)),
                this.firstFrame = t,
                this.totalFrames = e - t,
                this.timeCompleted = this.totalFrames,
                -1 !== r && this.goToAndStop(r, !0)
            }
            ,
            AnimationItem.prototype.playSegments = function(t, e) {
                if (e && (this.segments.length = 0),
                "object" === _typeof$4(t[0])) {
                    var r, i = t.length;
                    for (r = 0; r < i; r += 1)
                        this.segments.push(t[r])
                } else
                    this.segments.push(t);
                this.segments.length && e && this.adjustSegment(this.segments.shift(), 0),
                this.isPaused && this.play()
            }
            ,
            AnimationItem.prototype.resetSegments = function(t) {
                this.segments.length = 0,
                this.segments.push([this.animationData.ip, this.animationData.op]),
                t && this.checkSegments(0)
            }
            ,
            AnimationItem.prototype.checkSegments = function(t) {
                return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t),
                !0)
            }
            ,
            AnimationItem.prototype.destroy = function(t) {
                t && this.name !== t || !this.renderer || (this.renderer.destroy(),
                this.imagePreloader.destroy(),
                this.trigger("destroy"),
                this._cbs = null,
                this.onEnterFrame = null,
                this.onLoopComplete = null,
                this.onComplete = null,
                this.onSegmentStart = null,
                this.onDestroy = null,
                this.renderer = null,
                this.expressionsPlugin = null,
                this.imagePreloader = null,
                this.projectInterface = null)
            }
            ,
            AnimationItem.prototype.setCurrentRawFrameValue = function(t) {
                this.currentRawFrame = t,
                this.gotoFrame()
            }
            ,
            AnimationItem.prototype.setSpeed = function(t) {
                this.playSpeed = t,
                this.updaFrameModifier()
            }
            ,
            AnimationItem.prototype.setDirection = function(t) {
                this.playDirection = t < 0 ? -1 : 1,
                this.updaFrameModifier()
            }
            ,
            AnimationItem.prototype.setLoop = function(t) {
                this.loop = t
            }
            ,
            AnimationItem.prototype.setVolume = function(t, e) {
                e && this.name !== e || this.audioController.setVolume(t)
            }
            ,
            AnimationItem.prototype.getVolume = function() {
                return this.audioController.getVolume()
            }
            ,
            AnimationItem.prototype.mute = function(t) {
                t && this.name !== t || this.audioController.mute()
            }
            ,
            AnimationItem.prototype.unmute = function(t) {
                t && this.name !== t || this.audioController.unmute()
            }
            ,
            AnimationItem.prototype.updaFrameModifier = function() {
                this.frameModifier = this.frameMult * this.playSpeed * this.playDirection,
                this.audioController.setRate(this.playSpeed * this.playDirection)
            }
            ,
            AnimationItem.prototype.getPath = function() {
                return this.path
            }
            ,
            AnimationItem.prototype.getAssetsPath = function(t) {
                var e = "";
                if (t.e)
                    e = t.p;
                else if (this.assetsPath) {
                    var r = t.p;
                    -1 !== r.indexOf("images/") && (r = r.split("/")[1]),
                    e = this.assetsPath + r
                } else
                    e = this.path,
                    e += t.u ? t.u : "",
                    e += t.p;
                return e
            }
            ,
            AnimationItem.prototype.getAssetData = function(t) {
                for (var e = 0, r = this.assets.length; e < r; ) {
                    if (t === this.assets[e].id)
                        return this.assets[e];
                    e += 1
                }
                return null
            }
            ,
            AnimationItem.prototype.hide = function() {
                this.renderer.hide()
            }
            ,
            AnimationItem.prototype.show = function() {
                this.renderer.show()
            }
            ,
            AnimationItem.prototype.getDuration = function(t) {
                return t ? this.totalFrames : this.totalFrames / this.frameRate
            }
            ,
            AnimationItem.prototype.updateDocumentData = function(t, e, r) {
                try {
                    this.renderer.getElementByPath(t).updateDocumentData(e, r)
                } catch (t) {}
            }
            ,
            AnimationItem.prototype.trigger = function(t) {
                if (this._cbs && this._cbs[t])
                    switch (t) {
                    case "enterFrame":
                        this.triggerEvent(t, new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameModifier));
                        break;
                    case "drawnFrame":
                        this.drawnFrameEvent.currentTime = this.currentFrame,
                        this.drawnFrameEvent.totalTime = this.totalFrames,
                        this.drawnFrameEvent.direction = this.frameModifier,
                        this.triggerEvent(t, this.drawnFrameEvent);
                        break;
                    case "loopComplete":
                        this.triggerEvent(t, new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult));
                        break;
                    case "complete":
                        this.triggerEvent(t, new BMCompleteEvent(t,this.frameMult));
                        break;
                    case "segmentStart":
                        this.triggerEvent(t, new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames));
                        break;
                    case "destroy":
                        this.triggerEvent(t, new BMDestroyEvent(t,this));
                        break;
                    default:
                        this.triggerEvent(t)
                    }
                "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t,this.currentFrame,this.totalFrames,this.frameMult)),
                "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t,this.loop,this.playCount,this.frameMult)),
                "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t,this.frameMult)),
                "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t,this.firstFrame,this.totalFrames)),
                "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t,this))
            }
            ,
            AnimationItem.prototype.triggerRenderFrameError = function(t) {
                var e = new BMRenderFrameErrorEvent(t,this.currentFrame);
                this.triggerEvent("error", e),
                this.onError && this.onError.call(this, e)
            }
            ,
            AnimationItem.prototype.triggerConfigError = function(t) {
                var e = new BMConfigErrorEvent(t,this.currentFrame);
                this.triggerEvent("error", e),
                this.onError && this.onError.call(this, e)
            }
            ;
            var animationManager = function() {
                var t = {}
                  , e = []
                  , r = 0
                  , i = 0
                  , s = 0
                  , a = !0
                  , n = !1;
                function o(t) {
                    for (var r = 0, s = t.target; r < i; )
                        e[r].animation === s && (e.splice(r, 1),
                        r -= 1,
                        i -= 1,
                        s.isPaused || p()),
                        r += 1
                }
                function h(t, r) {
                    if (!t)
                        return null;
                    for (var s = 0; s < i; ) {
                        if (e[s].elem === t && null !== e[s].elem)
                            return e[s].animation;
                        s += 1
                    }
                    var a = new AnimationItem;
                    return c(a, t),
                    a.setData(t, r),
                    a
                }
                function l() {
                    s += 1,
                    d()
                }
                function p() {
                    s -= 1
                }
                function c(t, r) {
                    t.addEventListener("destroy", o),
                    t.addEventListener("_active", l),
                    t.addEventListener("_idle", p),
                    e.push({
                        elem: r,
                        animation: t
                    }),
                    i += 1
                }
                function f(t) {
                    var o, h = t - r;
                    for (o = 0; o < i; o += 1)
                        e[o].animation.advanceTime(h);
                    r = t,
                    s && !n ? window.requestAnimationFrame(f) : a = !0
                }
                function u(t) {
                    r = t,
                    window.requestAnimationFrame(f)
                }
                function d() {
                    !n && s && a && (window.requestAnimationFrame(u),
                    a = !1)
                }
                return t.registerAnimation = h,
                t.loadAnimation = function(t) {
                    var e = new AnimationItem;
                    return c(e, null),
                    e.setParams(t),
                    e
                }
                ,
                t.setSpeed = function(t, r) {
                    var s;
                    for (s = 0; s < i; s += 1)
                        e[s].animation.setSpeed(t, r)
                }
                ,
                t.setDirection = function(t, r) {
                    var s;
                    for (s = 0; s < i; s += 1)
                        e[s].animation.setDirection(t, r)
                }
                ,
                t.play = function(t) {
                    var r;
                    for (r = 0; r < i; r += 1)
                        e[r].animation.play(t)
                }
                ,
                t.pause = function(t) {
                    var r;
                    for (r = 0; r < i; r += 1)
                        e[r].animation.pause(t)
                }
                ,
                t.stop = function(t) {
                    var r;
                    for (r = 0; r < i; r += 1)
                        e[r].animation.stop(t)
                }
                ,
                t.togglePause = function(t) {
                    var r;
                    for (r = 0; r < i; r += 1)
                        e[r].animation.togglePause(t)
                }
                ,
                t.searchAnimations = function(t, e, r) {
                    var i, s = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))), a = s.length;
                    for (i = 0; i < a; i += 1)
                        r && s[i].setAttribute("data-bm-type", r),
                        h(s[i], t);
                    if (e && 0 === a) {
                        r || (r = "svg");
                        var n = document.getElementsByTagName("body")[0];
                        n.innerText = "";
                        var o = createTag("div");
                        o.style.width = "100%",
                        o.style.height = "100%",
                        o.setAttribute("data-bm-type", r),
                        n.appendChild(o),
                        h(o, t)
                    }
                }
                ,
                t.resize = function() {
                    var t;
                    for (t = 0; t < i; t += 1)
                        e[t].animation.resize()
                }
                ,
                t.goToAndStop = function(t, r, s) {
                    var a;
                    for (a = 0; a < i; a += 1)
                        e[a].animation.goToAndStop(t, r, s)
                }
                ,
                t.destroy = function(t) {
                    var r;
                    for (r = i - 1; r >= 0; r -= 1)
                        e[r].animation.destroy(t)
                }
                ,
                t.freeze = function() {
                    n = !0
                }
                ,
                t.unfreeze = function() {
                    n = !1,
                    d()
                }
                ,
                t.setVolume = function(t, r) {
                    var s;
                    for (s = 0; s < i; s += 1)
                        e[s].animation.setVolume(t, r)
                }
                ,
                t.mute = function(t) {
                    var r;
                    for (r = 0; r < i; r += 1)
                        e[r].animation.mute(t)
                }
                ,
                t.unmute = function(t) {
                    var r;
                    for (r = 0; r < i; r += 1)
                        e[r].animation.unmute(t)
                }
                ,
                t.getRegisteredAnimations = function() {
                    var t, r = e.length, i = [];
                    for (t = 0; t < r; t += 1)
                        i.push(e[t].animation);
                    return i
                }
                ,
                t
            }()
              , BezierFactory = function() {
                var t = {
                    getBezierEasing: function(t, r, i, s, a) {
                        var n = a || ("bez_" + t + "_" + r + "_" + i + "_" + s).replace(/\./g, "p");
                        if (e[n])
                            return e[n];
                        var o = new l([t, r, i, s]);
                        return e[n] = o,
                        o
                    }
                }
                  , e = {}
                  , r = .1
                  , i = "function" == typeof Float32Array;
                function s(t, e) {
                    return 1 - 3 * e + 3 * t
                }
                function a(t, e) {
                    return 3 * e - 6 * t
                }
                function n(t) {
                    return 3 * t
                }
                function o(t, e, r) {
                    return ((s(e, r) * t + a(e, r)) * t + n(e)) * t
                }
                function h(t, e, r) {
                    return 3 * s(e, r) * t * t + 2 * a(e, r) * t + n(e)
                }
                function l(t) {
                    this._p = t,
                    this._mSampleValues = i ? new Float32Array(11) : new Array(11),
                    this._precomputed = !1,
                    this.get = this.get.bind(this)
                }
                return l.prototype = {
                    get: function(t) {
                        var e = this._p[0]
                          , r = this._p[1]
                          , i = this._p[2]
                          , s = this._p[3];
                        return this._precomputed || this._precompute(),
                        e === r && i === s ? t : 0 === t ? 0 : 1 === t ? 1 : o(this._getTForX(t), r, s)
                    },
                    _precompute: function() {
                        var t = this._p[0]
                          , e = this._p[1]
                          , r = this._p[2]
                          , i = this._p[3];
                        this._precomputed = !0,
                        t === e && r === i || this._calcSampleValues()
                    },
                    _calcSampleValues: function() {
                        for (var t = this._p[0], e = this._p[2], i = 0; i < 11; ++i)
                            this._mSampleValues[i] = o(i * r, t, e)
                    },
                    _getTForX: function(t) {
                        for (var e = this._p[0], i = this._p[2], s = this._mSampleValues, a = 0, n = 1; 10 !== n && s[n] <= t; ++n)
                            a += r;
                        var l = a + (t - s[--n]) / (s[n + 1] - s[n]) * r
                          , p = h(l, e, i);
                        return p >= .001 ? function(t, e, r, i) {
                            for (var s = 0; s < 4; ++s) {
                                var a = h(e, r, i);
                                if (0 === a)
                                    return e;
                                e -= (o(e, r, i) - t) / a
                            }
                            return e
                        }(t, l, e, i) : 0 === p ? l : function(t, e, r, i, s) {
                            var a, n, h = 0;
                            do {
                                (a = o(n = e + (r - e) / 2, i, s) - t) > 0 ? r = n : e = n
                            } while (Math.abs(a) > 1e-7 && ++h < 10);
                            return n
                        }(t, a, a + r, e, i)
                    }
                },
                t
            }()
              , pooling = {
                double: function(t) {
                    return t.concat(createSizedArray(t.length))
                }
            }
              , poolFactory = function(t, e, r) {
                var i = 0
                  , s = t
                  , a = createSizedArray(s);
                return {
                    newElement: function() {
                        return i ? a[i -= 1] : e()
                    },
                    release: function(t) {
                        i === s && (a = pooling.double(a),
                        s *= 2),
                        r && r(t),
                        a[i] = t,
                        i += 1
                    }
                }
            }
              , bezierLengthPool = poolFactory(8, (function() {
                return {
                    addedLength: 0,
                    percents: createTypedArray("float32", getDefaultCurveSegments()),
                    lengths: createTypedArray("float32", getDefaultCurveSegments())
                }
            }
            ))
              , segmentsLengthPool = poolFactory(8, (function() {
                return {
                    lengths: [],
                    totalLength: 0
                }
            }
            ), (function(t) {
                var e, r = t.lengths.length;
                for (e = 0; e < r; e += 1)
                    bezierLengthPool.release(t.lengths[e]);
                t.lengths.length = 0
            }
            ));
            function bezFunction() {
                var t = Math;
                function e(t, e, r, i, s, a) {
                    var n = t * i + e * s + r * a - s * i - a * t - r * e;
                    return n > -.001 && n < .001
                }
                var r = function(t, e, r, i) {
                    var s, a, n, o, h, l, p = getDefaultCurveSegments(), c = 0, f = [], u = [], d = bezierLengthPool.newElement();
                    for (n = r.length,
                    s = 0; s < p; s += 1) {
                        for (h = s / (p - 1),
                        l = 0,
                        a = 0; a < n; a += 1)
                            o = bmPow(1 - h, 3) * t[a] + 3 * bmPow(1 - h, 2) * h * r[a] + 3 * (1 - h) * bmPow(h, 2) * i[a] + bmPow(h, 3) * e[a],
                            f[a] = o,
                            null !== u[a] && (l += bmPow(f[a] - u[a], 2)),
                            u[a] = f[a];
                        l && (c += l = bmSqrt(l)),
                        d.percents[s] = h,
                        d.lengths[s] = c
                    }
                    return d.addedLength = c,
                    d
                };
                function i(t) {
                    this.segmentLength = 0,
                    this.points = new Array(t)
                }
                function s(t, e) {
                    this.partialLength = t,
                    this.point = e
                }
                var a, n = (a = {},
                function(t, r, n, o) {
                    var h = (t[0] + "_" + t[1] + "_" + r[0] + "_" + r[1] + "_" + n[0] + "_" + n[1] + "_" + o[0] + "_" + o[1]).replace(/\./g, "p");
                    if (!a[h]) {
                        var l, p, c, f, u, d, m, y = getDefaultCurveSegments(), g = 0, v = null;
                        2 === t.length && (t[0] !== r[0] || t[1] !== r[1]) && e(t[0], t[1], r[0], r[1], t[0] + n[0], t[1] + n[1]) && e(t[0], t[1], r[0], r[1], r[0] + o[0], r[1] + o[1]) && (y = 2);
                        var b = new i(y);
                        for (c = n.length,
                        l = 0; l < y; l += 1) {
                            for (m = createSizedArray(c),
                            u = l / (y - 1),
                            d = 0,
                            p = 0; p < c; p += 1)
                                f = bmPow(1 - u, 3) * t[p] + 3 * bmPow(1 - u, 2) * u * (t[p] + n[p]) + 3 * (1 - u) * bmPow(u, 2) * (r[p] + o[p]) + bmPow(u, 3) * r[p],
                                m[p] = f,
                                null !== v && (d += bmPow(m[p] - v[p], 2));
                            g += d = bmSqrt(d),
                            b.points[l] = new s(d,m),
                            v = m
                        }
                        b.segmentLength = g,
                        a[h] = b
                    }
                    return a[h]
                }
                );
                function o(t, e) {
                    var r = e.percents
                      , i = e.lengths
                      , s = r.length
                      , a = bmFloor((s - 1) * t)
                      , n = t * e.addedLength
                      , o = 0;
                    if (a === s - 1 || 0 === a || n === i[a])
                        return r[a];
                    for (var h = i[a] > n ? -1 : 1, l = !0; l; )
                        if (i[a] <= n && i[a + 1] > n ? (o = (n - i[a]) / (i[a + 1] - i[a]),
                        l = !1) : a += h,
                        a < 0 || a >= s - 1) {
                            if (a === s - 1)
                                return r[a];
                            l = !1
                        }
                    return r[a] + (r[a + 1] - r[a]) * o
                }
                var h = createTypedArray("float32", 8);
                return {
                    getSegmentsLength: function(t) {
                        var e, i = segmentsLengthPool.newElement(), s = t.c, a = t.v, n = t.o, o = t.i, h = t._length, l = i.lengths, p = 0;
                        for (e = 0; e < h - 1; e += 1)
                            l[e] = r(a[e], a[e + 1], n[e], o[e + 1]),
                            p += l[e].addedLength;
                        return s && h && (l[e] = r(a[e], a[0], n[e], o[0]),
                        p += l[e].addedLength),
                        i.totalLength = p,
                        i
                    },
                    getNewSegment: function(e, r, i, s, a, n, l) {
                        a < 0 ? a = 0 : a > 1 && (a = 1);
                        var p, c = o(a, l), f = o(n = n > 1 ? 1 : n, l), u = e.length, d = 1 - c, m = 1 - f, y = d * d * d, g = c * d * d * 3, v = c * c * d * 3, b = c * c * c, _ = d * d * m, P = c * d * m + d * c * m + d * d * f, S = c * c * m + d * c * f + c * d * f, E = c * c * f, x = d * m * m, C = c * m * m + d * f * m + d * m * f, A = c * f * m + d * f * f + c * m * f, w = c * f * f, k = m * m * m, T = f * m * m + m * f * m + m * m * f, M = f * f * m + m * f * f + f * m * f, D = f * f * f;
                        for (p = 0; p < u; p += 1)
                            h[4 * p] = t.round(1e3 * (y * e[p] + g * i[p] + v * s[p] + b * r[p])) / 1e3,
                            h[4 * p + 1] = t.round(1e3 * (_ * e[p] + P * i[p] + S * s[p] + E * r[p])) / 1e3,
                            h[4 * p + 2] = t.round(1e3 * (x * e[p] + C * i[p] + A * s[p] + w * r[p])) / 1e3,
                            h[4 * p + 3] = t.round(1e3 * (k * e[p] + T * i[p] + M * s[p] + D * r[p])) / 1e3;
                        return h
                    },
                    getPointInSegment: function(e, r, i, s, a, n) {
                        var h = o(a, n)
                          , l = 1 - h;
                        return [t.round(1e3 * (l * l * l * e[0] + (h * l * l + l * h * l + l * l * h) * i[0] + (h * h * l + l * h * h + h * l * h) * s[0] + h * h * h * r[0])) / 1e3, t.round(1e3 * (l * l * l * e[1] + (h * l * l + l * h * l + l * l * h) * i[1] + (h * h * l + l * h * h + h * l * h) * s[1] + h * h * h * r[1])) / 1e3]
                    },
                    buildBezierData: n,
                    pointOnLine2D: e,
                    pointOnLine3D: function(r, i, s, a, n, o, h, l, p) {
                        if (0 === s && 0 === o && 0 === p)
                            return e(r, i, a, n, h, l);
                        var c, f = t.sqrt(t.pow(a - r, 2) + t.pow(n - i, 2) + t.pow(o - s, 2)), u = t.sqrt(t.pow(h - r, 2) + t.pow(l - i, 2) + t.pow(p - s, 2)), d = t.sqrt(t.pow(h - a, 2) + t.pow(l - n, 2) + t.pow(p - o, 2));
                        return (c = f > u ? f > d ? f - u - d : d - u - f : d > u ? d - u - f : u - f - d) > -1e-4 && c < 1e-4
                    }
                }
            }
            var bez = bezFunction()
              , initFrame = initialDefaultFrame
              , mathAbs = Math.abs;
            function interpolateValue(t, e) {
                var r, i = this.offsetTime;
                "multidimensional" === this.propType && (r = createTypedArray("float32", this.pv.length));
                for (var s, a, n, o, h, l, p, c, f, u = e.lastIndex, d = u, m = this.keyframes.length - 1, y = !0; y; ) {
                    if (s = this.keyframes[d],
                    a = this.keyframes[d + 1],
                    d === m - 1 && t >= a.t - i) {
                        s.h && (s = a),
                        u = 0;
                        break
                    }
                    if (a.t - i > t) {
                        u = d;
                        break
                    }
                    d < m - 1 ? d += 1 : (u = 0,
                    y = !1)
                }
                n = this.keyframesMetadata[d] || {};
                var g, v = a.t - i, b = s.t - i;
                if (s.to) {
                    n.bezierData || (n.bezierData = bez.buildBezierData(s.s, a.s || s.e, s.to, s.ti));
                    var _ = n.bezierData;
                    if (t >= v || t < b) {
                        var P = t >= v ? _.points.length - 1 : 0;
                        for (h = _.points[P].point.length,
                        o = 0; o < h; o += 1)
                            r[o] = _.points[P].point[o]
                    } else {
                        n.__fnct ? f = n.__fnct : (f = BezierFactory.getBezierEasing(s.o.x, s.o.y, s.i.x, s.i.y, s.n).get,
                        n.__fnct = f),
                        l = f((t - b) / (v - b));
                        var S, E = _.segmentLength * l, x = e.lastFrame < t && e._lastKeyframeIndex === d ? e._lastAddedLength : 0;
                        for (c = e.lastFrame < t && e._lastKeyframeIndex === d ? e._lastPoint : 0,
                        y = !0,
                        p = _.points.length; y; ) {
                            if (x += _.points[c].partialLength,
                            0 === E || 0 === l || c === _.points.length - 1) {
                                for (h = _.points[c].point.length,
                                o = 0; o < h; o += 1)
                                    r[o] = _.points[c].point[o];
                                break
                            }
                            if (E >= x && E < x + _.points[c + 1].partialLength) {
                                for (S = (E - x) / _.points[c + 1].partialLength,
                                h = _.points[c].point.length,
                                o = 0; o < h; o += 1)
                                    r[o] = _.points[c].point[o] + (_.points[c + 1].point[o] - _.points[c].point[o]) * S;
                                break
                            }
                            c < p - 1 ? c += 1 : y = !1
                        }
                        e._lastPoint = c,
                        e._lastAddedLength = x - _.points[c].partialLength,
                        e._lastKeyframeIndex = d
                    }
                } else {
                    var C, A, w, k, T;
                    if (m = s.s.length,
                    g = a.s || s.e,
                    this.sh && 1 !== s.h)
                        t >= v ? (r[0] = g[0],
                        r[1] = g[1],
                        r[2] = g[2]) : t <= b ? (r[0] = s.s[0],
                        r[1] = s.s[1],
                        r[2] = s.s[2]) : quaternionToEuler(r, slerp(createQuaternion(s.s), createQuaternion(g), (t - b) / (v - b)));
                    else
                        for (d = 0; d < m; d += 1)
                            1 !== s.h && (t >= v ? l = 1 : t < b ? l = 0 : (s.o.x.constructor === Array ? (n.__fnct || (n.__fnct = []),
                            n.__fnct[d] ? f = n.__fnct[d] : (C = void 0 === s.o.x[d] ? s.o.x[0] : s.o.x[d],
                            A = void 0 === s.o.y[d] ? s.o.y[0] : s.o.y[d],
                            w = void 0 === s.i.x[d] ? s.i.x[0] : s.i.x[d],
                            k = void 0 === s.i.y[d] ? s.i.y[0] : s.i.y[d],
                            f = BezierFactory.getBezierEasing(C, A, w, k).get,
                            n.__fnct[d] = f)) : n.__fnct ? f = n.__fnct : (C = s.o.x,
                            A = s.o.y,
                            w = s.i.x,
                            k = s.i.y,
                            f = BezierFactory.getBezierEasing(C, A, w, k).get,
                            s.keyframeMetadata = f),
                            l = f((t - b) / (v - b)))),
                            g = a.s || s.e,
                            T = 1 === s.h ? s.s[d] : s.s[d] + (g[d] - s.s[d]) * l,
                            "multidimensional" === this.propType ? r[d] = T : r = T
                }
                return e.lastIndex = u,
                r
            }
            function slerp(t, e, r) {
                var i, s, a, n, o, h = [], l = t[0], p = t[1], c = t[2], f = t[3], u = e[0], d = e[1], m = e[2], y = e[3];
                return (s = l * u + p * d + c * m + f * y) < 0 && (s = -s,
                u = -u,
                d = -d,
                m = -m,
                y = -y),
                1 - s > 1e-6 ? (i = Math.acos(s),
                a = Math.sin(i),
                n = Math.sin((1 - r) * i) / a,
                o = Math.sin(r * i) / a) : (n = 1 - r,
                o = r),
                h[0] = n * l + o * u,
                h[1] = n * p + o * d,
                h[2] = n * c + o * m,
                h[3] = n * f + o * y,
                h
            }
            function quaternionToEuler(t, e) {
                var r = e[0]
                  , i = e[1]
                  , s = e[2]
                  , a = e[3]
                  , n = Math.atan2(2 * i * a - 2 * r * s, 1 - 2 * i * i - 2 * s * s)
                  , o = Math.asin(2 * r * i + 2 * s * a)
                  , h = Math.atan2(2 * r * a - 2 * i * s, 1 - 2 * r * r - 2 * s * s);
                t[0] = n / degToRads,
                t[1] = o / degToRads,
                t[2] = h / degToRads
            }
            function createQuaternion(t) {
                var e = t[0] * degToRads
                  , r = t[1] * degToRads
                  , i = t[2] * degToRads
                  , s = Math.cos(e / 2)
                  , a = Math.cos(r / 2)
                  , n = Math.cos(i / 2)
                  , o = Math.sin(e / 2)
                  , h = Math.sin(r / 2)
                  , l = Math.sin(i / 2);
                return [o * h * n + s * a * l, o * a * n + s * h * l, s * h * n - o * a * l, s * a * n - o * h * l]
            }
            function getValueAtCurrentTime() {
                var t = this.comp.renderedFrame - this.offsetTime
                  , e = this.keyframes[0].t - this.offsetTime
                  , r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                if (!(t === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= r && t >= r || this._caching.lastFrame < e && t < e))) {
                    this._caching.lastFrame >= t && (this._caching._lastKeyframeIndex = -1,
                    this._caching.lastIndex = 0);
                    var i = this.interpolateValue(t, this._caching);
                    this.pv = i
                }
                return this._caching.lastFrame = t,
                this.pv
            }
            function setVValue(t) {
                var e;
                if ("unidimensional" === this.propType)
                    e = t * this.mult,
                    mathAbs(this.v - e) > 1e-5 && (this.v = e,
                    this._mdf = !0);
                else
                    for (var r = 0, i = this.v.length; r < i; )
                        e = t[r] * this.mult,
                        mathAbs(this.v[r] - e) > 1e-5 && (this.v[r] = e,
                        this._mdf = !0),
                        r += 1
            }
            function processEffectsSequence() {
                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                    if (this.lock)
                        this.setVValue(this.pv);
                    else {
                        var t;
                        this.lock = !0,
                        this._mdf = this._isFirstFrame;
                        var e = this.effectsSequence.length
                          , r = this.kf ? this.pv : this.data.k;
                        for (t = 0; t < e; t += 1)
                            r = this.effectsSequence[t](r);
                        this.setVValue(r),
                        this._isFirstFrame = !1,
                        this.lock = !1,
                        this.frameId = this.elem.globalData.frameId
                    }
            }
            function addEffect(t) {
                this.effectsSequence.push(t),
                this.container.addDynamicProperty(this)
            }
            function ValueProperty(t, e, r, i) {
                this.propType = "unidimensional",
                this.mult = r || 1,
                this.data = e,
                this.v = r ? e.k * r : e.k,
                this.pv = e.k,
                this._mdf = !1,
                this.elem = t,
                this.container = i,
                this.comp = t.comp,
                this.k = !1,
                this.kf = !1,
                this.vel = 0,
                this.effectsSequence = [],
                this._isFirstFrame = !0,
                this.getValue = processEffectsSequence,
                this.setVValue = setVValue,
                this.addEffect = addEffect
            }
            function MultiDimensionalProperty(t, e, r, i) {
                var s;
                this.propType = "multidimensional",
                this.mult = r || 1,
                this.data = e,
                this._mdf = !1,
                this.elem = t,
                this.container = i,
                this.comp = t.comp,
                this.k = !1,
                this.kf = !1,
                this.frameId = -1;
                var a = e.k.length;
                for (this.v = createTypedArray("float32", a),
                this.pv = createTypedArray("float32", a),
                this.vel = createTypedArray("float32", a),
                s = 0; s < a; s += 1)
                    this.v[s] = e.k[s] * this.mult,
                    this.pv[s] = e.k[s];
                this._isFirstFrame = !0,
                this.effectsSequence = [],
                this.getValue = processEffectsSequence,
                this.setVValue = setVValue,
                this.addEffect = addEffect
            }
            function KeyframedValueProperty(t, e, r, i) {
                this.propType = "unidimensional",
                this.keyframes = e.k,
                this.keyframesMetadata = [],
                this.offsetTime = t.data.st,
                this.frameId = -1,
                this._caching = {
                    lastFrame: initFrame,
                    lastIndex: 0,
                    value: 0,
                    _lastKeyframeIndex: -1
                },
                this.k = !0,
                this.kf = !0,
                this.data = e,
                this.mult = r || 1,
                this.elem = t,
                this.container = i,
                this.comp = t.comp,
                this.v = initFrame,
                this.pv = initFrame,
                this._isFirstFrame = !0,
                this.getValue = processEffectsSequence,
                this.setVValue = setVValue,
                this.interpolateValue = interpolateValue,
                this.effectsSequence = [getValueAtCurrentTime.bind(this)],
                this.addEffect = addEffect
            }
            function KeyframedMultidimensionalProperty(t, e, r, i) {
                var s;
                this.propType = "multidimensional";
                var a, n, o, h, l = e.k.length;
                for (s = 0; s < l - 1; s += 1)
                    e.k[s].to && e.k[s].s && e.k[s + 1] && e.k[s + 1].s && (a = e.k[s].s,
                    n = e.k[s + 1].s,
                    o = e.k[s].to,
                    h = e.k[s].ti,
                    (2 === a.length && (a[0] !== n[0] || a[1] !== n[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], a[0] + o[0], a[1] + o[1]) && bez.pointOnLine2D(a[0], a[1], n[0], n[1], n[0] + h[0], n[1] + h[1]) || 3 === a.length && (a[0] !== n[0] || a[1] !== n[1] || a[2] !== n[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], a[0] + o[0], a[1] + o[1], a[2] + o[2]) && bez.pointOnLine3D(a[0], a[1], a[2], n[0], n[1], n[2], n[0] + h[0], n[1] + h[1], n[2] + h[2])) && (e.k[s].to = null,
                    e.k[s].ti = null),
                    a[0] === n[0] && a[1] === n[1] && 0 === o[0] && 0 === o[1] && 0 === h[0] && 0 === h[1] && (2 === a.length || a[2] === n[2] && 0 === o[2] && 0 === h[2]) && (e.k[s].to = null,
                    e.k[s].ti = null));
                this.effectsSequence = [getValueAtCurrentTime.bind(this)],
                this.data = e,
                this.keyframes = e.k,
                this.keyframesMetadata = [],
                this.offsetTime = t.data.st,
                this.k = !0,
                this.kf = !0,
                this._isFirstFrame = !0,
                this.mult = r || 1,
                this.elem = t,
                this.container = i,
                this.comp = t.comp,
                this.getValue = processEffectsSequence,
                this.setVValue = setVValue,
                this.interpolateValue = interpolateValue,
                this.frameId = -1;
                var p = e.k[0].s.length;
                for (this.v = createTypedArray("float32", p),
                this.pv = createTypedArray("float32", p),
                s = 0; s < p; s += 1)
                    this.v[s] = initFrame,
                    this.pv[s] = initFrame;
                this._caching = {
                    lastFrame: initFrame,
                    lastIndex: 0,
                    value: createTypedArray("float32", p)
                },
                this.addEffect = addEffect
            }
            var PropertyFactory = (ob = {
                getProp: function(t, e, r, i, s) {
                    var a;
                    if (e.sid && (e = t.globalData.slotManager.getProp(e)),
                    e.k.length)
                        if ("number" == typeof e.k[0])
                            a = new MultiDimensionalProperty(t,e,i,s);
                        else
                            switch (r) {
                            case 0:
                                a = new KeyframedValueProperty(t,e,i,s);
                                break;
                            case 1:
                                a = new KeyframedMultidimensionalProperty(t,e,i,s)
                            }
                    else
                        a = new ValueProperty(t,e,i,s);
                    return a.effectsSequence.length && s.addDynamicProperty(a),
                    a
                }
            },
            ob), ob;
            function DynamicPropertyContainer() {}
            DynamicPropertyContainer.prototype = {
                addDynamicProperty: function(t) {
                    -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t),
                    this.container.addDynamicProperty(this),
                    this._isAnimated = !0)
                },
                iterateDynamicProperties: function() {
                    var t;
                    this._mdf = !1;
                    var e = this.dynamicProperties.length;
                    for (t = 0; t < e; t += 1)
                        this.dynamicProperties[t].getValue(),
                        this.dynamicProperties[t]._mdf && (this._mdf = !0)
                },
                initDynamicPropertyContainer: function(t) {
                    this.container = t,
                    this.dynamicProperties = [],
                    this._mdf = !1,
                    this._isAnimated = !1
                }
            };
            var pointPool = poolFactory(8, (function() {
                return createTypedArray("float32", 2)
            }
            ));
            function ShapePath() {
                this.c = !1,
                this._length = 0,
                this._maxLength = 8,
                this.v = createSizedArray(this._maxLength),
                this.o = createSizedArray(this._maxLength),
                this.i = createSizedArray(this._maxLength)
            }
            ShapePath.prototype.setPathData = function(t, e) {
                this.c = t,
                this.setLength(e);
                for (var r = 0; r < e; )
                    this.v[r] = pointPool.newElement(),
                    this.o[r] = pointPool.newElement(),
                    this.i[r] = pointPool.newElement(),
                    r += 1
            }
            ,
            ShapePath.prototype.setLength = function(t) {
                for (; this._maxLength < t; )
                    this.doubleArrayLength();
                this._length = t
            }
            ,
            ShapePath.prototype.doubleArrayLength = function() {
                this.v = this.v.concat(createSizedArray(this._maxLength)),
                this.i = this.i.concat(createSizedArray(this._maxLength)),
                this.o = this.o.concat(createSizedArray(this._maxLength)),
                this._maxLength *= 2
            }
            ,
            ShapePath.prototype.setXYAt = function(t, e, r, i, s) {
                var a;
                switch (this._length = Math.max(this._length, i + 1),
                this._length >= this._maxLength && this.doubleArrayLength(),
                r) {
                case "v":
                    a = this.v;
                    break;
                case "i":
                    a = this.i;
                    break;
                case "o":
                    a = this.o;
                    break;
                default:
                    a = []
                }
                (!a[i] || a[i] && !s) && (a[i] = pointPool.newElement()),
                a[i][0] = t,
                a[i][1] = e
            }
            ,
            ShapePath.prototype.setTripleAt = function(t, e, r, i, s, a, n, o) {
                this.setXYAt(t, e, "v", n, o),
                this.setXYAt(r, i, "o", n, o),
                this.setXYAt(s, a, "i", n, o)
            }
            ,
            ShapePath.prototype.reverse = function() {
                var t = new ShapePath;
                t.setPathData(this.c, this._length);
                var e = this.v
                  , r = this.o
                  , i = this.i
                  , s = 0;
                this.c && (t.setTripleAt(e[0][0], e[0][1], i[0][0], i[0][1], r[0][0], r[0][1], 0, !1),
                s = 1);
                var a, n = this._length - 1, o = this._length;
                for (a = s; a < o; a += 1)
                    t.setTripleAt(e[n][0], e[n][1], i[n][0], i[n][1], r[n][0], r[n][1], a, !1),
                    n -= 1;
                return t
            }
            ,
            ShapePath.prototype.length = function() {
                return this._length
            }
            ;
            var shapePool = (factory = poolFactory(4, (function() {
                return new ShapePath
            }
            ), (function(t) {
                var e, r = t._length;
                for (e = 0; e < r; e += 1)
                    pointPool.release(t.v[e]),
                    pointPool.release(t.i[e]),
                    pointPool.release(t.o[e]),
                    t.v[e] = null,
                    t.i[e] = null,
                    t.o[e] = null;
                t._length = 0,
                t.c = !1
            }
            )),
            factory.clone = function(t) {
                var e, r = factory.newElement(), i = void 0 === t._length ? t.v.length : t._length;
                for (r.setLength(i),
                r.c = t.c,
                e = 0; e < i; e += 1)
                    r.setTripleAt(t.v[e][0], t.v[e][1], t.o[e][0], t.o[e][1], t.i[e][0], t.i[e][1], e);
                return r
            }
            ,
            factory), factory;
            function ShapeCollection() {
                this._length = 0,
                this._maxLength = 4,
                this.shapes = createSizedArray(this._maxLength)
            }
            ShapeCollection.prototype.addShape = function(t) {
                this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)),
                this._maxLength *= 2),
                this.shapes[this._length] = t,
                this._length += 1
            }
            ,
            ShapeCollection.prototype.releaseShapes = function() {
                var t;
                for (t = 0; t < this._length; t += 1)
                    shapePool.release(this.shapes[t]);
                this._length = 0
            }
            ;
            var shapeCollectionPool = function() {
                var t = {
                    newShapeCollection: function() {
                        return e ? i[e -= 1] : new ShapeCollection
                    },
                    release: function(t) {
                        var s, a = t._length;
                        for (s = 0; s < a; s += 1)
                            shapePool.release(t.shapes[s]);
                        t._length = 0,
                        e === r && (i = pooling.double(i),
                        r *= 2),
                        i[e] = t,
                        e += 1
                    }
                }
                  , e = 0
                  , r = 4
                  , i = createSizedArray(r);
                return t
            }()
              , ShapePropertyFactory = function() {
                var t = -999999;
                function e(t, e, r) {
                    var i, s, a, n, o, h, l, p, c, f = r.lastIndex, u = this.keyframes;
                    if (t < u[0].t - this.offsetTime)
                        i = u[0].s[0],
                        a = !0,
                        f = 0;
                    else if (t >= u[u.length - 1].t - this.offsetTime)
                        i = u[u.length - 1].s ? u[u.length - 1].s[0] : u[u.length - 2].e[0],
                        a = !0;
                    else {
                        for (var d, m, y, g = f, v = u.length - 1, b = !0; b && (d = u[g],
                        !((m = u[g + 1]).t - this.offsetTime > t)); )
                            g < v - 1 ? g += 1 : b = !1;
                        if (y = this.keyframesMetadata[g] || {},
                        f = g,
                        !(a = 1 === d.h)) {
                            if (t >= m.t - this.offsetTime)
                                p = 1;
                            else if (t < d.t - this.offsetTime)
                                p = 0;
                            else {
                                var _;
                                y.__fnct ? _ = y.__fnct : (_ = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get,
                                y.__fnct = _),
                                p = _((t - (d.t - this.offsetTime)) / (m.t - this.offsetTime - (d.t - this.offsetTime)))
                            }
                            s = m.s ? m.s[0] : d.e[0]
                        }
                        i = d.s[0]
                    }
                    for (h = e._length,
                    l = i.i[0].length,
                    r.lastIndex = f,
                    n = 0; n < h; n += 1)
                        for (o = 0; o < l; o += 1)
                            c = a ? i.i[n][o] : i.i[n][o] + (s.i[n][o] - i.i[n][o]) * p,
                            e.i[n][o] = c,
                            c = a ? i.o[n][o] : i.o[n][o] + (s.o[n][o] - i.o[n][o]) * p,
                            e.o[n][o] = c,
                            c = a ? i.v[n][o] : i.v[n][o] + (s.v[n][o] - i.v[n][o]) * p,
                            e.v[n][o] = c
                }
                function r() {
                    var e = this.comp.renderedFrame - this.offsetTime
                      , r = this.keyframes[0].t - this.offsetTime
                      , i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime
                      , s = this._caching.lastFrame;
                    return s !== t && (s < r && e < r || s > i && e > i) || (this._caching.lastIndex = s < e ? this._caching.lastIndex : 0,
                    this.interpolateShape(e, this.pv, this._caching)),
                    this._caching.lastFrame = e,
                    this.pv
                }
                function i() {
                    this.paths = this.localShapeCollection
                }
                function s(t) {
                    (function(t, e) {
                        if (t._length !== e._length || t.c !== e.c)
                            return !1;
                        var r, i = t._length;
                        for (r = 0; r < i; r += 1)
                            if (t.v[r][0] !== e.v[r][0] || t.v[r][1] !== e.v[r][1] || t.o[r][0] !== e.o[r][0] || t.o[r][1] !== e.o[r][1] || t.i[r][0] !== e.i[r][0] || t.i[r][1] !== e.i[r][1])
                                return !1;
                        return !0
                    }
                    )(this.v, t) || (this.v = shapePool.clone(t),
                    this.localShapeCollection.releaseShapes(),
                    this.localShapeCollection.addShape(this.v),
                    this._mdf = !0,
                    this.paths = this.localShapeCollection)
                }
                function a() {
                    if (this.elem.globalData.frameId !== this.frameId)
                        if (this.effectsSequence.length)
                            if (this.lock)
                                this.setVValue(this.pv);
                            else {
                                var t, e;
                                this.lock = !0,
                                this._mdf = !1,
                                t = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                                var r = this.effectsSequence.length;
                                for (e = 0; e < r; e += 1)
                                    t = this.effectsSequence[e](t);
                                this.setVValue(t),
                                this.lock = !1,
                                this.frameId = this.elem.globalData.frameId
                            }
                        else
                            this._mdf = !1
                }
                function n(t, e, r) {
                    this.propType = "shape",
                    this.comp = t.comp,
                    this.container = t,
                    this.elem = t,
                    this.data = e,
                    this.k = !1,
                    this.kf = !1,
                    this._mdf = !1;
                    var s = 3 === r ? e.pt.k : e.ks.k;
                    this.v = shapePool.clone(s),
                    this.pv = shapePool.clone(this.v),
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.paths = this.localShapeCollection,
                    this.paths.addShape(this.v),
                    this.reset = i,
                    this.effectsSequence = []
                }
                function o(t) {
                    this.effectsSequence.push(t),
                    this.container.addDynamicProperty(this)
                }
                function h(e, s, a) {
                    this.propType = "shape",
                    this.comp = e.comp,
                    this.elem = e,
                    this.container = e,
                    this.offsetTime = e.data.st,
                    this.keyframes = 3 === a ? s.pt.k : s.ks.k,
                    this.keyframesMetadata = [],
                    this.k = !0,
                    this.kf = !0;
                    var n = this.keyframes[0].s[0].i.length;
                    this.v = shapePool.newElement(),
                    this.v.setPathData(this.keyframes[0].s[0].c, n),
                    this.pv = shapePool.clone(this.v),
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.paths = this.localShapeCollection,
                    this.paths.addShape(this.v),
                    this.lastFrame = t,
                    this.reset = i,
                    this._caching = {
                        lastFrame: t,
                        lastIndex: 0
                    },
                    this.effectsSequence = [r.bind(this)]
                }
                n.prototype.interpolateShape = e,
                n.prototype.getValue = a,
                n.prototype.setVValue = s,
                n.prototype.addEffect = o,
                h.prototype.getValue = a,
                h.prototype.interpolateShape = e,
                h.prototype.setVValue = s,
                h.prototype.addEffect = o;
                var l = function() {
                    var t = roundCorner;
                    function e(t, e) {
                        this.v = shapePool.newElement(),
                        this.v.setPathData(!0, 4),
                        this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                        this.paths = this.localShapeCollection,
                        this.localShapeCollection.addShape(this.v),
                        this.d = e.d,
                        this.elem = t,
                        this.comp = t.comp,
                        this.frameId = -1,
                        this.initDynamicPropertyContainer(t),
                        this.p = PropertyFactory.getProp(t, e.p, 1, 0, this),
                        this.s = PropertyFactory.getProp(t, e.s, 1, 0, this),
                        this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                        this.convertEllToPath())
                    }
                    return e.prototype = {
                        reset: i,
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                            this.iterateDynamicProperties(),
                            this._mdf && this.convertEllToPath())
                        },
                        convertEllToPath: function() {
                            var e = this.p.v[0]
                              , r = this.p.v[1]
                              , i = this.s.v[0] / 2
                              , s = this.s.v[1] / 2
                              , a = 3 !== this.d
                              , n = this.v;
                            n.v[0][0] = e,
                            n.v[0][1] = r - s,
                            n.v[1][0] = a ? e + i : e - i,
                            n.v[1][1] = r,
                            n.v[2][0] = e,
                            n.v[2][1] = r + s,
                            n.v[3][0] = a ? e - i : e + i,
                            n.v[3][1] = r,
                            n.i[0][0] = a ? e - i * t : e + i * t,
                            n.i[0][1] = r - s,
                            n.i[1][0] = a ? e + i : e - i,
                            n.i[1][1] = r - s * t,
                            n.i[2][0] = a ? e + i * t : e - i * t,
                            n.i[2][1] = r + s,
                            n.i[3][0] = a ? e - i : e + i,
                            n.i[3][1] = r + s * t,
                            n.o[0][0] = a ? e + i * t : e - i * t,
                            n.o[0][1] = r - s,
                            n.o[1][0] = a ? e + i : e - i,
                            n.o[1][1] = r + s * t,
                            n.o[2][0] = a ? e - i * t : e + i * t,
                            n.o[2][1] = r + s,
                            n.o[3][0] = a ? e - i : e + i,
                            n.o[3][1] = r - s * t
                        }
                    },
                    extendPrototype([DynamicPropertyContainer], e),
                    e
                }()
                  , p = function() {
                    function t(t, e) {
                        this.v = shapePool.newElement(),
                        this.v.setPathData(!0, 0),
                        this.elem = t,
                        this.comp = t.comp,
                        this.data = e,
                        this.frameId = -1,
                        this.d = e.d,
                        this.initDynamicPropertyContainer(t),
                        1 === e.sy ? (this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this),
                        this.is = PropertyFactory.getProp(t, e.is, 0, .01, this),
                        this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath,
                        this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this),
                        this.p = PropertyFactory.getProp(t, e.p, 1, 0, this),
                        this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this),
                        this.or = PropertyFactory.getProp(t, e.or, 0, 0, this),
                        this.os = PropertyFactory.getProp(t, e.os, 0, .01, this),
                        this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                        this.localShapeCollection.addShape(this.v),
                        this.paths = this.localShapeCollection,
                        this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                        this.convertToPath())
                    }
                    return t.prototype = {
                        reset: i,
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                            this.iterateDynamicProperties(),
                            this._mdf && this.convertToPath())
                        },
                        convertStarToPath: function() {
                            var t, e, r, i, s = 2 * Math.floor(this.pt.v), a = 2 * Math.PI / s, n = !0, o = this.or.v, h = this.ir.v, l = this.os.v, p = this.is.v, c = 2 * Math.PI * o / (2 * s), f = 2 * Math.PI * h / (2 * s), u = -Math.PI / 2;
                            u += this.r.v;
                            var d = 3 === this.data.d ? -1 : 1;
                            for (this.v._length = 0,
                            t = 0; t < s; t += 1) {
                                r = n ? l : p,
                                i = n ? c : f;
                                var m = (e = n ? o : h) * Math.cos(u)
                                  , y = e * Math.sin(u)
                                  , g = 0 === m && 0 === y ? 0 : y / Math.sqrt(m * m + y * y)
                                  , v = 0 === m && 0 === y ? 0 : -m / Math.sqrt(m * m + y * y);
                                m += +this.p.v[0],
                                y += +this.p.v[1],
                                this.v.setTripleAt(m, y, m - g * i * r * d, y - v * i * r * d, m + g * i * r * d, y + v * i * r * d, t, !0),
                                n = !n,
                                u += a * d
                            }
                        },
                        convertPolygonToPath: function() {
                            var t, e = Math.floor(this.pt.v), r = 2 * Math.PI / e, i = this.or.v, s = this.os.v, a = 2 * Math.PI * i / (4 * e), n = .5 * -Math.PI, o = 3 === this.data.d ? -1 : 1;
                            for (n += this.r.v,
                            this.v._length = 0,
                            t = 0; t < e; t += 1) {
                                var h = i * Math.cos(n)
                                  , l = i * Math.sin(n)
                                  , p = 0 === h && 0 === l ? 0 : l / Math.sqrt(h * h + l * l)
                                  , c = 0 === h && 0 === l ? 0 : -h / Math.sqrt(h * h + l * l);
                                h += +this.p.v[0],
                                l += +this.p.v[1],
                                this.v.setTripleAt(h, l, h - p * a * s * o, l - c * a * s * o, h + p * a * s * o, l + c * a * s * o, t, !0),
                                n += r * o
                            }
                            this.paths.length = 0,
                            this.paths[0] = this.v
                        }
                    },
                    extendPrototype([DynamicPropertyContainer], t),
                    t
                }()
                  , c = function() {
                    function t(t, e) {
                        this.v = shapePool.newElement(),
                        this.v.c = !0,
                        this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                        this.localShapeCollection.addShape(this.v),
                        this.paths = this.localShapeCollection,
                        this.elem = t,
                        this.comp = t.comp,
                        this.frameId = -1,
                        this.d = e.d,
                        this.initDynamicPropertyContainer(t),
                        this.p = PropertyFactory.getProp(t, e.p, 1, 0, this),
                        this.s = PropertyFactory.getProp(t, e.s, 1, 0, this),
                        this.r = PropertyFactory.getProp(t, e.r, 0, 0, this),
                        this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                        this.convertRectToPath())
                    }
                    return t.prototype = {
                        convertRectToPath: function() {
                            var t = this.p.v[0]
                              , e = this.p.v[1]
                              , r = this.s.v[0] / 2
                              , i = this.s.v[1] / 2
                              , s = bmMin(r, i, this.r.v)
                              , a = s * (1 - roundCorner);
                            this.v._length = 0,
                            2 === this.d || 1 === this.d ? (this.v.setTripleAt(t + r, e - i + s, t + r, e - i + s, t + r, e - i + a, 0, !0),
                            this.v.setTripleAt(t + r, e + i - s, t + r, e + i - a, t + r, e + i - s, 1, !0),
                            0 !== s ? (this.v.setTripleAt(t + r - s, e + i, t + r - s, e + i, t + r - a, e + i, 2, !0),
                            this.v.setTripleAt(t - r + s, e + i, t - r + a, e + i, t - r + s, e + i, 3, !0),
                            this.v.setTripleAt(t - r, e + i - s, t - r, e + i - s, t - r, e + i - a, 4, !0),
                            this.v.setTripleAt(t - r, e - i + s, t - r, e - i + a, t - r, e - i + s, 5, !0),
                            this.v.setTripleAt(t - r + s, e - i, t - r + s, e - i, t - r + a, e - i, 6, !0),
                            this.v.setTripleAt(t + r - s, e - i, t + r - a, e - i, t + r - s, e - i, 7, !0)) : (this.v.setTripleAt(t - r, e + i, t - r + a, e + i, t - r, e + i, 2),
                            this.v.setTripleAt(t - r, e - i, t - r, e - i + a, t - r, e - i, 3))) : (this.v.setTripleAt(t + r, e - i + s, t + r, e - i + a, t + r, e - i + s, 0, !0),
                            0 !== s ? (this.v.setTripleAt(t + r - s, e - i, t + r - s, e - i, t + r - a, e - i, 1, !0),
                            this.v.setTripleAt(t - r + s, e - i, t - r + a, e - i, t - r + s, e - i, 2, !0),
                            this.v.setTripleAt(t - r, e - i + s, t - r, e - i + s, t - r, e - i + a, 3, !0),
                            this.v.setTripleAt(t - r, e + i - s, t - r, e + i - a, t - r, e + i - s, 4, !0),
                            this.v.setTripleAt(t - r + s, e + i, t - r + s, e + i, t - r + a, e + i, 5, !0),
                            this.v.setTripleAt(t + r - s, e + i, t + r - a, e + i, t + r - s, e + i, 6, !0),
                            this.v.setTripleAt(t + r, e + i - s, t + r, e + i - s, t + r, e + i - a, 7, !0)) : (this.v.setTripleAt(t - r, e - i, t - r + a, e - i, t - r, e - i, 1, !0),
                            this.v.setTripleAt(t - r, e + i, t - r, e + i - a, t - r, e + i, 2, !0),
                            this.v.setTripleAt(t + r, e + i, t + r - a, e + i, t + r, e + i, 3, !0)))
                        },
                        getValue: function() {
                            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                            this.iterateDynamicProperties(),
                            this._mdf && this.convertRectToPath())
                        },
                        reset: i
                    },
                    extendPrototype([DynamicPropertyContainer], t),
                    t
                }()
                  , f = {
                    getShapeProp: function(t, e, r) {
                        var i;
                        return 3 === r || 4 === r ? i = (3 === r ? e.pt : e.ks).k.length ? new h(t,e,r) : new n(t,e,r) : 5 === r ? i = new c(t,e) : 6 === r ? i = new l(t,e) : 7 === r && (i = new p(t,e)),
                        i.k && t.addDynamicProperty(i),
                        i
                    },
                    getConstructorFunction: function() {
                        return n
                    },
                    getKeyframedConstructorFunction: function() {
                        return h
                    }
                };
                return f
            }()
              , Matrix = function() {
                var t = Math.cos
                  , e = Math.sin
                  , r = Math.tan
                  , i = Math.round;
                function s() {
                    return this.props[0] = 1,
                    this.props[1] = 0,
                    this.props[2] = 0,
                    this.props[3] = 0,
                    this.props[4] = 0,
                    this.props[5] = 1,
                    this.props[6] = 0,
                    this.props[7] = 0,
                    this.props[8] = 0,
                    this.props[9] = 0,
                    this.props[10] = 1,
                    this.props[11] = 0,
                    this.props[12] = 0,
                    this.props[13] = 0,
                    this.props[14] = 0,
                    this.props[15] = 1,
                    this
                }
                function a(r) {
                    if (0 === r)
                        return this;
                    var i = t(r)
                      , s = e(r);
                    return this._t(i, -s, 0, 0, s, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }
                function n(r) {
                    if (0 === r)
                        return this;
                    var i = t(r)
                      , s = e(r);
                    return this._t(1, 0, 0, 0, 0, i, -s, 0, 0, s, i, 0, 0, 0, 0, 1)
                }
                function o(r) {
                    if (0 === r)
                        return this;
                    var i = t(r)
                      , s = e(r);
                    return this._t(i, 0, s, 0, 0, 1, 0, 0, -s, 0, i, 0, 0, 0, 0, 1)
                }
                function h(r) {
                    if (0 === r)
                        return this;
                    var i = t(r)
                      , s = e(r);
                    return this._t(i, -s, 0, 0, s, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }
                function l(t, e) {
                    return this._t(1, e, t, 1, 0, 0)
                }
                function p(t, e) {
                    return this.shear(r(t), r(e))
                }
                function c(i, s) {
                    var a = t(s)
                      , n = e(s);
                    return this._t(a, n, 0, 0, -n, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, r(i), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(a, -n, 0, 0, n, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                }
                function f(t, e, r) {
                    return r || 0 === r || (r = 1),
                    1 === t && 1 === e && 1 === r ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, r, 0, 0, 0, 0, 1)
                }
                function u(t, e, r, i, s, a, n, o, h, l, p, c, f, u, d, m) {
                    return this.props[0] = t,
                    this.props[1] = e,
                    this.props[2] = r,
                    this.props[3] = i,
                    this.props[4] = s,
                    this.props[5] = a,
                    this.props[6] = n,
                    this.props[7] = o,
                    this.props[8] = h,
                    this.props[9] = l,
                    this.props[10] = p,
                    this.props[11] = c,
                    this.props[12] = f,
                    this.props[13] = u,
                    this.props[14] = d,
                    this.props[15] = m,
                    this
                }
                function d(t, e, r) {
                    return r = r || 0,
                    0 !== t || 0 !== e || 0 !== r ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, r, 1) : this
                }
                function m(t, e, r, i, s, a, n, o, h, l, p, c, f, u, d, m) {
                    var y = this.props;
                    if (1 === t && 0 === e && 0 === r && 0 === i && 0 === s && 1 === a && 0 === n && 0 === o && 0 === h && 0 === l && 1 === p && 0 === c)
                        return y[12] = y[12] * t + y[15] * f,
                        y[13] = y[13] * a + y[15] * u,
                        y[14] = y[14] * p + y[15] * d,
                        y[15] *= m,
                        this._identityCalculated = !1,
                        this;
                    var g = y[0]
                      , v = y[1]
                      , b = y[2]
                      , _ = y[3]
                      , P = y[4]
                      , S = y[5]
                      , E = y[6]
                      , x = y[7]
                      , C = y[8]
                      , A = y[9]
                      , w = y[10]
                      , k = y[11]
                      , T = y[12]
                      , M = y[13]
                      , D = y[14]
                      , F = y[15];
                    return y[0] = g * t + v * s + b * h + _ * f,
                    y[1] = g * e + v * a + b * l + _ * u,
                    y[2] = g * r + v * n + b * p + _ * d,
                    y[3] = g * i + v * o + b * c + _ * m,
                    y[4] = P * t + S * s + E * h + x * f,
                    y[5] = P * e + S * a + E * l + x * u,
                    y[6] = P * r + S * n + E * p + x * d,
                    y[7] = P * i + S * o + E * c + x * m,
                    y[8] = C * t + A * s + w * h + k * f,
                    y[9] = C * e + A * a + w * l + k * u,
                    y[10] = C * r + A * n + w * p + k * d,
                    y[11] = C * i + A * o + w * c + k * m,
                    y[12] = T * t + M * s + D * h + F * f,
                    y[13] = T * e + M * a + D * l + F * u,
                    y[14] = T * r + M * n + D * p + F * d,
                    y[15] = T * i + M * o + D * c + F * m,
                    this._identityCalculated = !1,
                    this
                }
                function y(t) {
                    var e = t.props;
                    return this.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15])
                }
                function g() {
                    return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]),
                    this._identityCalculated = !0),
                    this._identity
                }
                function v(t) {
                    for (var e = 0; e < 16; ) {
                        if (t.props[e] !== this.props[e])
                            return !1;
                        e += 1
                    }
                    return !0
                }
                function b(t) {
                    var e;
                    for (e = 0; e < 16; e += 1)
                        t.props[e] = this.props[e];
                    return t
                }
                function _(t) {
                    var e;
                    for (e = 0; e < 16; e += 1)
                        this.props[e] = t[e]
                }
                function P(t, e, r) {
                    return {
                        x: t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12],
                        y: t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13],
                        z: t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]
                    }
                }
                function S(t, e, r) {
                    return t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12]
                }
                function E(t, e, r) {
                    return t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13]
                }
                function x(t, e, r) {
                    return t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]
                }
                function C() {
                    var t = this.props[0] * this.props[5] - this.props[1] * this.props[4]
                      , e = this.props[5] / t
                      , r = -this.props[1] / t
                      , i = -this.props[4] / t
                      , s = this.props[0] / t
                      , a = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t
                      , n = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t
                      , o = new Matrix;
                    return o.props[0] = e,
                    o.props[1] = r,
                    o.props[4] = i,
                    o.props[5] = s,
                    o.props[12] = a,
                    o.props[13] = n,
                    o
                }
                function A(t) {
                    return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0)
                }
                function w(t) {
                    var e, r = t.length, i = [];
                    for (e = 0; e < r; e += 1)
                        i[e] = A(t[e]);
                    return i
                }
                function k(t, e, r) {
                    var i = createTypedArray("float32", 6);
                    if (this.isIdentity())
                        i[0] = t[0],
                        i[1] = t[1],
                        i[2] = e[0],
                        i[3] = e[1],
                        i[4] = r[0],
                        i[5] = r[1];
                    else {
                        var s = this.props[0]
                          , a = this.props[1]
                          , n = this.props[4]
                          , o = this.props[5]
                          , h = this.props[12]
                          , l = this.props[13];
                        i[0] = t[0] * s + t[1] * n + h,
                        i[1] = t[0] * a + t[1] * o + l,
                        i[2] = e[0] * s + e[1] * n + h,
                        i[3] = e[0] * a + e[1] * o + l,
                        i[4] = r[0] * s + r[1] * n + h,
                        i[5] = r[0] * a + r[1] * o + l
                    }
                    return i
                }
                function T(t, e, r) {
                    return this.isIdentity() ? [t, e, r] : [t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12], t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13], t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]]
                }
                function M(t, e) {
                    if (this.isIdentity())
                        return t + "," + e;
                    var r = this.props;
                    return Math.round(100 * (t * r[0] + e * r[4] + r[12])) / 100 + "," + Math.round(100 * (t * r[1] + e * r[5] + r[13])) / 100
                }
                function D() {
                    for (var t = 0, e = this.props, r = "matrix3d("; t < 16; )
                        r += i(1e4 * e[t]) / 1e4,
                        r += 15 === t ? ")" : ",",
                        t += 1;
                    return r
                }
                function F(t) {
                    return t < 1e-6 && t > 0 || t > -1e-6 && t < 0 ? i(1e4 * t) / 1e4 : t
                }
                function I() {
                    var t = this.props;
                    return "matrix(" + F(t[0]) + "," + F(t[1]) + "," + F(t[4]) + "," + F(t[5]) + "," + F(t[12]) + "," + F(t[13]) + ")"
                }
                return function() {
                    this.reset = s,
                    this.rotate = a,
                    this.rotateX = n,
                    this.rotateY = o,
                    this.rotateZ = h,
                    this.skew = p,
                    this.skewFromAxis = c,
                    this.shear = l,
                    this.scale = f,
                    this.setTransform = u,
                    this.translate = d,
                    this.transform = m,
                    this.multiply = y,
                    this.applyToPoint = P,
                    this.applyToX = S,
                    this.applyToY = E,
                    this.applyToZ = x,
                    this.applyToPointArray = T,
                    this.applyToTriplePoints = k,
                    this.applyToPointStringified = M,
                    this.toCSS = D,
                    this.to2dCSS = I,
                    this.clone = b,
                    this.cloneFromProps = _,
                    this.equals = v,
                    this.inversePoints = w,
                    this.inversePoint = A,
                    this.getInverseMatrix = C,
                    this._t = this.transform,
                    this.isIdentity = g,
                    this._identity = !0,
                    this._identityCalculated = !1,
                    this.props = createTypedArray("float32", 16),
                    this.reset()
                }
            }();
            function _typeof$3(t) {
                return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof$3(t)
            }
            var lottie = {}
              , standalone = "__[STANDALONE]__"
              , animationData = "__[ANIMATIONDATA]__"
              , renderer = "";
            function setLocation(t) {
                setLocationHref(t)
            }
            function searchAnimations() {
                !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations()
            }
            function setSubframeRendering(t) {
                setSubframeEnabled(t)
            }
            function setPrefix(t) {
                setIdPrefix(t)
            }
            function loadAnimation(t) {
                return !0 === standalone && (t.animationData = JSON.parse(animationData)),
                animationManager.loadAnimation(t)
            }
            function setQuality(t) {
                if ("string" == typeof t)
                    switch (t) {
                    case "high":
                        setDefaultCurveSegments(200);
                        break;
                    default:
                    case "medium":
                        setDefaultCurveSegments(50);
                        break;
                    case "low":
                        setDefaultCurveSegments(10)
                    }
                else
                    !isNaN(t) && t > 1 && setDefaultCurveSegments(t);
                getDefaultCurveSegments() >= 50 ? roundValues(!1) : roundValues(!0)
            }
            function inBrowser() {
                return "undefined" != typeof navigator
            }
            function installPlugin(t, e) {
                "expressions" === t && setExpressionsPlugin(e)
            }
            function getFactory(t) {
                switch (t) {
                case "propertyFactory":
                    return PropertyFactory;
                case "shapePropertyFactory":
                    return ShapePropertyFactory;
                case "matrix":
                    return Matrix;
                default:
                    return null
                }
            }
            function checkReady() {
                "complete" === document.readyState && (clearInterval(readyStateCheckInterval),
                searchAnimations())
            }
            function getQueryVariable(t) {
                for (var e = queryString.split("&"), r = 0; r < e.length; r += 1) {
                    var i = e[r].split("=");
                    if (decodeURIComponent(i[0]) == t)
                        return decodeURIComponent(i[1])
                }
                return null
            }
            lottie.play = animationManager.play,
            lottie.pause = animationManager.pause,
            lottie.setLocationHref = setLocation,
            lottie.togglePause = animationManager.togglePause,
            lottie.setSpeed = animationManager.setSpeed,
            lottie.setDirection = animationManager.setDirection,
            lottie.stop = animationManager.stop,
            lottie.searchAnimations = searchAnimations,
            lottie.registerAnimation = animationManager.registerAnimation,
            lottie.loadAnimation = loadAnimation,
            lottie.setSubframeRendering = setSubframeRendering,
            lottie.resize = animationManager.resize,
            lottie.goToAndStop = animationManager.goToAndStop,
            lottie.destroy = animationManager.destroy,
            lottie.setQuality = setQuality,
            lottie.inBrowser = inBrowser,
            lottie.installPlugin = installPlugin,
            lottie.freeze = animationManager.freeze,
            lottie.unfreeze = animationManager.unfreeze,
            lottie.setVolume = animationManager.setVolume,
            lottie.mute = animationManager.mute,
            lottie.unmute = animationManager.unmute,
            lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations,
            lottie.useWebWorker = setWebWorker,
            lottie.setIDPrefix = setPrefix,
            lottie.__getFactory = getFactory,
            lottie.version = "5.12.2";
            var queryString = "";
            if (standalone) {
                var scripts = document.getElementsByTagName("script")
                  , index = scripts.length - 1
                  , myScript = scripts[index] || {
                    src: ""
                };
                queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : "",
                renderer = getQueryVariable("renderer")
            }
            var readyStateCheckInterval = setInterval(checkReady, 100);
            try {
                "object" !== _typeof$3(exports) && (window.bodymovin = lottie)
            } catch (t) {}
            var ShapeModifiers = function() {
                var t = {}
                  , e = {};
                return t.registerModifier = function(t, r) {
                    e[t] || (e[t] = r)
                }
                ,
                t.getModifier = function(t, r, i) {
                    return new e[t](r,i)
                }
                ,
                t
            }();
            function ShapeModifier() {}
            function TrimModifier() {}
            function PuckerAndBloatModifier() {}
            ShapeModifier.prototype.initModifierProperties = function() {}
            ,
            ShapeModifier.prototype.addShapeToModifier = function() {}
            ,
            ShapeModifier.prototype.addShape = function(t) {
                if (!this.closed) {
                    t.sh.container.addDynamicProperty(t.sh);
                    var e = {
                        shape: t.sh,
                        data: t,
                        localShapeCollection: shapeCollectionPool.newShapeCollection()
                    };
                    this.shapes.push(e),
                    this.addShapeToModifier(e),
                    this._isAnimated && t.setAsAnimated()
                }
            }
            ,
            ShapeModifier.prototype.init = function(t, e) {
                this.shapes = [],
                this.elem = t,
                this.initDynamicPropertyContainer(t),
                this.initModifierProperties(t, e),
                this.frameId = initialDefaultFrame,
                this.closed = !1,
                this.k = !1,
                this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
            }
            ,
            ShapeModifier.prototype.processKeys = function() {
                this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                this.iterateDynamicProperties())
            }
            ,
            extendPrototype([DynamicPropertyContainer], ShapeModifier),
            extendPrototype([ShapeModifier], TrimModifier),
            TrimModifier.prototype.initModifierProperties = function(t, e) {
                this.s = PropertyFactory.getProp(t, e.s, 0, .01, this),
                this.e = PropertyFactory.getProp(t, e.e, 0, .01, this),
                this.o = PropertyFactory.getProp(t, e.o, 0, 0, this),
                this.sValue = 0,
                this.eValue = 0,
                this.getValue = this.processKeys,
                this.m = e.m,
                this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length
            }
            ,
            TrimModifier.prototype.addShapeToModifier = function(t) {
                t.pathsData = []
            }
            ,
            TrimModifier.prototype.calculateShapeEdges = function(t, e, r, i, s) {
                var a = [];
                e <= 1 ? a.push({
                    s: t,
                    e: e
                }) : t >= 1 ? a.push({
                    s: t - 1,
                    e: e - 1
                }) : (a.push({
                    s: t,
                    e: 1
                }),
                a.push({
                    s: 0,
                    e: e - 1
                }));
                var n, o, h = [], l = a.length;
                for (n = 0; n < l; n += 1) {
                    var p, c;
                    (o = a[n]).e * s < i || o.s * s > i + r || (p = o.s * s <= i ? 0 : (o.s * s - i) / r,
                    c = o.e * s >= i + r ? 1 : (o.e * s - i) / r,
                    h.push([p, c]))
                }
                return h.length || h.push([0, 0]),
                h
            }
            ,
            TrimModifier.prototype.releasePathsData = function(t) {
                var e, r = t.length;
                for (e = 0; e < r; e += 1)
                    segmentsLengthPool.release(t[e]);
                return t.length = 0,
                t
            }
            ,
            TrimModifier.prototype.processShapes = function(t) {
                var e, r, i, s;
                if (this._mdf || t) {
                    var a = this.o.v % 360 / 360;
                    if (a < 0 && (a += 1),
                    (e = this.s.v > 1 ? 1 + a : this.s.v < 0 ? 0 + a : this.s.v + a) > (r = this.e.v > 1 ? 1 + a : this.e.v < 0 ? 0 + a : this.e.v + a)) {
                        var n = e;
                        e = r,
                        r = n
                    }
                    e = 1e-4 * Math.round(1e4 * e),
                    r = 1e-4 * Math.round(1e4 * r),
                    this.sValue = e,
                    this.eValue = r
                } else
                    e = this.sValue,
                    r = this.eValue;
                var o, h, l, p, c, f = this.shapes.length, u = 0;
                if (r === e)
                    for (s = 0; s < f; s += 1)
                        this.shapes[s].localShapeCollection.releaseShapes(),
                        this.shapes[s].shape._mdf = !0,
                        this.shapes[s].shape.paths = this.shapes[s].localShapeCollection,
                        this._mdf && (this.shapes[s].pathsData.length = 0);
                else if (1 === r && 0 === e || 0 === r && 1 === e) {
                    if (this._mdf)
                        for (s = 0; s < f; s += 1)
                            this.shapes[s].pathsData.length = 0,
                            this.shapes[s].shape._mdf = !0
                } else {
                    var d, m, y = [];
                    for (s = 0; s < f; s += 1)
                        if ((d = this.shapes[s]).shape._mdf || this._mdf || t || 2 === this.m) {
                            if (h = (i = d.shape.paths)._length,
                            c = 0,
                            !d.shape._mdf && d.pathsData.length)
                                c = d.totalShapeLength;
                            else {
                                for (l = this.releasePathsData(d.pathsData),
                                o = 0; o < h; o += 1)
                                    p = bez.getSegmentsLength(i.shapes[o]),
                                    l.push(p),
                                    c += p.totalLength;
                                d.totalShapeLength = c,
                                d.pathsData = l
                            }
                            u += c,
                            d.shape._mdf = !0
                        } else
                            d.shape.paths = d.localShapeCollection;
                    var g, v = e, b = r, _ = 0;
                    for (s = f - 1; s >= 0; s -= 1)
                        if ((d = this.shapes[s]).shape._mdf) {
                            for ((m = d.localShapeCollection).releaseShapes(),
                            2 === this.m && f > 1 ? (g = this.calculateShapeEdges(e, r, d.totalShapeLength, _, u),
                            _ += d.totalShapeLength) : g = [[v, b]],
                            h = g.length,
                            o = 0; o < h; o += 1) {
                                v = g[o][0],
                                b = g[o][1],
                                y.length = 0,
                                b <= 1 ? y.push({
                                    s: d.totalShapeLength * v,
                                    e: d.totalShapeLength * b
                                }) : v >= 1 ? y.push({
                                    s: d.totalShapeLength * (v - 1),
                                    e: d.totalShapeLength * (b - 1)
                                }) : (y.push({
                                    s: d.totalShapeLength * v,
                                    e: d.totalShapeLength
                                }),
                                y.push({
                                    s: 0,
                                    e: d.totalShapeLength * (b - 1)
                                }));
                                var P = this.addShapes(d, y[0]);
                                if (y[0].s !== y[0].e) {
                                    if (y.length > 1)
                                        if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {
                                            var S = P.pop();
                                            this.addPaths(P, m),
                                            P = this.addShapes(d, y[1], S)
                                        } else
                                            this.addPaths(P, m),
                                            P = this.addShapes(d, y[1]);
                                    this.addPaths(P, m)
                                }
                            }
                            d.shape.paths = m
                        }
                }
            }
            ,
            TrimModifier.prototype.addPaths = function(t, e) {
                var r, i = t.length;
                for (r = 0; r < i; r += 1)
                    e.addShape(t[r])
            }
            ,
            TrimModifier.prototype.addSegment = function(t, e, r, i, s, a, n) {
                s.setXYAt(e[0], e[1], "o", a),
                s.setXYAt(r[0], r[1], "i", a + 1),
                n && s.setXYAt(t[0], t[1], "v", a),
                s.setXYAt(i[0], i[1], "v", a + 1)
            }
            ,
            TrimModifier.prototype.addSegmentFromArray = function(t, e, r, i) {
                e.setXYAt(t[1], t[5], "o", r),
                e.setXYAt(t[2], t[6], "i", r + 1),
                i && e.setXYAt(t[0], t[4], "v", r),
                e.setXYAt(t[3], t[7], "v", r + 1)
            }
            ,
            TrimModifier.prototype.addShapes = function(t, e, r) {
                var i, s, a, n, o, h, l, p, c = t.pathsData, f = t.shape.paths.shapes, u = t.shape.paths._length, d = 0, m = [], y = !0;
                for (r ? (o = r._length,
                p = r._length) : (r = shapePool.newElement(),
                o = 0,
                p = 0),
                m.push(r),
                i = 0; i < u; i += 1) {
                    for (h = c[i].lengths,
                    r.c = f[i].c,
                    a = f[i].c ? h.length : h.length + 1,
                    s = 1; s < a; s += 1)
                        if (d + (n = h[s - 1]).addedLength < e.s)
                            d += n.addedLength,
                            r.c = !1;
                        else {
                            if (d > e.e) {
                                r.c = !1;
                                break
                            }
                            e.s <= d && e.e >= d + n.addedLength ? (this.addSegment(f[i].v[s - 1], f[i].o[s - 1], f[i].i[s], f[i].v[s], r, o, y),
                            y = !1) : (l = bez.getNewSegment(f[i].v[s - 1], f[i].v[s], f[i].o[s - 1], f[i].i[s], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[s - 1]),
                            this.addSegmentFromArray(l, r, o, y),
                            y = !1,
                            r.c = !1),
                            d += n.addedLength,
                            o += 1
                        }
                    if (f[i].c && h.length) {
                        if (n = h[s - 1],
                        d <= e.e) {
                            var g = h[s - 1].addedLength;
                            e.s <= d && e.e >= d + g ? (this.addSegment(f[i].v[s - 1], f[i].o[s - 1], f[i].i[0], f[i].v[0], r, o, y),
                            y = !1) : (l = bez.getNewSegment(f[i].v[s - 1], f[i].v[0], f[i].o[s - 1], f[i].i[0], (e.s - d) / g, (e.e - d) / g, h[s - 1]),
                            this.addSegmentFromArray(l, r, o, y),
                            y = !1,
                            r.c = !1)
                        } else
                            r.c = !1;
                        d += n.addedLength,
                        o += 1
                    }
                    if (r._length && (r.setXYAt(r.v[p][0], r.v[p][1], "i", p),
                    r.setXYAt(r.v[r._length - 1][0], r.v[r._length - 1][1], "o", r._length - 1)),
                    d > e.e)
                        break;
                    i < u - 1 && (r = shapePool.newElement(),
                    y = !0,
                    m.push(r),
                    o = 0)
                }
                return m
            }
            ,
            extendPrototype([ShapeModifier], PuckerAndBloatModifier),
            PuckerAndBloatModifier.prototype.initModifierProperties = function(t, e) {
                this.getValue = this.processKeys,
                this.amount = PropertyFactory.getProp(t, e.a, 0, null, this),
                this._isAnimated = !!this.amount.effectsSequence.length
            }
            ,
            PuckerAndBloatModifier.prototype.processPath = function(t, e) {
                var r = e / 100
                  , i = [0, 0]
                  , s = t._length
                  , a = 0;
                for (a = 0; a < s; a += 1)
                    i[0] += t.v[a][0],
                    i[1] += t.v[a][1];
                i[0] /= s,
                i[1] /= s;
                var n, o, h, l, p, c, f = shapePool.newElement();
                for (f.c = t.c,
                a = 0; a < s; a += 1)
                    n = t.v[a][0] + (i[0] - t.v[a][0]) * r,
                    o = t.v[a][1] + (i[1] - t.v[a][1]) * r,
                    h = t.o[a][0] + (i[0] - t.o[a][0]) * -r,
                    l = t.o[a][1] + (i[1] - t.o[a][1]) * -r,
                    p = t.i[a][0] + (i[0] - t.i[a][0]) * -r,
                    c = t.i[a][1] + (i[1] - t.i[a][1]) * -r,
                    f.setTripleAt(n, o, h, l, p, c, a);
                return f
            }
            ,
            PuckerAndBloatModifier.prototype.processShapes = function(t) {
                var e, r, i, s, a, n, o = this.shapes.length, h = this.amount.v;
                if (0 !== h)
                    for (r = 0; r < o; r += 1) {
                        if (n = (a = this.shapes[r]).localShapeCollection,
                        a.shape._mdf || this._mdf || t)
                            for (n.releaseShapes(),
                            a.shape._mdf = !0,
                            e = a.shape.paths.shapes,
                            s = a.shape.paths._length,
                            i = 0; i < s; i += 1)
                                n.addShape(this.processPath(e[i], h));
                        a.shape.paths = a.localShapeCollection
                    }
                this.dynamicProperties.length || (this._mdf = !1)
            }
            ;
            var TransformPropertyFactory = function() {
                var t = [0, 0];
                function e(t, e, r) {
                    if (this.elem = t,
                    this.frameId = -1,
                    this.propType = "transform",
                    this.data = e,
                    this.v = new Matrix,
                    this.pre = new Matrix,
                    this.appliedTransformations = 0,
                    this.initDynamicPropertyContainer(r || t),
                    e.p && e.p.s ? (this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this),
                    this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this),
                    e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(t, e.p || {
                        k: [0, 0, 0]
                    }, 1, 0, this),
                    e.rx) {
                        if (this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this),
                        this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this),
                        this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this),
                        e.or.k[0].ti) {
                            var i, s = e.or.k.length;
                            for (i = 0; i < s; i += 1)
                                e.or.k[i].to = null,
                                e.or.k[i].ti = null
                        }
                        this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this),
                        this.or.sh = !0
                    } else
                        this.r = PropertyFactory.getProp(t, e.r || {
                            k: 0
                        }, 0, degToRads, this);
                    e.sk && (this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this),
                    this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this)),
                    this.a = PropertyFactory.getProp(t, e.a || {
                        k: [0, 0, 0]
                    }, 1, 0, this),
                    this.s = PropertyFactory.getProp(t, e.s || {
                        k: [100, 100, 100]
                    }, 1, .01, this),
                    e.o ? this.o = PropertyFactory.getProp(t, e.o, 0, .01, t) : this.o = {
                        _mdf: !1,
                        v: 1
                    },
                    this._isDirty = !0,
                    this.dynamicProperties.length || this.getValue(!0)
                }
                return e.prototype = {
                    applyToMatrix: function(t) {
                        var e = this._mdf;
                        this.iterateDynamicProperties(),
                        this._mdf = this._mdf || e,
                        this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                        this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                        this.sk && t.skewFromAxis(-this.sk.v, this.sa.v),
                        this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                        this.data.p.s ? this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                    },
                    getValue: function(e) {
                        if (this.elem.globalData.frameId !== this.frameId) {
                            if (this._isDirty && (this.precalculateMatrix(),
                            this._isDirty = !1),
                            this.iterateDynamicProperties(),
                            this._mdf || e) {
                                var r;
                                if (this.v.cloneFromProps(this.pre.props),
                                this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                                this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                                this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v),
                                this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                                this.autoOriented) {
                                    var i, s;
                                    if (r = this.elem.globalData.frameRate,
                                    this.p && this.p.keyframes && this.p.getValueAtTime)
                                        this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (i = this.p.getValueAtTime((this.p.keyframes[0].t + .01) / r, 0),
                                        s = this.p.getValueAtTime(this.p.keyframes[0].t / r, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (i = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / r, 0),
                                        s = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - .05) / r, 0)) : (i = this.p.pv,
                                        s = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - .01) / r, this.p.offsetTime));
                                    else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                        i = [],
                                        s = [];
                                        var a = this.px
                                          , n = this.py;
                                        a._caching.lastFrame + a.offsetTime <= a.keyframes[0].t ? (i[0] = a.getValueAtTime((a.keyframes[0].t + .01) / r, 0),
                                        i[1] = n.getValueAtTime((n.keyframes[0].t + .01) / r, 0),
                                        s[0] = a.getValueAtTime(a.keyframes[0].t / r, 0),
                                        s[1] = n.getValueAtTime(n.keyframes[0].t / r, 0)) : a._caching.lastFrame + a.offsetTime >= a.keyframes[a.keyframes.length - 1].t ? (i[0] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / r, 0),
                                        i[1] = n.getValueAtTime(n.keyframes[n.keyframes.length - 1].t / r, 0),
                                        s[0] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - .01) / r, 0),
                                        s[1] = n.getValueAtTime((n.keyframes[n.keyframes.length - 1].t - .01) / r, 0)) : (i = [a.pv, n.pv],
                                        s[0] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - .01) / r, a.offsetTime),
                                        s[1] = n.getValueAtTime((n._caching.lastFrame + n.offsetTime - .01) / r, n.offsetTime))
                                    } else
                                        i = s = t;
                                    this.v.rotate(-Math.atan2(i[1] - s[1], i[0] - s[0]))
                                }
                                this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                            }
                            this.frameId = this.elem.globalData.frameId
                        }
                    },
                    precalculateMatrix: function() {
                        if (this.appliedTransformations = 0,
                        this.pre.reset(),
                        !this.a.effectsSequence.length && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                        this.appliedTransformations = 1,
                        !this.s.effectsSequence.length)) {
                            if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                            this.appliedTransformations = 2,
                            this.sk) {
                                if (this.sk.effectsSequence.length || this.sa.effectsSequence.length)
                                    return;
                                this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                                this.appliedTransformations = 3
                            }
                            this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v),
                            this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                            this.appliedTransformations = 4)
                        }
                    },
                    autoOrient: function() {}
                },
                extendPrototype([DynamicPropertyContainer], e),
                e.prototype.addDynamicProperty = function(t) {
                    this._addDynamicProperty(t),
                    this.elem.addDynamicProperty(t),
                    this._isDirty = !0
                }
                ,
                e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty,
                {
                    getTransformProperty: function(t, r, i) {
                        return new e(t,r,i)
                    }
                }
            }();
            function RepeaterModifier() {}
            function RoundCornersModifier() {}
            function floatEqual(t, e) {
                return 1e5 * Math.abs(t - e) <= Math.min(Math.abs(t), Math.abs(e))
            }
            function floatZero(t) {
                return Math.abs(t) <= 1e-5
            }
            function lerp(t, e, r) {
                return t * (1 - r) + e * r
            }
            function lerpPoint(t, e, r) {
                return [lerp(t[0], e[0], r), lerp(t[1], e[1], r)]
            }
            function quadRoots(t, e, r) {
                if (0 === t)
                    return [];
                var i = e * e - 4 * t * r;
                if (i < 0)
                    return [];
                var s = -e / (2 * t);
                if (0 === i)
                    return [s];
                var a = Math.sqrt(i) / (2 * t);
                return [s - a, s + a]
            }
            function polynomialCoefficients(t, e, r, i) {
                return [3 * e - t - 3 * r + i, 3 * t - 6 * e + 3 * r, -3 * t + 3 * e, t]
            }
            function singlePoint(t) {
                return new PolynomialBezier(t,t,t,t,!1)
            }
            function PolynomialBezier(t, e, r, i, s) {
                s && pointEqual(t, e) && (e = lerpPoint(t, i, 1 / 3)),
                s && pointEqual(r, i) && (r = lerpPoint(t, i, 2 / 3));
                var a = polynomialCoefficients(t[0], e[0], r[0], i[0])
                  , n = polynomialCoefficients(t[1], e[1], r[1], i[1]);
                this.a = [a[0], n[0]],
                this.b = [a[1], n[1]],
                this.c = [a[2], n[2]],
                this.d = [a[3], n[3]],
                this.points = [t, e, r, i]
            }
            function extrema(t, e) {
                var r = t.points[0][e]
                  , i = t.points[t.points.length - 1][e];
                if (r > i) {
                    var s = i;
                    i = r,
                    r = s
                }
                for (var a = quadRoots(3 * t.a[e], 2 * t.b[e], t.c[e]), n = 0; n < a.length; n += 1)
                    if (a[n] > 0 && a[n] < 1) {
                        var o = t.point(a[n])[e];
                        o < r ? r = o : o > i && (i = o)
                    }
                return {
                    min: r,
                    max: i
                }
            }
            function intersectData(t, e, r) {
                var i = t.boundingBox();
                return {
                    cx: i.cx,
                    cy: i.cy,
                    width: i.width,
                    height: i.height,
                    bez: t,
                    t: (e + r) / 2,
                    t1: e,
                    t2: r
                }
            }
            function splitData(t) {
                var e = t.bez.split(.5);
                return [intersectData(e[0], t.t1, t.t), intersectData(e[1], t.t, t.t2)]
            }
            function boxIntersect(t, e) {
                return 2 * Math.abs(t.cx - e.cx) < t.width + e.width && 2 * Math.abs(t.cy - e.cy) < t.height + e.height
            }
            function intersectsImpl(t, e, r, i, s, a) {
                if (boxIntersect(t, e))
                    if (r >= a || t.width <= i && t.height <= i && e.width <= i && e.height <= i)
                        s.push([t.t, e.t]);
                    else {
                        var n = splitData(t)
                          , o = splitData(e);
                        intersectsImpl(n[0], o[0], r + 1, i, s, a),
                        intersectsImpl(n[0], o[1], r + 1, i, s, a),
                        intersectsImpl(n[1], o[0], r + 1, i, s, a),
                        intersectsImpl(n[1], o[1], r + 1, i, s, a)
                    }
            }
            function crossProduct(t, e) {
                return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]]
            }
            function lineIntersection(t, e, r, i) {
                var s = [t[0], t[1], 1]
                  , a = [e[0], e[1], 1]
                  , n = [r[0], r[1], 1]
                  , o = [i[0], i[1], 1]
                  , h = crossProduct(crossProduct(s, a), crossProduct(n, o));
                return floatZero(h[2]) ? null : [h[0] / h[2], h[1] / h[2]]
            }
            function polarOffset(t, e, r) {
                return [t[0] + Math.cos(e) * r, t[1] - Math.sin(e) * r]
            }
            function pointDistance(t, e) {
                return Math.hypot(t[0] - e[0], t[1] - e[1])
            }
            function pointEqual(t, e) {
                return floatEqual(t[0], e[0]) && floatEqual(t[1], e[1])
            }
            function ZigZagModifier() {}
            function setPoint(t, e, r, i, s, a, n) {
                var o = r - Math.PI / 2
                  , h = r + Math.PI / 2
                  , l = e[0] + Math.cos(r) * i * s
                  , p = e[1] - Math.sin(r) * i * s;
                t.setTripleAt(l, p, l + Math.cos(o) * a, p - Math.sin(o) * a, l + Math.cos(h) * n, p - Math.sin(h) * n, t.length())
            }
            function getPerpendicularVector(t, e) {
                var r = [e[0] - t[0], e[1] - t[1]]
                  , i = .5 * -Math.PI;
                return [Math.cos(i) * r[0] - Math.sin(i) * r[1], Math.sin(i) * r[0] + Math.cos(i) * r[1]]
            }
            function getProjectingAngle(t, e) {
                var r = 0 === e ? t.length() - 1 : e - 1
                  , i = (e + 1) % t.length()
                  , s = getPerpendicularVector(t.v[r], t.v[i]);
                return Math.atan2(0, 1) - Math.atan2(s[1], s[0])
            }
            function zigZagCorner(t, e, r, i, s, a, n) {
                var o = getProjectingAngle(e, r)
                  , h = e.v[r % e._length]
                  , l = e.v[0 === r ? e._length - 1 : r - 1]
                  , p = e.v[(r + 1) % e._length]
                  , c = 2 === a ? Math.sqrt(Math.pow(h[0] - l[0], 2) + Math.pow(h[1] - l[1], 2)) : 0
                  , f = 2 === a ? Math.sqrt(Math.pow(h[0] - p[0], 2) + Math.pow(h[1] - p[1], 2)) : 0;
                setPoint(t, e.v[r % e._length], o, n, i, f / (2 * (s + 1)), c / (2 * (s + 1)), a)
            }
            function zigZagSegment(t, e, r, i, s, a) {
                for (var n = 0; n < i; n += 1) {
                    var o = (n + 1) / (i + 1)
                      , h = 2 === s ? Math.sqrt(Math.pow(e.points[3][0] - e.points[0][0], 2) + Math.pow(e.points[3][1] - e.points[0][1], 2)) : 0
                      , l = e.normalAngle(o);
                    setPoint(t, e.point(o), l, a, r, h / (2 * (i + 1)), h / (2 * (i + 1)), s),
                    a = -a
                }
                return a
            }
            function linearOffset(t, e, r) {
                var i = Math.atan2(e[0] - t[0], e[1] - t[1]);
                return [polarOffset(t, i, r), polarOffset(e, i, r)]
            }
            function offsetSegment(t, e) {
                var r, i, s, a, n, o, h;
                r = (h = linearOffset(t.points[0], t.points[1], e))[0],
                i = h[1],
                s = (h = linearOffset(t.points[1], t.points[2], e))[0],
                a = h[1],
                n = (h = linearOffset(t.points[2], t.points[3], e))[0],
                o = h[1];
                var l = lineIntersection(r, i, s, a);
                null === l && (l = i);
                var p = lineIntersection(n, o, s, a);
                return null === p && (p = n),
                new PolynomialBezier(r,l,p,o)
            }
            function joinLines(t, e, r, i, s) {
                var a = e.points[3]
                  , n = r.points[0];
                if (3 === i)
                    return a;
                if (pointEqual(a, n))
                    return a;
                if (2 === i) {
                    var o = -e.tangentAngle(1)
                      , h = -r.tangentAngle(0) + Math.PI
                      , l = lineIntersection(a, polarOffset(a, o + Math.PI / 2, 100), n, polarOffset(n, o + Math.PI / 2, 100))
                      , p = l ? pointDistance(l, a) : pointDistance(a, n) / 2
                      , c = polarOffset(a, o, 2 * p * roundCorner);
                    return t.setXYAt(c[0], c[1], "o", t.length() - 1),
                    c = polarOffset(n, h, 2 * p * roundCorner),
                    t.setTripleAt(n[0], n[1], n[0], n[1], c[0], c[1], t.length()),
                    n
                }
                var f = lineIntersection(pointEqual(a, e.points[2]) ? e.points[0] : e.points[2], a, n, pointEqual(n, r.points[1]) ? r.points[3] : r.points[1]);
                return f && pointDistance(f, a) < s ? (t.setTripleAt(f[0], f[1], f[0], f[1], f[0], f[1], t.length()),
                f) : a
            }
            function getIntersection(t, e) {
                var r = t.intersections(e);
                return r.length && floatEqual(r[0][0], 1) && r.shift(),
                r.length ? r[0] : null
            }
            function pruneSegmentIntersection(t, e) {
                var r = t.slice()
                  , i = e.slice()
                  , s = getIntersection(t[t.length - 1], e[0]);
                return s && (r[t.length - 1] = t[t.length - 1].split(s[0])[0],
                i[0] = e[0].split(s[1])[1]),
                t.length > 1 && e.length > 1 && (s = getIntersection(t[0], e[e.length - 1])) ? [[t[0].split(s[0])[0]], [e[e.length - 1].split(s[1])[1]]] : [r, i]
            }
            function pruneIntersections(t) {
                for (var e, r = 1; r < t.length; r += 1)
                    e = pruneSegmentIntersection(t[r - 1], t[r]),
                    t[r - 1] = e[0],
                    t[r] = e[1];
                return t.length > 1 && (e = pruneSegmentIntersection(t[t.length - 1], t[0]),
                t[t.length - 1] = e[0],
                t[0] = e[1]),
                t
            }
            function offsetSegmentSplit(t, e) {
                var r, i, s, a, n = t.inflectionPoints();
                if (0 === n.length)
                    return [offsetSegment(t, e)];
                if (1 === n.length || floatEqual(n[1], 1))
                    return r = (s = t.split(n[0]))[0],
                    i = s[1],
                    [offsetSegment(r, e), offsetSegment(i, e)];
                r = (s = t.split(n[0]))[0];
                var o = (n[1] - n[0]) / (1 - n[0]);
                return a = (s = s[1].split(o))[0],
                i = s[1],
                [offsetSegment(r, e), offsetSegment(a, e), offsetSegment(i, e)]
            }
            function OffsetPathModifier() {}
            function getFontProperties(t) {
                for (var e = t.fStyle ? t.fStyle.split(" ") : [], r = "normal", i = "normal", s = e.length, a = 0; a < s; a += 1)
                    switch (e[a].toLowerCase()) {
                    case "italic":
                        i = "italic";
                        break;
                    case "bold":
                        r = "700";
                        break;
                    case "black":
                        r = "900";
                        break;
                    case "medium":
                        r = "500";
                        break;
                    case "regular":
                    case "normal":
                        r = "400";
                        break;
                    case "light":
                    case "thin":
                        r = "200"
                    }
                return {
                    style: i,
                    weight: t.fWeight || r
                }
            }
            extendPrototype([ShapeModifier], RepeaterModifier),
            RepeaterModifier.prototype.initModifierProperties = function(t, e) {
                this.getValue = this.processKeys,
                this.c = PropertyFactory.getProp(t, e.c, 0, null, this),
                this.o = PropertyFactory.getProp(t, e.o, 0, null, this),
                this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this),
                this.so = PropertyFactory.getProp(t, e.tr.so, 0, .01, this),
                this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, .01, this),
                this.data = e,
                this.dynamicProperties.length || this.getValue(!0),
                this._isAnimated = !!this.dynamicProperties.length,
                this.pMatrix = new Matrix,
                this.rMatrix = new Matrix,
                this.sMatrix = new Matrix,
                this.tMatrix = new Matrix,
                this.matrix = new Matrix
            }
            ,
            RepeaterModifier.prototype.applyTransforms = function(t, e, r, i, s, a) {
                var n = a ? -1 : 1
                  , o = i.s.v[0] + (1 - i.s.v[0]) * (1 - s)
                  , h = i.s.v[1] + (1 - i.s.v[1]) * (1 - s);
                t.translate(i.p.v[0] * n * s, i.p.v[1] * n * s, i.p.v[2]),
                e.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]),
                e.rotate(-i.r.v * n * s),
                e.translate(i.a.v[0], i.a.v[1], i.a.v[2]),
                r.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]),
                r.scale(a ? 1 / o : o, a ? 1 / h : h),
                r.translate(i.a.v[0], i.a.v[1], i.a.v[2])
            }
            ,
            RepeaterModifier.prototype.init = function(t, e, r, i) {
                for (this.elem = t,
                this.arr = e,
                this.pos = r,
                this.elemsData = i,
                this._currentCopies = 0,
                this._elements = [],
                this._groups = [],
                this.frameId = -1,
                this.initDynamicPropertyContainer(t),
                this.initModifierProperties(t, e[r]); r > 0; )
                    r -= 1,
                    this._elements.unshift(e[r]);
                this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
            }
            ,
            RepeaterModifier.prototype.resetElements = function(t) {
                var e, r = t.length;
                for (e = 0; e < r; e += 1)
                    t[e]._processed = !1,
                    "gr" === t[e].ty && this.resetElements(t[e].it)
            }
            ,
            RepeaterModifier.prototype.cloneElements = function(t) {
                var e = JSON.parse(JSON.stringify(t));
                return this.resetElements(e),
                e
            }
            ,
            RepeaterModifier.prototype.changeGroupRender = function(t, e) {
                var r, i = t.length;
                for (r = 0; r < i; r += 1)
                    t[r]._render = e,
                    "gr" === t[r].ty && this.changeGroupRender(t[r].it, e)
            }
            ,
            RepeaterModifier.prototype.processShapes = function(t) {
                var e, r, i, s, a, n = !1;
                if (this._mdf || t) {
                    var o, h = Math.ceil(this.c.v);
                    if (this._groups.length < h) {
                        for (; this._groups.length < h; ) {
                            var l = {
                                it: this.cloneElements(this._elements),
                                ty: "gr"
                            };
                            l.it.push({
                                a: {
                                    a: 0,
                                    ix: 1,
                                    k: [0, 0]
                                },
                                nm: "Transform",
                                o: {
                                    a: 0,
                                    ix: 7,
                                    k: 100
                                },
                                p: {
                                    a: 0,
                                    ix: 2,
                                    k: [0, 0]
                                },
                                r: {
                                    a: 1,
                                    ix: 6,
                                    k: [{
                                        s: 0,
                                        e: 0,
                                        t: 0
                                    }, {
                                        s: 0,
                                        e: 0,
                                        t: 1
                                    }]
                                },
                                s: {
                                    a: 0,
                                    ix: 3,
                                    k: [100, 100]
                                },
                                sa: {
                                    a: 0,
                                    ix: 5,
                                    k: 0
                                },
                                sk: {
                                    a: 0,
                                    ix: 4,
                                    k: 0
                                },
                                ty: "tr"
                            }),
                            this.arr.splice(0, 0, l),
                            this._groups.splice(0, 0, l),
                            this._currentCopies += 1
                        }
                        this.elem.reloadShapes(),
                        n = !0
                    }
                    for (a = 0,
                    i = 0; i <= this._groups.length - 1; i += 1) {
                        if (o = a < h,
                        this._groups[i]._render = o,
                        this.changeGroupRender(this._groups[i].it, o),
                        !o) {
                            var p = this.elemsData[i].it
                              , c = p[p.length - 1];
                            0 !== c.transform.op.v ? (c.transform.op._mdf = !0,
                            c.transform.op.v = 0) : c.transform.op._mdf = !1
                        }
                        a += 1
                    }
                    this._currentCopies = h;
                    var f = this.o.v
                      , u = f % 1
                      , d = f > 0 ? Math.floor(f) : Math.ceil(f)
                      , m = this.pMatrix.props
                      , y = this.rMatrix.props
                      , g = this.sMatrix.props;
                    this.pMatrix.reset(),
                    this.rMatrix.reset(),
                    this.sMatrix.reset(),
                    this.tMatrix.reset(),
                    this.matrix.reset();
                    var v, b, _ = 0;
                    if (f > 0) {
                        for (; _ < d; )
                            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                            _ += 1;
                        u && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, u, !1),
                        _ += u)
                    } else if (f < 0) {
                        for (; _ > d; )
                            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0),
                            _ -= 1;
                        u && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -u, !0),
                        _ -= u)
                    }
                    for (i = 1 === this.data.m ? 0 : this._currentCopies - 1,
                    s = 1 === this.data.m ? 1 : -1,
                    a = this._currentCopies; a; ) {
                        if (b = (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props).length,
                        e[e.length - 1].transform.mProps._mdf = !0,
                        e[e.length - 1].transform.op._mdf = !0,
                        e[e.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1)),
                        0 !== _) {
                            for ((0 !== i && 1 === s || i !== this._currentCopies - 1 && -1 === s) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                            this.matrix.transform(y[0], y[1], y[2], y[3], y[4], y[5], y[6], y[7], y[8], y[9], y[10], y[11], y[12], y[13], y[14], y[15]),
                            this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]),
                            this.matrix.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]),
                            v = 0; v < b; v += 1)
                                r[v] = this.matrix.props[v];
                            this.matrix.reset()
                        } else
                            for (this.matrix.reset(),
                            v = 0; v < b; v += 1)
                                r[v] = this.matrix.props[v];
                        _ += 1,
                        a -= 1,
                        i += s
                    }
                } else
                    for (a = this._currentCopies,
                    i = 0,
                    s = 1; a; )
                        r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props,
                        e[e.length - 1].transform.mProps._mdf = !1,
                        e[e.length - 1].transform.op._mdf = !1,
                        a -= 1,
                        i += s;
                return n
            }
            ,
            RepeaterModifier.prototype.addShape = function() {}
            ,
            extendPrototype([ShapeModifier], RoundCornersModifier),
            RoundCornersModifier.prototype.initModifierProperties = function(t, e) {
                this.getValue = this.processKeys,
                this.rd = PropertyFactory.getProp(t, e.r, 0, null, this),
                this._isAnimated = !!this.rd.effectsSequence.length
            }
            ,
            RoundCornersModifier.prototype.processPath = function(t, e) {
                var r, i = shapePool.newElement();
                i.c = t.c;
                var s, a, n, o, h, l, p, c, f, u, d, m, y = t._length, g = 0;
                for (r = 0; r < y; r += 1)
                    s = t.v[r],
                    n = t.o[r],
                    a = t.i[r],
                    s[0] === n[0] && s[1] === n[1] && s[0] === a[0] && s[1] === a[1] ? 0 !== r && r !== y - 1 || t.c ? (o = 0 === r ? t.v[y - 1] : t.v[r - 1],
                    l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0,
                    p = d = s[0] + (o[0] - s[0]) * l,
                    c = m = s[1] - (s[1] - o[1]) * l,
                    f = p - (p - s[0]) * roundCorner,
                    u = c - (c - s[1]) * roundCorner,
                    i.setTripleAt(p, c, f, u, d, m, g),
                    g += 1,
                    o = r === y - 1 ? t.v[0] : t.v[r + 1],
                    l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0,
                    p = f = s[0] + (o[0] - s[0]) * l,
                    c = u = s[1] + (o[1] - s[1]) * l,
                    d = p - (p - s[0]) * roundCorner,
                    m = c - (c - s[1]) * roundCorner,
                    i.setTripleAt(p, c, f, u, d, m, g),
                    g += 1) : (i.setTripleAt(s[0], s[1], n[0], n[1], a[0], a[1], g),
                    g += 1) : (i.setTripleAt(t.v[r][0], t.v[r][1], t.o[r][0], t.o[r][1], t.i[r][0], t.i[r][1], g),
                    g += 1);
                return i
            }
            ,
            RoundCornersModifier.prototype.processShapes = function(t) {
                var e, r, i, s, a, n, o = this.shapes.length, h = this.rd.v;
                if (0 !== h)
                    for (r = 0; r < o; r += 1) {
                        if (n = (a = this.shapes[r]).localShapeCollection,
                        a.shape._mdf || this._mdf || t)
                            for (n.releaseShapes(),
                            a.shape._mdf = !0,
                            e = a.shape.paths.shapes,
                            s = a.shape.paths._length,
                            i = 0; i < s; i += 1)
                                n.addShape(this.processPath(e[i], h));
                        a.shape.paths = a.localShapeCollection
                    }
                this.dynamicProperties.length || (this._mdf = !1)
            }
            ,
            PolynomialBezier.prototype.point = function(t) {
                return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]]
            }
            ,
            PolynomialBezier.prototype.derivative = function(t) {
                return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]]
            }
            ,
            PolynomialBezier.prototype.tangentAngle = function(t) {
                var e = this.derivative(t);
                return Math.atan2(e[1], e[0])
            }
            ,
            PolynomialBezier.prototype.normalAngle = function(t) {
                var e = this.derivative(t);
                return Math.atan2(e[0], e[1])
            }
            ,
            PolynomialBezier.prototype.inflectionPoints = function() {
                var t = this.a[1] * this.b[0] - this.a[0] * this.b[1];
                if (floatZero(t))
                    return [];
                var e = -.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / t
                  , r = e * e - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / t;
                if (r < 0)
                    return [];
                var i = Math.sqrt(r);
                return floatZero(i) ? i > 0 && i < 1 ? [e] : [] : [e - i, e + i].filter((function(t) {
                    return t > 0 && t < 1
                }
                ))
            }
            ,
            PolynomialBezier.prototype.split = function(t) {
                if (t <= 0)
                    return [singlePoint(this.points[0]), this];
                if (t >= 1)
                    return [this, singlePoint(this.points[this.points.length - 1])];
                var e = lerpPoint(this.points[0], this.points[1], t)
                  , r = lerpPoint(this.points[1], this.points[2], t)
                  , i = lerpPoint(this.points[2], this.points[3], t)
                  , s = lerpPoint(e, r, t)
                  , a = lerpPoint(r, i, t)
                  , n = lerpPoint(s, a, t);
                return [new PolynomialBezier(this.points[0],e,s,n,!0), new PolynomialBezier(n,a,i,this.points[3],!0)]
            }
            ,
            PolynomialBezier.prototype.bounds = function() {
                return {
                    x: extrema(this, 0),
                    y: extrema(this, 1)
                }
            }
            ,
            PolynomialBezier.prototype.boundingBox = function() {
                var t = this.bounds();
                return {
                    left: t.x.min,
                    right: t.x.max,
                    top: t.y.min,
                    bottom: t.y.max,
                    width: t.x.max - t.x.min,
                    height: t.y.max - t.y.min,
                    cx: (t.x.max + t.x.min) / 2,
                    cy: (t.y.max + t.y.min) / 2
                }
            }
            ,
            PolynomialBezier.prototype.intersections = function(t, e, r) {
                void 0 === e && (e = 2),
                void 0 === r && (r = 7);
                var i = [];
                return intersectsImpl(intersectData(this, 0, 1), intersectData(t, 0, 1), 0, e, i, r),
                i
            }
            ,
            PolynomialBezier.shapeSegment = function(t, e) {
                var r = (e + 1) % t.length();
                return new PolynomialBezier(t.v[e],t.o[e],t.i[r],t.v[r],!0)
            }
            ,
            PolynomialBezier.shapeSegmentInverted = function(t, e) {
                var r = (e + 1) % t.length();
                return new PolynomialBezier(t.v[r],t.i[r],t.o[e],t.v[e],!0)
            }
            ,
            extendPrototype([ShapeModifier], ZigZagModifier),
            ZigZagModifier.prototype.initModifierProperties = function(t, e) {
                this.getValue = this.processKeys,
                this.amplitude = PropertyFactory.getProp(t, e.s, 0, null, this),
                this.frequency = PropertyFactory.getProp(t, e.r, 0, null, this),
                this.pointsType = PropertyFactory.getProp(t, e.pt, 0, null, this),
                this._isAnimated = 0 !== this.amplitude.effectsSequence.length || 0 !== this.frequency.effectsSequence.length || 0 !== this.pointsType.effectsSequence.length
            }
            ,
            ZigZagModifier.prototype.processPath = function(t, e, r, i) {
                var s = t._length
                  , a = shapePool.newElement();
                if (a.c = t.c,
                t.c || (s -= 1),
                0 === s)
                    return a;
                var n = -1
                  , o = PolynomialBezier.shapeSegment(t, 0);
                zigZagCorner(a, t, 0, e, r, i, n);
                for (var h = 0; h < s; h += 1)
                    n = zigZagSegment(a, o, e, r, i, -n),
                    o = h !== s - 1 || t.c ? PolynomialBezier.shapeSegment(t, (h + 1) % s) : null,
                    zigZagCorner(a, t, h + 1, e, r, i, n);
                return a
            }
            ,
            ZigZagModifier.prototype.processShapes = function(t) {
                var e, r, i, s, a, n, o = this.shapes.length, h = this.amplitude.v, l = Math.max(0, Math.round(this.frequency.v)), p = this.pointsType.v;
                if (0 !== h)
                    for (r = 0; r < o; r += 1) {
                        if (n = (a = this.shapes[r]).localShapeCollection,
                        a.shape._mdf || this._mdf || t)
                            for (n.releaseShapes(),
                            a.shape._mdf = !0,
                            e = a.shape.paths.shapes,
                            s = a.shape.paths._length,
                            i = 0; i < s; i += 1)
                                n.addShape(this.processPath(e[i], h, l, p));
                        a.shape.paths = a.localShapeCollection
                    }
                this.dynamicProperties.length || (this._mdf = !1)
            }
            ,
            extendPrototype([ShapeModifier], OffsetPathModifier),
            OffsetPathModifier.prototype.initModifierProperties = function(t, e) {
                this.getValue = this.processKeys,
                this.amount = PropertyFactory.getProp(t, e.a, 0, null, this),
                this.miterLimit = PropertyFactory.getProp(t, e.ml, 0, null, this),
                this.lineJoin = e.lj,
                this._isAnimated = 0 !== this.amount.effectsSequence.length
            }
            ,
            OffsetPathModifier.prototype.processPath = function(t, e, r, i) {
                var s = shapePool.newElement();
                s.c = t.c;
                var a, n, o, h = t.length();
                t.c || (h -= 1);
                var l = [];
                for (a = 0; a < h; a += 1)
                    o = PolynomialBezier.shapeSegment(t, a),
                    l.push(offsetSegmentSplit(o, e));
                if (!t.c)
                    for (a = h - 1; a >= 0; a -= 1)
                        o = PolynomialBezier.shapeSegmentInverted(t, a),
                        l.push(offsetSegmentSplit(o, e));
                l = pruneIntersections(l);
                var p = null
                  , c = null;
                for (a = 0; a < l.length; a += 1) {
                    var f = l[a];
                    for (c && (p = joinLines(s, c, f[0], r, i)),
                    c = f[f.length - 1],
                    n = 0; n < f.length; n += 1)
                        o = f[n],
                        p && pointEqual(o.points[0], p) ? s.setXYAt(o.points[1][0], o.points[1][1], "o", s.length() - 1) : s.setTripleAt(o.points[0][0], o.points[0][1], o.points[1][0], o.points[1][1], o.points[0][0], o.points[0][1], s.length()),
                        s.setTripleAt(o.points[3][0], o.points[3][1], o.points[3][0], o.points[3][1], o.points[2][0], o.points[2][1], s.length()),
                        p = o.points[3]
                }
                return l.length && joinLines(s, c, l[0][0], r, i),
                s
            }
            ,
            OffsetPathModifier.prototype.processShapes = function(t) {
                var e, r, i, s, a, n, o = this.shapes.length, h = this.amount.v, l = this.miterLimit.v, p = this.lineJoin;
                if (0 !== h)
                    for (r = 0; r < o; r += 1) {
                        if (n = (a = this.shapes[r]).localShapeCollection,
                        a.shape._mdf || this._mdf || t)
                            for (n.releaseShapes(),
                            a.shape._mdf = !0,
                            e = a.shape.paths.shapes,
                            s = a.shape.paths._length,
                            i = 0; i < s; i += 1)
                                n.addShape(this.processPath(e[i], h, p, l));
                        a.shape.paths = a.localShapeCollection
                    }
                this.dynamicProperties.length || (this._mdf = !1)
            }
            ;
            var FontManager = function() {
                var t = {
                    w: 0,
                    size: 0,
                    shapes: [],
                    data: {
                        shapes: []
                    }
                }
                  , e = [];
                e = e.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
                var r = 127988
                  , i = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
                function s(t, e) {
                    var r = createTag("span");
                    r.setAttribute("aria-hidden", !0),
                    r.style.fontFamily = e;
                    var i = createTag("span");
                    i.innerText = "giItT1WQy@!-/#",
                    r.style.position = "absolute",
                    r.style.left = "-10000px",
                    r.style.top = "-10000px",
                    r.style.fontSize = "300px",
                    r.style.fontVariant = "normal",
                    r.style.fontStyle = "normal",
                    r.style.fontWeight = "normal",
                    r.style.letterSpacing = "0",
                    r.appendChild(i),
                    document.body.appendChild(r);
                    var s = i.offsetWidth;
                    return i.style.fontFamily = function(t) {
                        var e, r = t.split(","), i = r.length, s = [];
                        for (e = 0; e < i; e += 1)
                            "sans-serif" !== r[e] && "monospace" !== r[e] && s.push(r[e]);
                        return s.join(",")
                    }(t) + ", " + e,
                    {
                        node: i,
                        w: s,
                        parent: r
                    }
                }
                function a(t, e) {
                    var r, i = document.body && e ? "svg" : "canvas", s = getFontProperties(t);
                    if ("svg" === i) {
                        var a = createNS("text");
                        a.style.fontSize = "100px",
                        a.setAttribute("font-family", t.fFamily),
                        a.setAttribute("font-style", s.style),
                        a.setAttribute("font-weight", s.weight),
                        a.textContent = "1",
                        t.fClass ? (a.style.fontFamily = "inherit",
                        a.setAttribute("class", t.fClass)) : a.style.fontFamily = t.fFamily,
                        e.appendChild(a),
                        r = a
                    } else {
                        var n = new OffscreenCanvas(500,500).getContext("2d");
                        n.font = s.style + " " + s.weight + " 100px " + t.fFamily,
                        r = n
                    }
                    return {
                        measureText: function(t) {
                            return "svg" === i ? (r.textContent = t,
                            r.getComputedTextLength()) : r.measureText(t).width
                        }
                    }
                }
                function n(t) {
                    var e = 0
                      , r = t.charCodeAt(0);
                    if (r >= 55296 && r <= 56319) {
                        var i = t.charCodeAt(1);
                        i >= 56320 && i <= 57343 && (e = 1024 * (r - 55296) + i - 56320 + 65536)
                    }
                    return e
                }
                function o(t) {
                    var e = n(t);
                    return e >= 127462 && e <= 127487
                }
                var h = function() {
                    this.fonts = [],
                    this.chars = null,
                    this.typekitLoaded = 0,
                    this.isLoaded = !1,
                    this._warned = !1,
                    this.initTime = Date.now(),
                    this.setIsLoadedBinded = this.setIsLoaded.bind(this),
                    this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)
                };
                h.isModifier = function(t, e) {
                    var r = t.toString(16) + e.toString(16);
                    return -1 !== i.indexOf(r)
                }
                ,
                h.isZeroWidthJoiner = function(t) {
                    return 8205 === t
                }
                ,
                h.isFlagEmoji = function(t) {
                    return o(t.substr(0, 2)) && o(t.substr(2, 2))
                }
                ,
                h.isRegionalCode = o,
                h.isCombinedCharacter = function(t) {
                    return -1 !== e.indexOf(t)
                }
                ,
                h.isRegionalFlag = function(t, e) {
                    var i = n(t.substr(e, 2));
                    if (i !== r)
                        return !1;
                    var s = 0;
                    for (e += 2; s < 5; ) {
                        if ((i = n(t.substr(e, 2))) < 917601 || i > 917626)
                            return !1;
                        s += 1,
                        e += 2
                    }
                    return 917631 === n(t.substr(e, 2))
                }
                ,
                h.isVariationSelector = function(t) {
                    return 65039 === t
                }
                ,
                h.BLACK_FLAG_CODE_POINT = r;
                var l = {
                    addChars: function(t) {
                        if (t) {
                            var e;
                            this.chars || (this.chars = []);
                            var r, i, s = t.length, a = this.chars.length;
                            for (e = 0; e < s; e += 1) {
                                for (r = 0,
                                i = !1; r < a; )
                                    this.chars[r].style === t[e].style && this.chars[r].fFamily === t[e].fFamily && this.chars[r].ch === t[e].ch && (i = !0),
                                    r += 1;
                                i || (this.chars.push(t[e]),
                                a += 1)
                            }
                        }
                    },
                    addFonts: function(t, e) {
                        if (t) {
                            if (this.chars)
                                return this.isLoaded = !0,
                                void (this.fonts = t.list);
                            if (!document.body)
                                return this.isLoaded = !0,
                                t.list.forEach((function(t) {
                                    t.helper = a(t),
                                    t.cache = {}
                                }
                                )),
                                void (this.fonts = t.list);
                            var r, i = t.list, n = i.length, o = n;
                            for (r = 0; r < n; r += 1) {
                                var h, l, p = !0;
                                if (i[r].loaded = !1,
                                i[r].monoCase = s(i[r].fFamily, "monospace"),
                                i[r].sansCase = s(i[r].fFamily, "sans-serif"),
                                i[r].fPath) {
                                    if ("p" === i[r].fOrigin || 3 === i[r].origin) {
                                        if ((h = document.querySelectorAll('style[f-forigin="p"][f-family="' + i[r].fFamily + '"], style[f-origin="3"][f-family="' + i[r].fFamily + '"]')).length > 0 && (p = !1),
                                        p) {
                                            var c = createTag("style");
                                            c.setAttribute("f-forigin", i[r].fOrigin),
                                            c.setAttribute("f-origin", i[r].origin),
                                            c.setAttribute("f-family", i[r].fFamily),
                                            c.type = "text/css",
                                            c.innerText = "@font-face {font-family: " + i[r].fFamily + "; font-style: normal; src: url('" + i[r].fPath + "');}",
                                            e.appendChild(c)
                                        }
                                    } else if ("g" === i[r].fOrigin || 1 === i[r].origin) {
                                        for (h = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'),
                                        l = 0; l < h.length; l += 1)
                                            -1 !== h[l].href.indexOf(i[r].fPath) && (p = !1);
                                        if (p) {
                                            var f = createTag("link");
                                            f.setAttribute("f-forigin", i[r].fOrigin),
                                            f.setAttribute("f-origin", i[r].origin),
                                            f.type = "text/css",
                                            f.rel = "stylesheet",
                                            f.href = i[r].fPath,
                                            document.body.appendChild(f)
                                        }
                                    } else if ("t" === i[r].fOrigin || 2 === i[r].origin) {
                                        for (h = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'),
                                        l = 0; l < h.length; l += 1)
                                            i[r].fPath === h[l].src && (p = !1);
                                        if (p) {
                                            var u = createTag("link");
                                            u.setAttribute("f-forigin", i[r].fOrigin),
                                            u.setAttribute("f-origin", i[r].origin),
                                            u.setAttribute("rel", "stylesheet"),
                                            u.setAttribute("href", i[r].fPath),
                                            e.appendChild(u)
                                        }
                                    }
                                } else
                                    i[r].loaded = !0,
                                    o -= 1;
                                i[r].helper = a(i[r], e),
                                i[r].cache = {},
                                this.fonts.push(i[r])
                            }
                            0 === o ? this.isLoaded = !0 : setTimeout(this.checkLoadedFonts.bind(this), 100)
                        } else
                            this.isLoaded = !0
                    },
                    getCharData: function(e, r, i) {
                        for (var s = 0, a = this.chars.length; s < a; ) {
                            if (this.chars[s].ch === e && this.chars[s].style === r && this.chars[s].fFamily === i)
                                return this.chars[s];
                            s += 1
                        }
                        return ("string" == typeof e && 13 !== e.charCodeAt(0) || !e) && console && console.warn && !this._warned && (this._warned = !0,
                        console.warn("Missing character from exported characters list: ", e, r, i)),
                        t
                    },
                    getFontByName: function(t) {
                        for (var e = 0, r = this.fonts.length; e < r; ) {
                            if (this.fonts[e].fName === t)
                                return this.fonts[e];
                            e += 1
                        }
                        return this.fonts[0]
                    },
                    measureText: function(t, e, r) {
                        var i = this.getFontByName(e)
                          , s = t;
                        if (!i.cache[s]) {
                            var a = i.helper;
                            if (" " === t) {
                                var n = a.measureText("|" + t + "|")
                                  , o = a.measureText("||");
                                i.cache[s] = (n - o) / 100
                            } else
                                i.cache[s] = a.measureText(t) / 100
                        }
                        return i.cache[s] * r
                    },
                    checkLoadedFonts: function() {
                        var t, e, r, i = this.fonts.length, s = i;
                        for (t = 0; t < i; t += 1)
                            this.fonts[t].loaded ? s -= 1 : "n" === this.fonts[t].fOrigin || 0 === this.fonts[t].origin ? this.fonts[t].loaded = !0 : (e = this.fonts[t].monoCase.node,
                            r = this.fonts[t].monoCase.w,
                            e.offsetWidth !== r ? (s -= 1,
                            this.fonts[t].loaded = !0) : (e = this.fonts[t].sansCase.node,
                            r = this.fonts[t].sansCase.w,
                            e.offsetWidth !== r && (s -= 1,
                            this.fonts[t].loaded = !0)),
                            this.fonts[t].loaded && (this.fonts[t].sansCase.parent.parentNode.removeChild(this.fonts[t].sansCase.parent),
                            this.fonts[t].monoCase.parent.parentNode.removeChild(this.fonts[t].monoCase.parent)));
                        0 !== s && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10)
                    },
                    setIsLoaded: function() {
                        this.isLoaded = !0
                    }
                };
                return h.prototype = l,
                h
            }();
            function SlotManager(t) {
                this.animationData = t
            }
            function slotFactory(t) {
                return new SlotManager(t)
            }
            function RenderableElement() {}
            SlotManager.prototype.getProp = function(t) {
                return this.animationData.slots && this.animationData.slots[t.sid] ? Object.assign(t, this.animationData.slots[t.sid].p) : t
            }
            ,
            RenderableElement.prototype = {
                initRenderable: function() {
                    this.isInRange = !1,
                    this.hidden = !1,
                    this.isTransparent = !1,
                    this.renderableComponents = []
                },
                addRenderableComponent: function(t) {
                    -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t)
                },
                removeRenderableComponent: function(t) {
                    -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1)
                },
                prepareRenderableFrame: function(t) {
                    this.checkLayerLimits(t)
                },
                checkTransparency: function() {
                    this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = !0,
                    this.hide()) : this.isTransparent && (this.isTransparent = !1,
                    this.show())
                },
                checkLayerLimits: function(t) {
                    this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? !0 !== this.isInRange && (this.globalData._mdf = !0,
                    this._mdf = !0,
                    this.isInRange = !0,
                    this.show()) : !1 !== this.isInRange && (this.globalData._mdf = !0,
                    this.isInRange = !1,
                    this.hide())
                },
                renderRenderable: function() {
                    var t, e = this.renderableComponents.length;
                    for (t = 0; t < e; t += 1)
                        this.renderableComponents[t].renderFrame(this._isFirstFrame)
                },
                sourceRectAtTime: function() {
                    return {
                        top: 0,
                        left: 0,
                        width: 100,
                        height: 100
                    }
                },
                getLayerSize: function() {
                    return 5 === this.data.ty ? {
                        w: this.data.textData.width,
                        h: this.data.textData.height
                    } : {
                        w: this.data.width,
                        h: this.data.height
                    }
                }
            };
            var getBlendMode = (blendModeEnums = {
                0: "source-over",
                1: "multiply",
                2: "screen",
                3: "overlay",
                4: "darken",
                5: "lighten",
                6: "color-dodge",
                7: "color-burn",
                8: "hard-light",
                9: "soft-light",
                10: "difference",
                11: "exclusion",
                12: "hue",
                13: "saturation",
                14: "color",
                15: "luminosity"
            },
            function(t) {
                return blendModeEnums[t] || ""
            }
            ), blendModeEnums;
            function SliderEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
            }
            function AngleEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
            }
            function ColorEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 1, 0, r)
            }
            function PointEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 1, 0, r)
            }
            function LayerIndexEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
            }
            function MaskIndexEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
            }
            function CheckboxEffect(t, e, r) {
                this.p = PropertyFactory.getProp(e, t.v, 0, 0, r)
            }
            function NoValueEffect() {
                this.p = {}
            }
            function EffectsManager(t, e) {
                var r, i = t.ef || [];
                this.effectElements = [];
                var s, a = i.length;
                for (r = 0; r < a; r += 1)
                    s = new GroupEffect(i[r],e),
                    this.effectElements.push(s)
            }
            function GroupEffect(t, e) {
                this.init(t, e)
            }
            function BaseElement() {}
            function FrameElement() {}
            function FootageElement(t, e, r) {
                this.initFrame(),
                this.initRenderable(),
                this.assetData = e.getAssetData(t.refId),
                this.footageData = e.imageLoader.getAsset(this.assetData),
                this.initBaseData(t, e, r)
            }
            function AudioElement(t, e, r) {
                this.initFrame(),
                this.initRenderable(),
                this.assetData = e.getAssetData(t.refId),
                this.initBaseData(t, e, r),
                this._isPlaying = !1,
                this._canPlay = !1;
                var i = this.globalData.getAssetsPath(this.assetData);
                this.audio = this.globalData.audioController.createAudio(i),
                this._currentTime = 0,
                this.globalData.audioController.addAudio(this),
                this._volumeMultiplier = 1,
                this._volume = 1,
                this._previousVolume = null,
                this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                    _placeholder: !0
                },
                this.lv = PropertyFactory.getProp(this, t.au && t.au.lv ? t.au.lv : {
                    k: [100]
                }, 1, .01, this)
            }
            function BaseRenderer() {}
            extendPrototype([DynamicPropertyContainer], GroupEffect),
            GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties,
            GroupEffect.prototype.init = function(t, e) {
                var r;
                this.data = t,
                this.effectElements = [],
                this.initDynamicPropertyContainer(e);
                var i, s = this.data.ef.length, a = this.data.ef;
                for (r = 0; r < s; r += 1) {
                    switch (i = null,
                    a[r].ty) {
                    case 0:
                        i = new SliderEffect(a[r],e,this);
                        break;
                    case 1:
                        i = new AngleEffect(a[r],e,this);
                        break;
                    case 2:
                        i = new ColorEffect(a[r],e,this);
                        break;
                    case 3:
                        i = new PointEffect(a[r],e,this);
                        break;
                    case 4:
                    case 7:
                        i = new CheckboxEffect(a[r],e,this);
                        break;
                    case 10:
                        i = new LayerIndexEffect(a[r],e,this);
                        break;
                    case 11:
                        i = new MaskIndexEffect(a[r],e,this);
                        break;
                    case 5:
                        i = new EffectsManager(a[r],e,this);
                        break;
                    default:
                        i = new NoValueEffect(a[r],e,this)
                    }
                    i && this.effectElements.push(i)
                }
            }
            ,
            BaseElement.prototype = {
                checkMasks: function() {
                    if (!this.data.hasMask)
                        return !1;
                    for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
                        if ("n" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl)
                            return !0;
                        t += 1
                    }
                    return !1
                },
                initExpressions: function() {
                    var t = getExpressionInterfaces();
                    if (t) {
                        var e = t("layer")
                          , r = t("effects")
                          , i = t("shape")
                          , s = t("text")
                          , a = t("comp");
                        this.layerInterface = e(this),
                        this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                        var n = r.createEffectsInterface(this, this.layerInterface);
                        this.layerInterface.registerEffectsInterface(n),
                        0 === this.data.ty || this.data.xt ? this.compInterface = a(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = i(this.shapesData, this.itemsData, this.layerInterface),
                        this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = s(this),
                        this.layerInterface.text = this.layerInterface.textInterface)
                    }
                },
                setBlendMode: function() {
                    var t = getBlendMode(this.data.bm);
                    (this.baseElement || this.layerElement).style["mix-blend-mode"] = t
                },
                initBaseData: function(t, e, r) {
                    this.globalData = e,
                    this.comp = r,
                    this.data = t,
                    this.layerId = createElementID(),
                    this.data.sr || (this.data.sr = 1),
                    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties)
                },
                getType: function() {
                    return this.type
                },
                sourceRectAtTime: function() {}
            },
            FrameElement.prototype = {
                initFrame: function() {
                    this._isFirstFrame = !1,
                    this.dynamicProperties = [],
                    this._mdf = !1
                },
                prepareProperties: function(t, e) {
                    var r, i = this.dynamicProperties.length;
                    for (r = 0; r < i; r += 1)
                        (e || this._isParent && "transform" === this.dynamicProperties[r].propType) && (this.dynamicProperties[r].getValue(),
                        this.dynamicProperties[r]._mdf && (this.globalData._mdf = !0,
                        this._mdf = !0))
                },
                addDynamicProperty: function(t) {
                    -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t)
                }
            },
            FootageElement.prototype.prepareFrame = function() {}
            ,
            extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement),
            FootageElement.prototype.getBaseElement = function() {
                return null
            }
            ,
            FootageElement.prototype.renderFrame = function() {}
            ,
            FootageElement.prototype.destroy = function() {}
            ,
            FootageElement.prototype.initExpressions = function() {
                var t = getExpressionInterfaces();
                if (t) {
                    var e = t("footage");
                    this.layerInterface = e(this)
                }
            }
            ,
            FootageElement.prototype.getFootageData = function() {
                return this.footageData
            }
            ,
            AudioElement.prototype.prepareFrame = function(t) {
                if (this.prepareRenderableFrame(t, !0),
                this.prepareProperties(t, !0),
                this.tm._placeholder)
                    this._currentTime = t / this.data.sr;
                else {
                    var e = this.tm.v;
                    this._currentTime = e
                }
                this._volume = this.lv.v[0];
                var r = this._volume * this._volumeMultiplier;
                this._previousVolume !== r && (this._previousVolume = r,
                this.audio.volume(r))
            }
            ,
            extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement),
            AudioElement.prototype.renderFrame = function() {
                this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > .1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(),
                this.audio.seek(this._currentTime / this.globalData.frameRate),
                this._isPlaying = !0))
            }
            ,
            AudioElement.prototype.show = function() {}
            ,
            AudioElement.prototype.hide = function() {
                this.audio.pause(),
                this._isPlaying = !1
            }
            ,
            AudioElement.prototype.pause = function() {
                this.audio.pause(),
                this._isPlaying = !1,
                this._canPlay = !1
            }
            ,
            AudioElement.prototype.resume = function() {
                this._canPlay = !0
            }
            ,
            AudioElement.prototype.setRate = function(t) {
                this.audio.rate(t)
            }
            ,
            AudioElement.prototype.volume = function(t) {
                this._volumeMultiplier = t,
                this._previousVolume = t * this._volume,
                this.audio.volume(this._previousVolume)
            }
            ,
            AudioElement.prototype.getBaseElement = function() {
                return null
            }
            ,
            AudioElement.prototype.destroy = function() {}
            ,
            AudioElement.prototype.sourceRectAtTime = function() {}
            ,
            AudioElement.prototype.initExpressions = function() {}
            ,
            BaseRenderer.prototype.checkLayers = function(t) {
                var e, r, i = this.layers.length;
                for (this.completeLayers = !0,
                e = i - 1; e >= 0; e -= 1)
                    this.elements[e] || (r = this.layers[e]).ip - r.st <= t - this.layers[e].st && r.op - r.st > t - this.layers[e].st && this.buildItem(e),
                    this.completeLayers = !!this.elements[e] && this.completeLayers;
                this.checkPendingElements()
            }
            ,
            BaseRenderer.prototype.createItem = function(t) {
                switch (t.ty) {
                case 2:
                    return this.createImage(t);
                case 0:
                    return this.createComp(t);
                case 1:
                    return this.createSolid(t);
                case 3:
                default:
                    return this.createNull(t);
                case 4:
                    return this.createShape(t);
                case 5:
                    return this.createText(t);
                case 6:
                    return this.createAudio(t);
                case 13:
                    return this.createCamera(t);
                case 15:
                    return this.createFootage(t)
                }
            }
            ,
            BaseRenderer.prototype.createCamera = function() {
                throw new Error("You're using a 3d camera. Try the html renderer.")
            }
            ,
            BaseRenderer.prototype.createAudio = function(t) {
                return new AudioElement(t,this.globalData,this)
            }
            ,
            BaseRenderer.prototype.createFootage = function(t) {
                return new FootageElement(t,this.globalData,this)
            }
            ,
            BaseRenderer.prototype.buildAllItems = function() {
                var t, e = this.layers.length;
                for (t = 0; t < e; t += 1)
                    this.buildItem(t);
                this.checkPendingElements()
            }
            ,
            BaseRenderer.prototype.includeLayers = function(t) {
                var e;
                this.completeLayers = !1;
                var r, i = t.length, s = this.layers.length;
                for (e = 0; e < i; e += 1)
                    for (r = 0; r < s; ) {
                        if (this.layers[r].id === t[e].id) {
                            this.layers[r] = t[e];
                            break
                        }
                        r += 1
                    }
            }
            ,
            BaseRenderer.prototype.setProjectInterface = function(t) {
                this.globalData.projectInterface = t
            }
            ,
            BaseRenderer.prototype.initItems = function() {
                this.globalData.progressiveLoad || this.buildAllItems()
            }
            ,
            BaseRenderer.prototype.buildElementParenting = function(t, e, r) {
                for (var i = this.elements, s = this.layers, a = 0, n = s.length; a < n; )
                    s[a].ind == e && (i[a] && !0 !== i[a] ? (r.push(i[a]),
                    i[a].setAsParent(),
                    void 0 !== s[a].parent ? this.buildElementParenting(t, s[a].parent, r) : t.setHierarchy(r)) : (this.buildItem(a),
                    this.addPendingElement(t))),
                    a += 1
            }
            ,
            BaseRenderer.prototype.addPendingElement = function(t) {
                this.pendingElements.push(t)
            }
            ,
            BaseRenderer.prototype.searchExtraCompositions = function(t) {
                var e, r = t.length;
                for (e = 0; e < r; e += 1)
                    if (t[e].xt) {
                        var i = this.createComp(t[e]);
                        i.initExpressions(),
                        this.globalData.projectInterface.registerComposition(i)
                    }
            }
            ,
            BaseRenderer.prototype.getElementById = function(t) {
                var e, r = this.elements.length;
                for (e = 0; e < r; e += 1)
                    if (this.elements[e].data.ind === t)
                        return this.elements[e];
                return null
            }
            ,
            BaseRenderer.prototype.getElementByPath = function(t) {
                var e, r = t.shift();
                if ("number" == typeof r)
                    e = this.elements[r];
                else {
                    var i, s = this.elements.length;
                    for (i = 0; i < s; i += 1)
                        if (this.elements[i].data.nm === r) {
                            e = this.elements[i];
                            break
                        }
                }
                return 0 === t.length ? e : e.getElementByPath(t)
            }
            ,
            BaseRenderer.prototype.setupGlobalData = function(t, e) {
                this.globalData.fontManager = new FontManager,
                this.globalData.slotManager = slotFactory(t),
                this.globalData.fontManager.addChars(t.chars),
                this.globalData.fontManager.addFonts(t.fonts, e),
                this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem),
                this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem),
                this.globalData.imageLoader = this.animationItem.imagePreloader,
                this.globalData.audioController = this.animationItem.audioController,
                this.globalData.frameId = 0,
                this.globalData.frameRate = t.fr,
                this.globalData.nm = t.nm,
                this.globalData.compSize = {
                    w: t.w,
                    h: t.h
                }
            }
            ;
            var effectTypes = {
                TRANSFORM_EFFECT: "transformEFfect"
            };
            function TransformElement() {}
            function MaskElement(t, e, r) {
                this.data = t,
                this.element = e,
                this.globalData = r,
                this.storedData = [],
                this.masksProperties = this.data.masksProperties || [],
                this.maskElement = null;
                var i, s, a = this.globalData.defs, n = this.masksProperties ? this.masksProperties.length : 0;
                this.viewData = createSizedArray(n),
                this.solidPath = "";
                var o, h, l, p, c, f, u = this.masksProperties, d = 0, m = [], y = createElementID(), g = "clipPath", v = "clip-path";
                for (i = 0; i < n; i += 1)
                    if (("a" !== u[i].mode && "n" !== u[i].mode || u[i].inv || 100 !== u[i].o.k || u[i].o.x) && (g = "mask",
                    v = "mask"),
                    "s" !== u[i].mode && "i" !== u[i].mode || 0 !== d ? l = null : ((l = createNS("rect")).setAttribute("fill", "#ffffff"),
                    l.setAttribute("width", this.element.comp.data.w || 0),
                    l.setAttribute("height", this.element.comp.data.h || 0),
                    m.push(l)),
                    s = createNS("path"),
                    "n" === u[i].mode)
                        this.viewData[i] = {
                            op: PropertyFactory.getProp(this.element, u[i].o, 0, .01, this.element),
                            prop: ShapePropertyFactory.getShapeProp(this.element, u[i], 3),
                            elem: s,
                            lastPath: ""
                        },
                        a.appendChild(s);
                    else {
                        var b;
                        if (d += 1,
                        s.setAttribute("fill", "s" === u[i].mode ? "#000000" : "#ffffff"),
                        s.setAttribute("clip-rule", "nonzero"),
                        0 !== u[i].x.k ? (g = "mask",
                        v = "mask",
                        f = PropertyFactory.getProp(this.element, u[i].x, 0, null, this.element),
                        b = createElementID(),
                        (p = createNS("filter")).setAttribute("id", b),
                        (c = createNS("feMorphology")).setAttribute("operator", "erode"),
                        c.setAttribute("in", "SourceGraphic"),
                        c.setAttribute("radius", "0"),
                        p.appendChild(c),
                        a.appendChild(p),
                        s.setAttribute("stroke", "s" === u[i].mode ? "#000000" : "#ffffff")) : (c = null,
                        f = null),
                        this.storedData[i] = {
                            elem: s,
                            x: f,
                            expan: c,
                            lastPath: "",
                            lastOperator: "",
                            filterId: b,
                            lastRadius: 0
                        },
                        "i" === u[i].mode) {
                            h = m.length;
                            var _ = createNS("g");
                            for (o = 0; o < h; o += 1)
                                _.appendChild(m[o]);
                            var P = createNS("mask");
                            P.setAttribute("mask-type", "alpha"),
                            P.setAttribute("id", y + "_" + d),
                            P.appendChild(s),
                            a.appendChild(P),
                            _.setAttribute("mask", "url(" + getLocationHref() + "#" + y + "_" + d + ")"),
                            m.length = 0,
                            m.push(_)
                        } else
                            m.push(s);
                        u[i].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()),
                        this.viewData[i] = {
                            elem: s,
                            lastPath: "",
                            op: PropertyFactory.getProp(this.element, u[i].o, 0, .01, this.element),
                            prop: ShapePropertyFactory.getShapeProp(this.element, u[i], 3),
                            invRect: l
                        },
                        this.viewData[i].prop.k || this.drawPath(u[i], this.viewData[i].prop.v, this.viewData[i])
                    }
                for (this.maskElement = createNS(g),
                n = m.length,
                i = 0; i < n; i += 1)
                    this.maskElement.appendChild(m[i]);
                d > 0 && (this.maskElement.setAttribute("id", y),
                this.element.maskedElement.setAttribute(v, "url(" + getLocationHref() + "#" + y + ")"),
                a.appendChild(this.maskElement)),
                this.viewData.length && this.element.addRenderableComponent(this)
            }
            TransformElement.prototype = {
                initTransform: function() {
                    var t = new Matrix;
                    this.finalTransform = {
                        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
                            o: 0
                        },
                        _matMdf: !1,
                        _localMatMdf: !1,
                        _opMdf: !1,
                        mat: t,
                        localMat: t,
                        localOpacity: 1
                    },
                    this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                    this.data.ty
                },
                renderTransform: function() {
                    if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame,
                    this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame,
                    this.hierarchy) {
                        var t, e = this.finalTransform.mat, r = 0, i = this.hierarchy.length;
                        if (!this.finalTransform._matMdf)
                            for (; r < i; ) {
                                if (this.hierarchy[r].finalTransform.mProp._mdf) {
                                    this.finalTransform._matMdf = !0;
                                    break
                                }
                                r += 1
                            }
                        if (this.finalTransform._matMdf)
                            for (t = this.finalTransform.mProp.v.props,
                            e.cloneFromProps(t),
                            r = 0; r < i; r += 1)
                                e.multiply(this.hierarchy[r].finalTransform.mProp.v)
                    }
                    this.finalTransform._matMdf && (this.finalTransform._localMatMdf = this.finalTransform._matMdf),
                    this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v)
                },
                renderLocalTransform: function() {
                    if (this.localTransforms) {
                        var t = 0
                          , e = this.localTransforms.length;
                        if (this.finalTransform._localMatMdf = this.finalTransform._matMdf,
                        !this.finalTransform._localMatMdf || !this.finalTransform._opMdf)
                            for (; t < e; )
                                this.localTransforms[t]._mdf && (this.finalTransform._localMatMdf = !0),
                                this.localTransforms[t]._opMdf && !this.finalTransform._opMdf && (this.finalTransform.localOpacity = this.finalTransform.mProp.o.v,
                                this.finalTransform._opMdf = !0),
                                t += 1;
                        if (this.finalTransform._localMatMdf) {
                            var r = this.finalTransform.localMat;
                            for (this.localTransforms[0].matrix.clone(r),
                            t = 1; t < e; t += 1) {
                                var i = this.localTransforms[t].matrix;
                                r.multiply(i)
                            }
                            r.multiply(this.finalTransform.mat)
                        }
                        if (this.finalTransform._opMdf) {
                            var s = this.finalTransform.localOpacity;
                            for (t = 0; t < e; t += 1)
                                s *= .01 * this.localTransforms[t].opacity;
                            this.finalTransform.localOpacity = s
                        }
                    }
                },
                searchEffectTransforms: function() {
                    if (this.renderableEffectsManager) {
                        var t = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);
                        if (t.length) {
                            this.localTransforms = [],
                            this.finalTransform.localMat = new Matrix;
                            var e = 0
                              , r = t.length;
                            for (e = 0; e < r; e += 1)
                                this.localTransforms.push(t[e])
                        }
                    }
                },
                globalToLocal: function(t) {
                    var e = [];
                    e.push(this.finalTransform);
                    for (var r, i = !0, s = this.comp; i; )
                        s.finalTransform ? (s.data.hasMask && e.splice(0, 0, s.finalTransform),
                        s = s.comp) : i = !1;
                    var a, n = e.length;
                    for (r = 0; r < n; r += 1)
                        a = e[r].mat.applyToPointArray(0, 0, 0),
                        t = [t[0] - a[0], t[1] - a[1], 0];
                    return t
                },
                mHelper: new Matrix
            },
            MaskElement.prototype.getMaskProperty = function(t) {
                return this.viewData[t].prop
            }
            ,
            MaskElement.prototype.renderFrame = function(t) {
                var e, r = this.element.finalTransform.mat, i = this.masksProperties.length;
                for (e = 0; e < i; e += 1)
                    if ((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]),
                    (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v),
                    "n" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", r.getInverseMatrix().to2dCSS()),
                    this.storedData[e].x && (this.storedData[e].x._mdf || t))) {
                        var s = this.storedData[e].expan;
                        this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "erode",
                        this.storedData[e].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[e].filterId + ")")),
                        s.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && (this.storedData[e].lastOperator = "dilate",
                        this.storedData[e].elem.setAttribute("filter", null)),
                        this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v))
                    }
            }
            ,
            MaskElement.prototype.getMaskelement = function() {
                return this.maskElement
            }
            ,
            MaskElement.prototype.createLayerSolidPath = function() {
                var t = "M0,0 ";
                return t += " h" + this.globalData.compSize.w,
                t += " v" + this.globalData.compSize.h,
                t += " h-" + this.globalData.compSize.w,
                t += " v-" + this.globalData.compSize.h + " "
            }
            ,
            MaskElement.prototype.drawPath = function(t, e, r) {
                var i, s, a = " M" + e.v[0][0] + "," + e.v[0][1];
                for (s = e._length,
                i = 1; i < s; i += 1)
                    a += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[i][0] + "," + e.i[i][1] + " " + e.v[i][0] + "," + e.v[i][1];
                if (e.c && s > 1 && (a += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]),
                r.lastPath !== a) {
                    var n = "";
                    r.elem && (e.c && (n = t.inv ? this.solidPath + a : a),
                    r.elem.setAttribute("d", n)),
                    r.lastPath = a
                }
            }
            ,
            MaskElement.prototype.destroy = function() {
                this.element = null,
                this.globalData = null,
                this.maskElement = null,
                this.data = null,
                this.masksProperties = null
            }
            ;
            var filtersFactory = function() {
                var t = {
                    createFilter: function(t, e) {
                        var r = createNS("filter");
                        return r.setAttribute("id", t),
                        !0 !== e && (r.setAttribute("filterUnits", "objectBoundingBox"),
                        r.setAttribute("x", "0%"),
                        r.setAttribute("y", "0%"),
                        r.setAttribute("width", "100%"),
                        r.setAttribute("height", "100%")),
                        r
                    },
                    createAlphaToLuminanceFilter: function() {
                        var t = createNS("feColorMatrix");
                        return t.setAttribute("type", "matrix"),
                        t.setAttribute("color-interpolation-filters", "sRGB"),
                        t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),
                        t
                    }
                };
                return t
            }()
              , featureSupport = function() {
                var t = {
                    maskType: !0,
                    svgLumaHidden: !0,
                    offscreenCanvas: "undefined" != typeof OffscreenCanvas
                };
                return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = !1),
                /firefox/i.test(navigator.userAgent) && (t.svgLumaHidden = !1),
                t
            }()
              , registeredEffects$1 = {}
              , idPrefix = "filter_result_";
            function SVGEffects(t) {
                var e, r, i = "SourceGraphic", s = t.data.ef ? t.data.ef.length : 0, a = createElementID(), n = filtersFactory.createFilter(a, !0), o = 0;
                for (this.filters = [],
                e = 0; e < s; e += 1) {
                    r = null;
                    var h = t.data.ef[e].ty;
                    registeredEffects$1[h] && (r = new (0,
                    registeredEffects$1[h].effect)(n,t.effectsManager.effectElements[e],t,idPrefix + o,i),
                    i = idPrefix + o,
                    registeredEffects$1[h].countsAsEffect && (o += 1)),
                    r && this.filters.push(r)
                }
                o && (t.globalData.defs.appendChild(n),
                t.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + a + ")")),
                this.filters.length && t.addRenderableComponent(this)
            }
            function registerEffect$1(t, e, r) {
                registeredEffects$1[t] = {
                    effect: e,
                    countsAsEffect: r
                }
            }
            function SVGBaseElement() {}
            function HierarchyElement() {}
            function RenderableDOMElement() {}
            function IImageElement(t, e, r) {
                this.assetData = e.getAssetData(t.refId),
                this.assetData && this.assetData.sid && (this.assetData = e.slotManager.getProp(this.assetData)),
                this.initElement(t, e, r),
                this.sourceRect = {
                    top: 0,
                    left: 0,
                    width: this.assetData.w,
                    height: this.assetData.h
                }
            }
            function ProcessedElement(t, e) {
                this.elem = t,
                this.pos = e
            }
            function IShapeElement() {}
            SVGEffects.prototype.renderFrame = function(t) {
                var e, r = this.filters.length;
                for (e = 0; e < r; e += 1)
                    this.filters[e].renderFrame(t)
            }
            ,
            SVGEffects.prototype.getEffects = function(t) {
                var e, r = this.filters.length, i = [];
                for (e = 0; e < r; e += 1)
                    this.filters[e].type === t && i.push(this.filters[e]);
                return i
            }
            ,
            SVGBaseElement.prototype = {
                initRendererElement: function() {
                    this.layerElement = createNS("g")
                },
                createContainerElements: function() {
                    this.matteElement = createNS("g"),
                    this.transformedElement = this.layerElement,
                    this.maskedElement = this.layerElement,
                    this._sizeChanged = !1;
                    var t = null;
                    if (this.data.td) {
                        this.matteMasks = {};
                        var e = createNS("g");
                        e.setAttribute("id", this.layerId),
                        e.appendChild(this.layerElement),
                        t = e,
                        this.globalData.defs.appendChild(e)
                    } else
                        this.data.tt ? (this.matteElement.appendChild(this.layerElement),
                        t = this.matteElement,
                        this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
                    if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                    this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                    0 === this.data.ty && !this.data.hd) {
                        var r = createNS("clipPath")
                          , i = createNS("path");
                        i.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                        var s = createElementID();
                        if (r.setAttribute("id", s),
                        r.appendChild(i),
                        this.globalData.defs.appendChild(r),
                        this.checkMasks()) {
                            var a = createNS("g");
                            a.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"),
                            a.appendChild(this.layerElement),
                            this.transformedElement = a,
                            t ? t.appendChild(this.transformedElement) : this.baseElement = this.transformedElement
                        } else
                            this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")")
                    }
                    0 !== this.data.bm && this.setBlendMode()
                },
                renderElement: function() {
                    this.finalTransform._localMatMdf && this.transformedElement.setAttribute("transform", this.finalTransform.localMat.to2dCSS()),
                    this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.localOpacity)
                },
                destroyBaseElement: function() {
                    this.layerElement = null,
                    this.matteElement = null,
                    this.maskManager.destroy()
                },
                getBaseElement: function() {
                    return this.data.hd ? null : this.baseElement
                },
                createRenderableComponents: function() {
                    this.maskManager = new MaskElement(this.data,this,this.globalData),
                    this.renderableEffectsManager = new SVGEffects(this),
                    this.searchEffectTransforms()
                },
                getMatte: function(t) {
                    if (this.matteMasks || (this.matteMasks = {}),
                    !this.matteMasks[t]) {
                        var e, r, i, s, a = this.layerId + "_" + t;
                        if (1 === t || 3 === t) {
                            var n = createNS("mask");
                            n.setAttribute("id", a),
                            n.setAttribute("mask-type", 3 === t ? "luminance" : "alpha"),
                            (i = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                            n.appendChild(i),
                            this.globalData.defs.appendChild(n),
                            featureSupport.maskType || 1 !== t || (n.setAttribute("mask-type", "luminance"),
                            e = createElementID(),
                            r = filtersFactory.createFilter(e),
                            this.globalData.defs.appendChild(r),
                            r.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                            (s = createNS("g")).appendChild(i),
                            n.appendChild(s),
                            s.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"))
                        } else if (2 === t) {
                            var o = createNS("mask");
                            o.setAttribute("id", a),
                            o.setAttribute("mask-type", "alpha");
                            var h = createNS("g");
                            o.appendChild(h),
                            e = createElementID(),
                            r = filtersFactory.createFilter(e);
                            var l = createNS("feComponentTransfer");
                            l.setAttribute("in", "SourceGraphic"),
                            r.appendChild(l);
                            var p = createNS("feFuncA");
                            p.setAttribute("type", "table"),
                            p.setAttribute("tableValues", "1.0 0.0"),
                            l.appendChild(p),
                            this.globalData.defs.appendChild(r);
                            var c = createNS("rect");
                            c.setAttribute("width", this.comp.data.w),
                            c.setAttribute("height", this.comp.data.h),
                            c.setAttribute("x", "0"),
                            c.setAttribute("y", "0"),
                            c.setAttribute("fill", "#ffffff"),
                            c.setAttribute("opacity", "0"),
                            h.setAttribute("filter", "url(" + getLocationHref() + "#" + e + ")"),
                            h.appendChild(c),
                            (i = createNS("use")).setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId),
                            h.appendChild(i),
                            featureSupport.maskType || (o.setAttribute("mask-type", "luminance"),
                            r.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                            s = createNS("g"),
                            h.appendChild(c),
                            s.appendChild(this.layerElement),
                            h.appendChild(s)),
                            this.globalData.defs.appendChild(o)
                        }
                        this.matteMasks[t] = a
                    }
                    return this.matteMasks[t]
                },
                setMatte: function(t) {
                    this.matteElement && this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + t + ")")
                }
            },
            HierarchyElement.prototype = {
                initHierarchy: function() {
                    this.hierarchy = [],
                    this._isParent = !1,
                    this.checkParenting()
                },
                setHierarchy: function(t) {
                    this.hierarchy = t
                },
                setAsParent: function() {
                    this._isParent = !0
                },
                checkParenting: function() {
                    void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, [])
                }
            },
            extendPrototype([RenderableElement, createProxyFunction({
                initElement: function(t, e, r) {
                    this.initFrame(),
                    this.initBaseData(t, e, r),
                    this.initTransform(t, e, r),
                    this.initHierarchy(),
                    this.initRenderable(),
                    this.initRendererElement(),
                    this.createContainerElements(),
                    this.createRenderableComponents(),
                    this.createContent(),
                    this.hide()
                },
                hide: function() {
                    this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none",
                    this.hidden = !0)
                },
                show: function() {
                    this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"),
                    this.hidden = !1,
                    this._isFirstFrame = !0)
                },
                renderFrame: function() {
                    this.data.hd || this.hidden || (this.renderTransform(),
                    this.renderRenderable(),
                    this.renderLocalTransform(),
                    this.renderElement(),
                    this.renderInnerContent(),
                    this._isFirstFrame && (this._isFirstFrame = !1))
                },
                renderInnerContent: function() {},
                prepareFrame: function(t) {
                    this._mdf = !1,
                    this.prepareRenderableFrame(t),
                    this.prepareProperties(t, this.isInRange),
                    this.checkTransparency()
                },
                destroy: function() {
                    this.innerElem = null,
                    this.destroyBaseElement()
                }
            })], RenderableDOMElement),
            extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
            IImageElement.prototype.createContent = function() {
                var t = this.globalData.getAssetsPath(this.assetData);
                this.innerElem = createNS("image"),
                this.innerElem.setAttribute("width", this.assetData.w + "px"),
                this.innerElem.setAttribute("height", this.assetData.h + "px"),
                this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio),
                this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
                this.layerElement.appendChild(this.innerElem)
            }
            ,
            IImageElement.prototype.sourceRectAtTime = function() {
                return this.sourceRect
            }
            ,
            IShapeElement.prototype = {
                addShapeToModifiers: function(t) {
                    var e, r = this.shapeModifiers.length;
                    for (e = 0; e < r; e += 1)
                        this.shapeModifiers[e].addShape(t)
                },
                isShapeInAnimatedModifiers: function(t) {
                    for (var e = this.shapeModifiers.length; 0 < e; )
                        if (this.shapeModifiers[0].isAnimatedWithShape(t))
                            return !0;
                    return !1
                },
                renderModifiers: function() {
                    if (this.shapeModifiers.length) {
                        var t, e = this.shapes.length;
                        for (t = 0; t < e; t += 1)
                            this.shapes[t].sh.reset();
                        for (t = (e = this.shapeModifiers.length) - 1; t >= 0 && !this.shapeModifiers[t].processShapes(this._isFirstFrame); t -= 1)
                            ;
                    }
                },
                searchProcessedElement: function(t) {
                    for (var e = this.processedElements, r = 0, i = e.length; r < i; ) {
                        if (e[r].elem === t)
                            return e[r].pos;
                        r += 1
                    }
                    return 0
                },
                addProcessedElement: function(t, e) {
                    for (var r = this.processedElements, i = r.length; i; )
                        if (r[i -= 1].elem === t)
                            return void (r[i].pos = e);
                    r.push(new ProcessedElement(t,e))
                },
                prepareFrame: function(t) {
                    this.prepareRenderableFrame(t),
                    this.prepareProperties(t, this.isInRange)
                }
            };
            var lineCapEnum = {
                1: "butt",
                2: "round",
                3: "square"
            }
              , lineJoinEnum = {
                1: "miter",
                2: "round",
                3: "bevel"
            };
            function SVGShapeData(t, e, r) {
                this.caches = [],
                this.styles = [],
                this.transformers = t,
                this.lStr = "",
                this.sh = r,
                this.lvl = e,
                this._isAnimated = !!r.k;
                for (var i = 0, s = t.length; i < s; ) {
                    if (t[i].mProps.dynamicProperties.length) {
                        this._isAnimated = !0;
                        break
                    }
                    i += 1
                }
            }
            function SVGStyleData(t, e) {
                this.data = t,
                this.type = t.ty,
                this.d = "",
                this.lvl = e,
                this._mdf = !1,
                this.closed = !0 === t.hd,
                this.pElem = createNS("path"),
                this.msElem = null
            }
            function DashProperty(t, e, r, i) {
                var s;
                this.elem = t,
                this.frameId = -1,
                this.dataProps = createSizedArray(e.length),
                this.renderer = r,
                this.k = !1,
                this.dashStr = "",
                this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0),
                this.dashoffset = createTypedArray("float32", 1),
                this.initDynamicPropertyContainer(i);
                var a, n = e.length || 0;
                for (s = 0; s < n; s += 1)
                    a = PropertyFactory.getProp(t, e[s].v, 0, 0, this),
                    this.k = a.k || this.k,
                    this.dataProps[s] = {
                        n: e[s].n,
                        p: a
                    };
                this.k || this.getValue(!0),
                this._isAnimated = this.k
            }
            function SVGStrokeStyleData(t, e, r) {
                this.initDynamicPropertyContainer(t),
                this.getValue = this.iterateDynamicProperties,
                this.o = PropertyFactory.getProp(t, e.o, 0, .01, this),
                this.w = PropertyFactory.getProp(t, e.w, 0, null, this),
                this.d = new DashProperty(t,e.d || {},"svg",this),
                this.c = PropertyFactory.getProp(t, e.c, 1, 255, this),
                this.style = r,
                this._isAnimated = !!this._isAnimated
            }
            function SVGFillStyleData(t, e, r) {
                this.initDynamicPropertyContainer(t),
                this.getValue = this.iterateDynamicProperties,
                this.o = PropertyFactory.getProp(t, e.o, 0, .01, this),
                this.c = PropertyFactory.getProp(t, e.c, 1, 255, this),
                this.style = r
            }
            function SVGNoStyleData(t, e, r) {
                this.initDynamicPropertyContainer(t),
                this.getValue = this.iterateDynamicProperties,
                this.style = r
            }
            function GradientProperty(t, e, r) {
                this.data = e,
                this.c = createTypedArray("uint8c", 4 * e.p);
                var i = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
                this.o = createTypedArray("float32", i),
                this._cmdf = !1,
                this._omdf = !1,
                this._collapsable = this.checkCollapsable(),
                this._hasOpacity = i,
                this.initDynamicPropertyContainer(r),
                this.prop = PropertyFactory.getProp(t, e.k, 1, null, this),
                this.k = this.prop.k,
                this.getValue(!0)
            }
            function SVGGradientFillStyleData(t, e, r) {
                this.initDynamicPropertyContainer(t),
                this.getValue = this.iterateDynamicProperties,
                this.initGradientData(t, e, r)
            }
            function SVGGradientStrokeStyleData(t, e, r) {
                this.initDynamicPropertyContainer(t),
                this.getValue = this.iterateDynamicProperties,
                this.w = PropertyFactory.getProp(t, e.w, 0, null, this),
                this.d = new DashProperty(t,e.d || {},"svg",this),
                this.initGradientData(t, e, r),
                this._isAnimated = !!this._isAnimated
            }
            function ShapeGroupData() {
                this.it = [],
                this.prevViewData = [],
                this.gr = createNS("g")
            }
            function SVGTransformData(t, e, r) {
                this.transform = {
                    mProps: t,
                    op: e,
                    container: r
                },
                this.elements = [],
                this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length
            }
            SVGShapeData.prototype.setAsAnimated = function() {
                this._isAnimated = !0
            }
            ,
            SVGStyleData.prototype.reset = function() {
                this.d = "",
                this._mdf = !1
            }
            ,
            DashProperty.prototype.getValue = function(t) {
                if ((this.elem.globalData.frameId !== this.frameId || t) && (this.frameId = this.elem.globalData.frameId,
                this.iterateDynamicProperties(),
                this._mdf = this._mdf || t,
                this._mdf)) {
                    var e = 0
                      , r = this.dataProps.length;
                    for ("svg" === this.renderer && (this.dashStr = ""),
                    e = 0; e < r; e += 1)
                        "o" !== this.dataProps[e].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[e].p.v : this.dashArray[e] = this.dataProps[e].p.v : this.dashoffset[0] = this.dataProps[e].p.v
                }
            }
            ,
            extendPrototype([DynamicPropertyContainer], DashProperty),
            extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
            extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
            extendPrototype([DynamicPropertyContainer], SVGNoStyleData),
            GradientProperty.prototype.comparePoints = function(t, e) {
                for (var r = 0, i = this.o.length / 2; r < i; ) {
                    if (Math.abs(t[4 * r] - t[4 * e + 2 * r]) > .01)
                        return !1;
                    r += 1
                }
                return !0
            }
            ,
            GradientProperty.prototype.checkCollapsable = function() {
                if (this.o.length / 2 != this.c.length / 4)
                    return !1;
                if (this.data.k.k[0].s)
                    for (var t = 0, e = this.data.k.k.length; t < e; ) {
                        if (!this.comparePoints(this.data.k.k[t].s, this.data.p))
                            return !1;
                        t += 1
                    }
                else if (!this.comparePoints(this.data.k.k, this.data.p))
                    return !1;
                return !0
            }
            ,
            GradientProperty.prototype.getValue = function(t) {
                if (this.prop.getValue(),
                this._mdf = !1,
                this._cmdf = !1,
                this._omdf = !1,
                this.prop._mdf || t) {
                    var e, r, i, s = 4 * this.data.p;
                    for (e = 0; e < s; e += 1)
                        r = e % 4 == 0 ? 100 : 255,
                        i = Math.round(this.prop.v[e] * r),
                        this.c[e] !== i && (this.c[e] = i,
                        this._cmdf = !t);
                    if (this.o.length)
                        for (s = this.prop.v.length,
                        e = 4 * this.data.p; e < s; e += 1)
                            r = e % 2 == 0 ? 100 : 1,
                            i = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e],
                            this.o[e - 4 * this.data.p] !== i && (this.o[e - 4 * this.data.p] = i,
                            this._omdf = !t);
                    this._mdf = !t
                }
            }
            ,
            extendPrototype([DynamicPropertyContainer], GradientProperty),
            SVGGradientFillStyleData.prototype.initGradientData = function(t, e, r) {
                this.o = PropertyFactory.getProp(t, e.o, 0, .01, this),
                this.s = PropertyFactory.getProp(t, e.s, 1, null, this),
                this.e = PropertyFactory.getProp(t, e.e, 1, null, this),
                this.h = PropertyFactory.getProp(t, e.h || {
                    k: 0
                }, 0, .01, this),
                this.a = PropertyFactory.getProp(t, e.a || {
                    k: 0
                }, 0, degToRads, this),
                this.g = new GradientProperty(t,e.g,this),
                this.style = r,
                this.stops = [],
                this.setGradientData(r.pElem, e),
                this.setGradientOpacity(e, r),
                this._isAnimated = !!this._isAnimated
            }
            ,
            SVGGradientFillStyleData.prototype.setGradientData = function(t, e) {
                var r = createElementID()
                  , i = createNS(1 === e.t ? "linearGradient" : "radialGradient");
                i.setAttribute("id", r),
                i.setAttribute("spreadMethod", "pad"),
                i.setAttribute("gradientUnits", "userSpaceOnUse");
                var s, a, n, o = [];
                for (n = 4 * e.g.p,
                a = 0; a < n; a += 4)
                    s = createNS("stop"),
                    i.appendChild(s),
                    o.push(s);
                t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + r + ")"),
                this.gf = i,
                this.cst = o
            }
            ,
            SVGGradientFillStyleData.prototype.setGradientOpacity = function(t, e) {
                if (this.g._hasOpacity && !this.g._collapsable) {
                    var r, i, s, a = createNS("mask"), n = createNS("path");
                    a.appendChild(n);
                    var o = createElementID()
                      , h = createElementID();
                    a.setAttribute("id", h);
                    var l = createNS(1 === t.t ? "linearGradient" : "radialGradient");
                    l.setAttribute("id", o),
                    l.setAttribute("spreadMethod", "pad"),
                    l.setAttribute("gradientUnits", "userSpaceOnUse"),
                    s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length;
                    var p = this.stops;
                    for (i = 4 * t.g.p; i < s; i += 2)
                        (r = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"),
                        l.appendChild(r),
                        p.push(r);
                    n.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + getLocationHref() + "#" + o + ")"),
                    "gs" === t.ty && (n.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]),
                    n.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]),
                    1 === t.lj && n.setAttribute("stroke-miterlimit", t.ml)),
                    this.of = l,
                    this.ms = a,
                    this.ost = p,
                    this.maskId = h,
                    e.msElem = n
                }
            }
            ,
            extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
            extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
            var buildShapeString = function(t, e, r, i) {
                if (0 === e)
                    return "";
                var s, a = t.o, n = t.i, o = t.v, h = " M" + i.applyToPointStringified(o[0][0], o[0][1]);
                for (s = 1; s < e; s += 1)
                    h += " C" + i.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + i.applyToPointStringified(n[s][0], n[s][1]) + " " + i.applyToPointStringified(o[s][0], o[s][1]);
                return r && e && (h += " C" + i.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + i.applyToPointStringified(n[0][0], n[0][1]) + " " + i.applyToPointStringified(o[0][0], o[0][1]),
                h += "z"),
                h
            }
              , SVGElementsRenderer = function() {
                var t = new Matrix
                  , e = new Matrix;
                function r(t, e, r) {
                    (r || e.transform.op._mdf) && e.transform.container.setAttribute("opacity", e.transform.op.v),
                    (r || e.transform.mProps._mdf) && e.transform.container.setAttribute("transform", e.transform.mProps.v.to2dCSS())
                }
                function i() {}
                function s(r, i, s) {
                    var a, n, o, h, l, p, c, f, u, d, m = i.styles.length, y = i.lvl;
                    for (p = 0; p < m; p += 1) {
                        if (h = i.sh._mdf || s,
                        i.styles[p].lvl < y) {
                            for (f = e.reset(),
                            u = y - i.styles[p].lvl,
                            d = i.transformers.length - 1; !h && u > 0; )
                                h = i.transformers[d].mProps._mdf || h,
                                u -= 1,
                                d -= 1;
                            if (h)
                                for (u = y - i.styles[p].lvl,
                                d = i.transformers.length - 1; u > 0; )
                                    f.multiply(i.transformers[d].mProps.v),
                                    u -= 1,
                                    d -= 1
                        } else
                            f = t;
                        if (n = (c = i.sh.paths)._length,
                        h) {
                            for (o = "",
                            a = 0; a < n; a += 1)
                                (l = c.shapes[a]) && l._length && (o += buildShapeString(l, l._length, l.c, f));
                            i.caches[p] = o
                        } else
                            o = i.caches[p];
                        i.styles[p].d += !0 === r.hd ? "" : o,
                        i.styles[p]._mdf = h || i.styles[p]._mdf
                    }
                }
                function a(t, e, r) {
                    var i = e.style;
                    (e.c._mdf || r) && i.pElem.setAttribute("fill", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                    (e.o._mdf || r) && i.pElem.setAttribute("fill-opacity", e.o.v)
                }
                function n(t, e, r) {
                    o(t, e, r),
                    h(0, e, r)
                }
                function o(t, e, r) {
                    var i, s, a, n, o, h = e.gf, l = e.g._hasOpacity, p = e.s.v, c = e.e.v;
                    if (e.o._mdf || r) {
                        var f = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                        e.style.pElem.setAttribute(f, e.o.v)
                    }
                    if (e.s._mdf || r) {
                        var u = 1 === t.t ? "x1" : "cx"
                          , d = "x1" === u ? "y1" : "cy";
                        h.setAttribute(u, p[0]),
                        h.setAttribute(d, p[1]),
                        l && !e.g._collapsable && (e.of.setAttribute(u, p[0]),
                        e.of.setAttribute(d, p[1]))
                    }
                    if (e.g._cmdf || r) {
                        i = e.cst;
                        var m = e.g.c;
                        for (a = i.length,
                        s = 0; s < a; s += 1)
                            (n = i[s]).setAttribute("offset", m[4 * s] + "%"),
                            n.setAttribute("stop-color", "rgb(" + m[4 * s + 1] + "," + m[4 * s + 2] + "," + m[4 * s + 3] + ")")
                    }
                    if (l && (e.g._omdf || r)) {
                        var y = e.g.o;
                        for (a = (i = e.g._collapsable ? e.cst : e.ost).length,
                        s = 0; s < a; s += 1)
                            n = i[s],
                            e.g._collapsable || n.setAttribute("offset", y[2 * s] + "%"),
                            n.setAttribute("stop-opacity", y[2 * s + 1])
                    }
                    if (1 === t.t)
                        (e.e._mdf || r) && (h.setAttribute("x2", c[0]),
                        h.setAttribute("y2", c[1]),
                        l && !e.g._collapsable && (e.of.setAttribute("x2", c[0]),
                        e.of.setAttribute("y2", c[1])));
                    else if ((e.s._mdf || e.e._mdf || r) && (o = Math.sqrt(Math.pow(p[0] - c[0], 2) + Math.pow(p[1] - c[1], 2)),
                    h.setAttribute("r", o),
                    l && !e.g._collapsable && e.of.setAttribute("r", o)),
                    e.e._mdf || e.h._mdf || e.a._mdf || r) {
                        o || (o = Math.sqrt(Math.pow(p[0] - c[0], 2) + Math.pow(p[1] - c[1], 2)));
                        var g = Math.atan2(c[1] - p[1], c[0] - p[0])
                          , v = e.h.v;
                        v >= 1 ? v = .99 : v <= -1 && (v = -.99);
                        var b = o * v
                          , _ = Math.cos(g + e.a.v) * b + p[0]
                          , P = Math.sin(g + e.a.v) * b + p[1];
                        h.setAttribute("fx", _),
                        h.setAttribute("fy", P),
                        l && !e.g._collapsable && (e.of.setAttribute("fx", _),
                        e.of.setAttribute("fy", P))
                    }
                }
                function h(t, e, r) {
                    var i = e.style
                      , s = e.d;
                    s && (s._mdf || r) && s.dashStr && (i.pElem.setAttribute("stroke-dasharray", s.dashStr),
                    i.pElem.setAttribute("stroke-dashoffset", s.dashoffset[0])),
                    e.c && (e.c._mdf || r) && i.pElem.setAttribute("stroke", "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                    (e.o._mdf || r) && i.pElem.setAttribute("stroke-opacity", e.o.v),
                    (e.w._mdf || r) && (i.pElem.setAttribute("stroke-width", e.w.v),
                    i.msElem && i.msElem.setAttribute("stroke-width", e.w.v))
                }
                return {
                    createRenderFunction: function(t) {
                        switch (t.ty) {
                        case "fl":
                            return a;
                        case "gf":
                            return o;
                        case "gs":
                            return n;
                        case "st":
                            return h;
                        case "sh":
                        case "el":
                        case "rc":
                        case "sr":
                            return s;
                        case "tr":
                            return r;
                        case "no":
                            return i;
                        default:
                            return null
                        }
                    }
                }
            }();
            function SVGShapeElement(t, e, r) {
                this.shapes = [],
                this.shapesData = t.shapes,
                this.stylesList = [],
                this.shapeModifiers = [],
                this.itemsData = [],
                this.processedElements = [],
                this.animatedContents = [],
                this.initElement(t, e, r),
                this.prevViewData = []
            }
            function LetterProps(t, e, r, i, s, a) {
                this.o = t,
                this.sw = e,
                this.sc = r,
                this.fc = i,
                this.m = s,
                this.p = a,
                this._mdf = {
                    o: !0,
                    sw: !!e,
                    sc: !!r,
                    fc: !!i,
                    m: !0,
                    p: !0
                }
            }
            function TextProperty(t, e) {
                this._frameId = initialDefaultFrame,
                this.pv = "",
                this.v = "",
                this.kf = !1,
                this._isFirstFrame = !0,
                this._mdf = !1,
                e.d && e.d.sid && (e.d = t.globalData.slotManager.getProp(e.d)),
                this.data = e,
                this.elem = t,
                this.comp = this.elem.comp,
                this.keysIndex = 0,
                this.canResize = !1,
                this.minimumFontSize = 1,
                this.effectsSequence = [],
                this.currentData = {
                    ascent: 0,
                    boxWidth: this.defaultBoxWidth,
                    f: "",
                    fStyle: "",
                    fWeight: "",
                    fc: "",
                    j: "",
                    justifyOffset: "",
                    l: [],
                    lh: 0,
                    lineWidths: [],
                    ls: "",
                    of: "",
                    s: "",
                    sc: "",
                    sw: 0,
                    t: 0,
                    tr: 0,
                    sz: 0,
                    ps: null,
                    fillColorAnim: !1,
                    strokeColorAnim: !1,
                    strokeWidthAnim: !1,
                    yOffset: 0,
                    finalSize: 0,
                    finalText: [],
                    finalLineHeight: 0,
                    __complete: !1
                },
                this.copyData(this.currentData, this.data.d.k[0].s),
                this.searchProperty() || this.completeTextData(this.currentData)
            }
            extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
            SVGShapeElement.prototype.initSecondaryElement = function() {}
            ,
            SVGShapeElement.prototype.identityMatrix = new Matrix,
            SVGShapeElement.prototype.buildExpressionInterface = function() {}
            ,
            SVGShapeElement.prototype.createContent = function() {
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
                this.filterUniqueShapes()
            }
            ,
            SVGShapeElement.prototype.filterUniqueShapes = function() {
                var t, e, r, i, s = this.shapes.length, a = this.stylesList.length, n = [], o = !1;
                for (r = 0; r < a; r += 1) {
                    for (i = this.stylesList[r],
                    o = !1,
                    n.length = 0,
                    t = 0; t < s; t += 1)
                        -1 !== (e = this.shapes[t]).styles.indexOf(i) && (n.push(e),
                        o = e._isAnimated || o);
                    n.length > 1 && o && this.setShapesAsAnimated(n)
                }
            }
            ,
            SVGShapeElement.prototype.setShapesAsAnimated = function(t) {
                var e, r = t.length;
                for (e = 0; e < r; e += 1)
                    t[e].setAsAnimated()
            }
            ,
            SVGShapeElement.prototype.createStyleElement = function(t, e) {
                var r, i = new SVGStyleData(t,e), s = i.pElem;
                return "st" === t.ty ? r = new SVGStrokeStyleData(this,t,i) : "fl" === t.ty ? r = new SVGFillStyleData(this,t,i) : "gf" === t.ty || "gs" === t.ty ? (r = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this,t,i),
                this.globalData.defs.appendChild(r.gf),
                r.maskId && (this.globalData.defs.appendChild(r.ms),
                this.globalData.defs.appendChild(r.of),
                s.setAttribute("mask", "url(" + getLocationHref() + "#" + r.maskId + ")"))) : "no" === t.ty && (r = new SVGNoStyleData(this,t,i)),
                "st" !== t.ty && "gs" !== t.ty || (s.setAttribute("stroke-linecap", lineCapEnum[t.lc || 2]),
                s.setAttribute("stroke-linejoin", lineJoinEnum[t.lj || 2]),
                s.setAttribute("fill-opacity", "0"),
                1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)),
                2 === t.r && s.setAttribute("fill-rule", "evenodd"),
                t.ln && s.setAttribute("id", t.ln),
                t.cl && s.setAttribute("class", t.cl),
                t.bm && (s.style["mix-blend-mode"] = getBlendMode(t.bm)),
                this.stylesList.push(i),
                this.addToAnimatedContents(t, r),
                r
            }
            ,
            SVGShapeElement.prototype.createGroupElement = function(t) {
                var e = new ShapeGroupData;
                return t.ln && e.gr.setAttribute("id", t.ln),
                t.cl && e.gr.setAttribute("class", t.cl),
                t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)),
                e
            }
            ,
            SVGShapeElement.prototype.createTransformElement = function(t, e) {
                var r = TransformPropertyFactory.getTransformProperty(this, t, this)
                  , i = new SVGTransformData(r,r.o,e);
                return this.addToAnimatedContents(t, i),
                i
            }
            ,
            SVGShapeElement.prototype.createShapeElement = function(t, e, r) {
                var i = 4;
                "rc" === t.ty ? i = 5 : "el" === t.ty ? i = 6 : "sr" === t.ty && (i = 7);
                var s = new SVGShapeData(e,r,ShapePropertyFactory.getShapeProp(this, t, i, this));
                return this.shapes.push(s),
                this.addShapeToModifiers(s),
                this.addToAnimatedContents(t, s),
                s
            }
            ,
            SVGShapeElement.prototype.addToAnimatedContents = function(t, e) {
                for (var r = 0, i = this.animatedContents.length; r < i; ) {
                    if (this.animatedContents[r].element === e)
                        return;
                    r += 1
                }
                this.animatedContents.push({
                    fn: SVGElementsRenderer.createRenderFunction(t),
                    element: e,
                    data: t
                })
            }
            ,
            SVGShapeElement.prototype.setElementStyles = function(t) {
                var e, r = t.styles, i = this.stylesList.length;
                for (e = 0; e < i; e += 1)
                    this.stylesList[e].closed || r.push(this.stylesList[e])
            }
            ,
            SVGShapeElement.prototype.reloadShapes = function() {
                var t;
                this._isFirstFrame = !0;
                var e = this.itemsData.length;
                for (t = 0; t < e; t += 1)
                    this.prevViewData[t] = this.itemsData[t];
                for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
                this.filterUniqueShapes(),
                e = this.dynamicProperties.length,
                t = 0; t < e; t += 1)
                    this.dynamicProperties[t].getValue();
                this.renderModifiers()
            }
            ,
            SVGShapeElement.prototype.searchShapes = function(t, e, r, i, s, a, n) {
                var o, h, l, p, c, f, u = [].concat(a), d = t.length - 1, m = [], y = [];
                for (o = d; o >= 0; o -= 1) {
                    if ((f = this.searchProcessedElement(t[o])) ? e[o] = r[f - 1] : t[o]._render = n,
                    "fl" === t[o].ty || "st" === t[o].ty || "gf" === t[o].ty || "gs" === t[o].ty || "no" === t[o].ty)
                        f ? e[o].style.closed = !1 : e[o] = this.createStyleElement(t[o], s),
                        t[o]._render && e[o].style.pElem.parentNode !== i && i.appendChild(e[o].style.pElem),
                        m.push(e[o].style);
                    else if ("gr" === t[o].ty) {
                        if (f)
                            for (l = e[o].it.length,
                            h = 0; h < l; h += 1)
                                e[o].prevViewData[h] = e[o].it[h];
                        else
                            e[o] = this.createGroupElement(t[o]);
                        this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, s + 1, u, n),
                        t[o]._render && e[o].gr.parentNode !== i && i.appendChild(e[o].gr)
                    } else
                        "tr" === t[o].ty ? (f || (e[o] = this.createTransformElement(t[o], i)),
                        p = e[o].transform,
                        u.push(p)) : "sh" === t[o].ty || "rc" === t[o].ty || "el" === t[o].ty || "sr" === t[o].ty ? (f || (e[o] = this.createShapeElement(t[o], u, s)),
                        this.setElementStyles(e[o])) : "tm" === t[o].ty || "rd" === t[o].ty || "ms" === t[o].ty || "pb" === t[o].ty || "zz" === t[o].ty || "op" === t[o].ty ? (f ? (c = e[o]).closed = !1 : ((c = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]),
                        e[o] = c,
                        this.shapeModifiers.push(c)),
                        y.push(c)) : "rp" === t[o].ty && (f ? (c = e[o]).closed = !0 : (c = ShapeModifiers.getModifier(t[o].ty),
                        e[o] = c,
                        c.init(this, t, o, e),
                        this.shapeModifiers.push(c),
                        n = !1),
                        y.push(c));
                    this.addProcessedElement(t[o], o + 1)
                }
                for (d = m.length,
                o = 0; o < d; o += 1)
                    m[o].closed = !0;
                for (d = y.length,
                o = 0; o < d; o += 1)
                    y[o].closed = !0
            }
            ,
            SVGShapeElement.prototype.renderInnerContent = function() {
                var t;
                this.renderModifiers();
                var e = this.stylesList.length;
                for (t = 0; t < e; t += 1)
                    this.stylesList[t].reset();
                for (this.renderShape(),
                t = 0; t < e; t += 1)
                    (this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d),
                    this.stylesList[t].d = "M0 0" + this.stylesList[t].d),
                    this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"))
            }
            ,
            SVGShapeElement.prototype.renderShape = function() {
                var t, e, r = this.animatedContents.length;
                for (t = 0; t < r; t += 1)
                    e = this.animatedContents[t],
                    (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame)
            }
            ,
            SVGShapeElement.prototype.destroy = function() {
                this.destroyBaseElement(),
                this.shapesData = null,
                this.itemsData = null
            }
            ,
            LetterProps.prototype.update = function(t, e, r, i, s, a) {
                this._mdf.o = !1,
                this._mdf.sw = !1,
                this._mdf.sc = !1,
                this._mdf.fc = !1,
                this._mdf.m = !1,
                this._mdf.p = !1;
                var n = !1;
                return this.o !== t && (this.o = t,
                this._mdf.o = !0,
                n = !0),
                this.sw !== e && (this.sw = e,
                this._mdf.sw = !0,
                n = !0),
                this.sc !== r && (this.sc = r,
                this._mdf.sc = !0,
                n = !0),
                this.fc !== i && (this.fc = i,
                this._mdf.fc = !0,
                n = !0),
                this.m !== s && (this.m = s,
                this._mdf.m = !0,
                n = !0),
                !a.length || this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13] || (this.p = a,
                this._mdf.p = !0,
                n = !0),
                n
            }
            ,
            TextProperty.prototype.defaultBoxWidth = [0, 0],
            TextProperty.prototype.copyData = function(t, e) {
                for (var r in e)
                    Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t
            }
            ,
            TextProperty.prototype.setCurrentData = function(t) {
                t.__complete || this.completeTextData(t),
                this.currentData = t,
                this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth,
                this._mdf = !0
            }
            ,
            TextProperty.prototype.searchProperty = function() {
                return this.searchKeyframes()
            }
            ,
            TextProperty.prototype.searchKeyframes = function() {
                return this.kf = this.data.d.k.length > 1,
                this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
                this.kf
            }
            ,
            TextProperty.prototype.addEffect = function(t) {
                this.effectsSequence.push(t),
                this.elem.addDynamicProperty(this)
            }
            ,
            TextProperty.prototype.getValue = function(t) {
                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || t) {
                    this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                    var e = this.currentData
                      , r = this.keysIndex;
                    if (this.lock)
                        this.setCurrentData(this.currentData);
                    else {
                        var i;
                        this.lock = !0,
                        this._mdf = !1;
                        var s = this.effectsSequence.length
                          , a = t || this.data.d.k[this.keysIndex].s;
                        for (i = 0; i < s; i += 1)
                            a = r !== this.keysIndex ? this.effectsSequence[i](a, a.t) : this.effectsSequence[i](this.currentData, a.t);
                        e !== a && this.setCurrentData(a),
                        this.v = this.currentData,
                        this.pv = this.v,
                        this.lock = !1,
                        this.frameId = this.elem.globalData.frameId
                    }
                }
            }
            ,
            TextProperty.prototype.getKeyframeValue = function() {
                for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, r = 0, i = t.length; r <= i - 1 && !(r === i - 1 || t[r + 1].t > e); )
                    r += 1;
                return this.keysIndex !== r && (this.keysIndex = r),
                this.data.d.k[this.keysIndex].s
            }
            ,
            TextProperty.prototype.buildFinalText = function(t) {
                for (var e, r, i = [], s = 0, a = t.length, n = !1, o = !1, h = ""; s < a; )
                    n = o,
                    o = !1,
                    e = t.charCodeAt(s),
                    h = t.charAt(s),
                    FontManager.isCombinedCharacter(e) ? n = !0 : e >= 55296 && e <= 56319 ? FontManager.isRegionalFlag(t, s) ? h = t.substr(s, 14) : (r = t.charCodeAt(s + 1)) >= 56320 && r <= 57343 && (FontManager.isModifier(e, r) ? (h = t.substr(s, 2),
                    n = !0) : h = FontManager.isFlagEmoji(t.substr(s, 4)) ? t.substr(s, 4) : t.substr(s, 2)) : e > 56319 ? (r = t.charCodeAt(s + 1),
                    FontManager.isVariationSelector(e) && (n = !0)) : FontManager.isZeroWidthJoiner(e) && (n = !0,
                    o = !0),
                    n ? (i[i.length - 1] += h,
                    n = !1) : i.push(h),
                    s += h.length;
                return i
            }
            ,
            TextProperty.prototype.completeTextData = function(t) {
                t.__complete = !0;
                var e, r, i, s, a, n, o, h = this.elem.globalData.fontManager, l = this.data, p = [], c = 0, f = l.m.g, u = 0, d = 0, m = 0, y = [], g = 0, v = 0, b = h.getFontByName(t.f), _ = 0, P = getFontProperties(b);
                t.fWeight = P.weight,
                t.fStyle = P.style,
                t.finalSize = t.s,
                t.finalText = this.buildFinalText(t.t),
                r = t.finalText.length,
                t.finalLineHeight = t.lh;
                var S, E = t.tr / 1e3 * t.finalSize;
                if (t.sz)
                    for (var x, C, A = !0, w = t.sz[0], k = t.sz[1]; A; ) {
                        x = 0,
                        g = 0,
                        r = (C = this.buildFinalText(t.t)).length,
                        E = t.tr / 1e3 * t.finalSize;
                        var T = -1;
                        for (e = 0; e < r; e += 1)
                            S = C[e].charCodeAt(0),
                            i = !1,
                            " " === C[e] ? T = e : 13 !== S && 3 !== S || (g = 0,
                            i = !0,
                            x += t.finalLineHeight || 1.2 * t.finalSize),
                            h.chars ? (o = h.getCharData(C[e], b.fStyle, b.fFamily),
                            _ = i ? 0 : o.w * t.finalSize / 100) : _ = h.measureText(C[e], t.f, t.finalSize),
                            g + _ > w && " " !== C[e] ? (-1 === T ? r += 1 : e = T,
                            x += t.finalLineHeight || 1.2 * t.finalSize,
                            C.splice(e, T === e ? 1 : 0, "\r"),
                            T = -1,
                            g = 0) : (g += _,
                            g += E);
                        x += b.ascent * t.finalSize / 100,
                        this.canResize && t.finalSize > this.minimumFontSize && k < x ? (t.finalSize -= 1,
                        t.finalLineHeight = t.finalSize * t.lh / t.s) : (t.finalText = C,
                        r = t.finalText.length,
                        A = !1)
                    }
                g = -E,
                _ = 0;
                var M, D = 0;
                for (e = 0; e < r; e += 1)
                    if (i = !1,
                    13 === (S = (M = t.finalText[e]).charCodeAt(0)) || 3 === S ? (D = 0,
                    y.push(g),
                    v = g > v ? g : v,
                    g = -2 * E,
                    s = "",
                    i = !0,
                    m += 1) : s = M,
                    h.chars ? (o = h.getCharData(M, b.fStyle, h.getFontByName(t.f).fFamily),
                    _ = i ? 0 : o.w * t.finalSize / 100) : _ = h.measureText(s, t.f, t.finalSize),
                    " " === M ? D += _ + E : (g += _ + E + D,
                    D = 0),
                    p.push({
                        l: _,
                        an: _,
                        add: u,
                        n: i,
                        anIndexes: [],
                        val: s,
                        line: m,
                        animatorJustifyOffset: 0
                    }),
                    2 == f) {
                        if (u += _,
                        "" === s || " " === s || e === r - 1) {
                            for ("" !== s && " " !== s || (u -= _); d <= e; )
                                p[d].an = u,
                                p[d].ind = c,
                                p[d].extra = _,
                                d += 1;
                            c += 1,
                            u = 0
                        }
                    } else if (3 == f) {
                        if (u += _,
                        "" === s || e === r - 1) {
                            for ("" === s && (u -= _); d <= e; )
                                p[d].an = u,
                                p[d].ind = c,
                                p[d].extra = _,
                                d += 1;
                            u = 0,
                            c += 1
                        }
                    } else
                        p[c].ind = c,
                        p[c].extra = 0,
                        c += 1;
                if (t.l = p,
                v = g > v ? g : v,
                y.push(g),
                t.sz)
                    t.boxWidth = t.sz[0],
                    t.justifyOffset = 0;
                else
                    switch (t.boxWidth = v,
                    t.j) {
                    case 1:
                        t.justifyOffset = -t.boxWidth;
                        break;
                    case 2:
                        t.justifyOffset = -t.boxWidth / 2;
                        break;
                    default:
                        t.justifyOffset = 0
                    }
                t.lineWidths = y;
                var F, I, R, L, V = l.a;
                n = V.length;
                var B = [];
                for (a = 0; a < n; a += 1) {
                    for ((F = V[a]).a.sc && (t.strokeColorAnim = !0),
                    F.a.sw && (t.strokeWidthAnim = !0),
                    (F.a.fc || F.a.fh || F.a.fs || F.a.fb) && (t.fillColorAnim = !0),
                    L = 0,
                    R = F.s.b,
                    e = 0; e < r; e += 1)
                        (I = p[e]).anIndexes[a] = L,
                        (1 == R && "" !== I.val || 2 == R && "" !== I.val && " " !== I.val || 3 == R && (I.n || " " == I.val || e == r - 1) || 4 == R && (I.n || e == r - 1)) && (1 === F.s.rn && B.push(L),
                        L += 1);
                    l.a[a].s.totalChars = L;
                    var O, $ = -1;
                    if (1 === F.s.rn)
                        for (e = 0; e < r; e += 1)
                            $ != (I = p[e]).anIndexes[a] && ($ = I.anIndexes[a],
                            O = B.splice(Math.floor(Math.random() * B.length), 1)[0]),
                            I.anIndexes[a] = O
                }
                t.yOffset = t.finalLineHeight || 1.2 * t.finalSize,
                t.ls = t.ls || 0,
                t.ascent = b.ascent * t.finalSize / 100
            }
            ,
            TextProperty.prototype.updateDocumentData = function(t, e) {
                e = void 0 === e ? this.keysIndex : e;
                var r = this.copyData({}, this.data.d.k[e].s);
                r = this.copyData(r, t),
                this.data.d.k[e].s = r,
                this.recalculate(e),
                this.setCurrentData(r),
                this.elem.addDynamicProperty(this)
            }
            ,
            TextProperty.prototype.recalculate = function(t) {
                var e = this.data.d.k[t].s;
                e.__complete = !1,
                this.keysIndex = 0,
                this._isFirstFrame = !0,
                this.getValue(e)
            }
            ,
            TextProperty.prototype.canResizeFont = function(t) {
                this.canResize = t,
                this.recalculate(this.keysIndex),
                this.elem.addDynamicProperty(this)
            }
            ,
            TextProperty.prototype.setMinimumFontSize = function(t) {
                this.minimumFontSize = Math.floor(t) || 1,
                this.recalculate(this.keysIndex),
                this.elem.addDynamicProperty(this)
            }
            ;
            var TextSelectorProp = function() {
                var t = Math.max
                  , e = Math.min
                  , r = Math.floor;
                function i(t, e) {
                    this._currentTextLength = -1,
                    this.k = !1,
                    this.data = e,
                    this.elem = t,
                    this.comp = t.comp,
                    this.finalS = 0,
                    this.finalE = 0,
                    this.initDynamicPropertyContainer(t),
                    this.s = PropertyFactory.getProp(t, e.s || {
                        k: 0
                    }, 0, 0, this),
                    this.e = "e"in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : {
                        v: 100
                    },
                    this.o = PropertyFactory.getProp(t, e.o || {
                        k: 0
                    }, 0, 0, this),
                    this.xe = PropertyFactory.getProp(t, e.xe || {
                        k: 0
                    }, 0, 0, this),
                    this.ne = PropertyFactory.getProp(t, e.ne || {
                        k: 0
                    }, 0, 0, this),
                    this.sm = PropertyFactory.getProp(t, e.sm || {
                        k: 100
                    }, 0, 0, this),
                    this.a = PropertyFactory.getProp(t, e.a, 0, .01, this),
                    this.dynamicProperties.length || this.getValue()
                }
                return i.prototype = {
                    getMult: function(i) {
                        this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                        var s = 0
                          , a = 0
                          , n = 1
                          , o = 1;
                        this.ne.v > 0 ? s = this.ne.v / 100 : a = -this.ne.v / 100,
                        this.xe.v > 0 ? n = 1 - this.xe.v / 100 : o = 1 + this.xe.v / 100;
                        var h = BezierFactory.getBezierEasing(s, a, n, o).get
                          , l = 0
                          , p = this.finalS
                          , c = this.finalE
                          , f = this.data.sh;
                        if (2 === f)
                            l = h(l = c === p ? i >= c ? 1 : 0 : t(0, e(.5 / (c - p) + (i - p) / (c - p), 1)));
                        else if (3 === f)
                            l = h(l = c === p ? i >= c ? 0 : 1 : 1 - t(0, e(.5 / (c - p) + (i - p) / (c - p), 1)));
                        else if (4 === f)
                            c === p ? l = 0 : (l = t(0, e(.5 / (c - p) + (i - p) / (c - p), 1))) < .5 ? l *= 2 : l = 1 - 2 * (l - .5),
                            l = h(l);
                        else if (5 === f) {
                            if (c === p)
                                l = 0;
                            else {
                                var u = c - p
                                  , d = -u / 2 + (i = e(t(0, i + .5 - p), c - p))
                                  , m = u / 2;
                                l = Math.sqrt(1 - d * d / (m * m))
                            }
                            l = h(l)
                        } else
                            6 === f ? (c === p ? l = 0 : (i = e(t(0, i + .5 - p), c - p),
                            l = (1 + Math.cos(Math.PI + 2 * Math.PI * i / (c - p))) / 2),
                            l = h(l)) : (i >= r(p) && (l = t(0, e(i - p < 0 ? e(c, 1) - (p - i) : c - i, 1))),
                            l = h(l));
                        if (100 !== this.sm.v) {
                            var y = .01 * this.sm.v;
                            0 === y && (y = 1e-8);
                            var g = .5 - .5 * y;
                            l < g ? l = 0 : (l = (l - g) / y) > 1 && (l = 1)
                        }
                        return l * this.a.v
                    },
                    getValue: function(t) {
                        this.iterateDynamicProperties(),
                        this._mdf = t || this._mdf,
                        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0,
                        t && 2 === this.data.r && (this.e.v = this._currentTextLength);
                        var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars
                          , r = this.o.v / e
                          , i = this.s.v / e + r
                          , s = this.e.v / e + r;
                        if (i > s) {
                            var a = i;
                            i = s,
                            s = a
                        }
                        this.finalS = i,
                        this.finalE = s
                    }
                },
                extendPrototype([DynamicPropertyContainer], i),
                {
                    getTextSelectorProp: function(t, e, r) {
                        return new i(t,e,r)
                    }
                }
            }();
            function TextAnimatorDataProperty(t, e, r) {
                var i = {
                    propType: !1
                }
                  , s = PropertyFactory.getProp
                  , a = e.a;
                this.a = {
                    r: a.r ? s(t, a.r, 0, degToRads, r) : i,
                    rx: a.rx ? s(t, a.rx, 0, degToRads, r) : i,
                    ry: a.ry ? s(t, a.ry, 0, degToRads, r) : i,
                    sk: a.sk ? s(t, a.sk, 0, degToRads, r) : i,
                    sa: a.sa ? s(t, a.sa, 0, degToRads, r) : i,
                    s: a.s ? s(t, a.s, 1, .01, r) : i,
                    a: a.a ? s(t, a.a, 1, 0, r) : i,
                    o: a.o ? s(t, a.o, 0, .01, r) : i,
                    p: a.p ? s(t, a.p, 1, 0, r) : i,
                    sw: a.sw ? s(t, a.sw, 0, 0, r) : i,
                    sc: a.sc ? s(t, a.sc, 1, 0, r) : i,
                    fc: a.fc ? s(t, a.fc, 1, 0, r) : i,
                    fh: a.fh ? s(t, a.fh, 0, 0, r) : i,
                    fs: a.fs ? s(t, a.fs, 0, .01, r) : i,
                    fb: a.fb ? s(t, a.fb, 0, .01, r) : i,
                    t: a.t ? s(t, a.t, 0, 0, r) : i
                },
                this.s = TextSelectorProp.getTextSelectorProp(t, e.s, r),
                this.s.t = e.s.t
            }
            function TextAnimatorProperty(t, e, r) {
                this._isFirstFrame = !0,
                this._hasMaskedPath = !1,
                this._frameId = -1,
                this._textData = t,
                this._renderType = e,
                this._elem = r,
                this._animatorsData = createSizedArray(this._textData.a.length),
                this._pathData = {},
                this._moreOptions = {
                    alignment: {}
                },
                this.renderedLetters = [],
                this.lettersChangedFlag = !1,
                this.initDynamicPropertyContainer(r)
            }
            function ITextElement() {}
            TextAnimatorProperty.prototype.searchProperties = function() {
                var t, e, r = this._textData.a.length, i = PropertyFactory.getProp;
                for (t = 0; t < r; t += 1)
                    e = this._textData.a[t],
                    this._animatorsData[t] = new TextAnimatorDataProperty(this._elem,e,this);
                this._textData.p && "m"in this._textData.p ? (this._pathData = {
                    a: i(this._elem, this._textData.p.a, 0, 0, this),
                    f: i(this._elem, this._textData.p.f, 0, 0, this),
                    l: i(this._elem, this._textData.p.l, 0, 0, this),
                    r: i(this._elem, this._textData.p.r, 0, 0, this),
                    p: i(this._elem, this._textData.p.p, 0, 0, this),
                    m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
                },
                this._hasMaskedPath = !0) : this._hasMaskedPath = !1,
                this._moreOptions.alignment = i(this._elem, this._textData.m.a, 1, 0, this)
            }
            ,
            TextAnimatorProperty.prototype.getMeasures = function(t, e) {
                if (this.lettersChangedFlag = e,
                this._mdf || this._isFirstFrame || e || this._hasMaskedPath && this._pathData.m._mdf) {
                    this._isFirstFrame = !1;
                    var r, i, s, a, n, o, h, l, p, c, f, u, d, m, y, g, v, b, _, P = this._moreOptions.alignment.v, S = this._animatorsData, E = this._textData, x = this.mHelper, C = this._renderType, A = this.renderedLetters.length, w = t.l;
                    if (this._hasMaskedPath) {
                        if (_ = this._pathData.m,
                        !this._pathData.n || this._pathData._mdf) {
                            var k, T = _.v;
                            for (this._pathData.r.v && (T = T.reverse()),
                            n = {
                                tLength: 0,
                                segments: []
                            },
                            a = T._length - 1,
                            g = 0,
                            s = 0; s < a; s += 1)
                                k = bez.buildBezierData(T.v[s], T.v[s + 1], [T.o[s][0] - T.v[s][0], T.o[s][1] - T.v[s][1]], [T.i[s + 1][0] - T.v[s + 1][0], T.i[s + 1][1] - T.v[s + 1][1]]),
                                n.tLength += k.segmentLength,
                                n.segments.push(k),
                                g += k.segmentLength;
                            s = a,
                            _.v.c && (k = bez.buildBezierData(T.v[s], T.v[0], [T.o[s][0] - T.v[s][0], T.o[s][1] - T.v[s][1]], [T.i[0][0] - T.v[0][0], T.i[0][1] - T.v[0][1]]),
                            n.tLength += k.segmentLength,
                            n.segments.push(k),
                            g += k.segmentLength),
                            this._pathData.pi = n
                        }
                        if (n = this._pathData.pi,
                        o = this._pathData.f.v,
                        f = 0,
                        c = 1,
                        l = 0,
                        p = !0,
                        m = n.segments,
                        o < 0 && _.v.c)
                            for (n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength),
                            c = (d = m[f = m.length - 1].points).length - 1; o < 0; )
                                o += d[c].partialLength,
                                (c -= 1) < 0 && (c = (d = m[f -= 1].points).length - 1);
                        u = (d = m[f].points)[c - 1],
                        y = (h = d[c]).partialLength
                    }
                    a = w.length,
                    r = 0,
                    i = 0;
                    var M, D, F, I, R, L = 1.2 * t.finalSize * .714, V = !0;
                    F = S.length;
                    var B, O, $, z, G, N, j, H, q, W, U, Y, J = -1, X = o, K = f, Z = c, Q = -1, tt = "", et = this.defaultPropsArray;
                    if (2 === t.j || 1 === t.j) {
                        var rt = 0
                          , it = 0
                          , st = 2 === t.j ? -.5 : -1
                          , at = 0
                          , nt = !0;
                        for (s = 0; s < a; s += 1)
                            if (w[s].n) {
                                for (rt && (rt += it); at < s; )
                                    w[at].animatorJustifyOffset = rt,
                                    at += 1;
                                rt = 0,
                                nt = !0
                            } else {
                                for (D = 0; D < F; D += 1)
                                    (M = S[D].a).t.propType && (nt && 2 === t.j && (it += M.t.v * st),
                                    (R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars)).length ? rt += M.t.v * R[0] * st : rt += M.t.v * R * st);
                                nt = !1
                            }
                        for (rt && (rt += it); at < s; )
                            w[at].animatorJustifyOffset = rt,
                            at += 1
                    }
                    for (s = 0; s < a; s += 1) {
                        if (x.reset(),
                        z = 1,
                        w[s].n)
                            r = 0,
                            i += t.yOffset,
                            i += V ? 1 : 0,
                            o = X,
                            V = !1,
                            this._hasMaskedPath && (c = Z,
                            u = (d = m[f = K].points)[c - 1],
                            y = (h = d[c]).partialLength,
                            l = 0),
                            tt = "",
                            U = "",
                            q = "",
                            Y = "",
                            et = this.defaultPropsArray;
                        else {
                            if (this._hasMaskedPath) {
                                if (Q !== w[s].line) {
                                    switch (t.j) {
                                    case 1:
                                        o += g - t.lineWidths[w[s].line];
                                        break;
                                    case 2:
                                        o += (g - t.lineWidths[w[s].line]) / 2
                                    }
                                    Q = w[s].line
                                }
                                J !== w[s].ind && (w[J] && (o += w[J].extra),
                                o += w[s].an / 2,
                                J = w[s].ind),
                                o += P[0] * w[s].an * .005;
                                var ot = 0;
                                for (D = 0; D < F; D += 1)
                                    (M = S[D].a).p.propType && ((R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars)).length ? ot += M.p.v[0] * R[0] : ot += M.p.v[0] * R),
                                    M.a.propType && ((R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars)).length ? ot += M.a.v[0] * R[0] : ot += M.a.v[0] * R);
                                for (p = !0,
                                this._pathData.a.v && (o = .5 * w[0].an + (g - this._pathData.f.v - .5 * w[0].an - .5 * w[w.length - 1].an) * J / (a - 1),
                                o += this._pathData.f.v); p; )
                                    l + y >= o + ot || !d ? (v = (o + ot - l) / h.partialLength,
                                    O = u.point[0] + (h.point[0] - u.point[0]) * v,
                                    $ = u.point[1] + (h.point[1] - u.point[1]) * v,
                                    x.translate(-P[0] * w[s].an * .005, -P[1] * L * .01),
                                    p = !1) : d && (l += h.partialLength,
                                    (c += 1) >= d.length && (c = 0,
                                    m[f += 1] ? d = m[f].points : _.v.c ? (c = 0,
                                    d = m[f = 0].points) : (l -= h.partialLength,
                                    d = null)),
                                    d && (u = h,
                                    y = (h = d[c]).partialLength));
                                B = w[s].an / 2 - w[s].add,
                                x.translate(-B, 0, 0)
                            } else
                                B = w[s].an / 2 - w[s].add,
                                x.translate(-B, 0, 0),
                                x.translate(-P[0] * w[s].an * .005, -P[1] * L * .01, 0);
                            for (D = 0; D < F; D += 1)
                                (M = S[D].a).t.propType && (R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars),
                                0 === r && 0 === t.j || (this._hasMaskedPath ? R.length ? o += M.t.v * R[0] : o += M.t.v * R : R.length ? r += M.t.v * R[0] : r += M.t.v * R));
                            for (t.strokeWidthAnim && (N = t.sw || 0),
                            t.strokeColorAnim && (G = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]),
                            t.fillColorAnim && t.fc && (j = [t.fc[0], t.fc[1], t.fc[2]]),
                            D = 0; D < F; D += 1)
                                (M = S[D].a).a.propType && ((R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars)).length ? x.translate(-M.a.v[0] * R[0], -M.a.v[1] * R[1], M.a.v[2] * R[2]) : x.translate(-M.a.v[0] * R, -M.a.v[1] * R, M.a.v[2] * R));
                            for (D = 0; D < F; D += 1)
                                (M = S[D].a).s.propType && ((R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars)).length ? x.scale(1 + (M.s.v[0] - 1) * R[0], 1 + (M.s.v[1] - 1) * R[1], 1) : x.scale(1 + (M.s.v[0] - 1) * R, 1 + (M.s.v[1] - 1) * R, 1));
                            for (D = 0; D < F; D += 1) {
                                if (M = S[D].a,
                                R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars),
                                M.sk.propType && (R.length ? x.skewFromAxis(-M.sk.v * R[0], M.sa.v * R[1]) : x.skewFromAxis(-M.sk.v * R, M.sa.v * R)),
                                M.r.propType && (R.length ? x.rotateZ(-M.r.v * R[2]) : x.rotateZ(-M.r.v * R)),
                                M.ry.propType && (R.length ? x.rotateY(M.ry.v * R[1]) : x.rotateY(M.ry.v * R)),
                                M.rx.propType && (R.length ? x.rotateX(M.rx.v * R[0]) : x.rotateX(M.rx.v * R)),
                                M.o.propType && (R.length ? z += (M.o.v * R[0] - z) * R[0] : z += (M.o.v * R - z) * R),
                                t.strokeWidthAnim && M.sw.propType && (R.length ? N += M.sw.v * R[0] : N += M.sw.v * R),
                                t.strokeColorAnim && M.sc.propType)
                                    for (H = 0; H < 3; H += 1)
                                        R.length ? G[H] += (M.sc.v[H] - G[H]) * R[0] : G[H] += (M.sc.v[H] - G[H]) * R;
                                if (t.fillColorAnim && t.fc) {
                                    if (M.fc.propType)
                                        for (H = 0; H < 3; H += 1)
                                            R.length ? j[H] += (M.fc.v[H] - j[H]) * R[0] : j[H] += (M.fc.v[H] - j[H]) * R;
                                    M.fh.propType && (j = R.length ? addHueToRGB(j, M.fh.v * R[0]) : addHueToRGB(j, M.fh.v * R)),
                                    M.fs.propType && (j = R.length ? addSaturationToRGB(j, M.fs.v * R[0]) : addSaturationToRGB(j, M.fs.v * R)),
                                    M.fb.propType && (j = R.length ? addBrightnessToRGB(j, M.fb.v * R[0]) : addBrightnessToRGB(j, M.fb.v * R))
                                }
                            }
                            for (D = 0; D < F; D += 1)
                                (M = S[D].a).p.propType && (R = S[D].s.getMult(w[s].anIndexes[D], E.a[D].s.totalChars),
                                this._hasMaskedPath ? R.length ? x.translate(0, M.p.v[1] * R[0], -M.p.v[2] * R[1]) : x.translate(0, M.p.v[1] * R, -M.p.v[2] * R) : R.length ? x.translate(M.p.v[0] * R[0], M.p.v[1] * R[1], -M.p.v[2] * R[2]) : x.translate(M.p.v[0] * R, M.p.v[1] * R, -M.p.v[2] * R));
                            if (t.strokeWidthAnim && (q = N < 0 ? 0 : N),
                            t.strokeColorAnim && (W = "rgb(" + Math.round(255 * G[0]) + "," + Math.round(255 * G[1]) + "," + Math.round(255 * G[2]) + ")"),
                            t.fillColorAnim && t.fc && (U = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"),
                            this._hasMaskedPath) {
                                if (x.translate(0, -t.ls),
                                x.translate(0, P[1] * L * .01 + i, 0),
                                this._pathData.p.v) {
                                    b = (h.point[1] - u.point[1]) / (h.point[0] - u.point[0]);
                                    var ht = 180 * Math.atan(b) / Math.PI;
                                    h.point[0] < u.point[0] && (ht += 180),
                                    x.rotate(-ht * Math.PI / 180)
                                }
                                x.translate(O, $, 0),
                                o -= P[0] * w[s].an * .005,
                                w[s + 1] && J !== w[s + 1].ind && (o += w[s].an / 2,
                                o += .001 * t.tr * t.finalSize)
                            } else {
                                switch (x.translate(r, i, 0),
                                t.ps && x.translate(t.ps[0], t.ps[1] + t.ascent, 0),
                                t.j) {
                                case 1:
                                    x.translate(w[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[w[s].line]), 0, 0);
                                    break;
                                case 2:
                                    x.translate(w[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[w[s].line]) / 2, 0, 0)
                                }
                                x.translate(0, -t.ls),
                                x.translate(B, 0, 0),
                                x.translate(P[0] * w[s].an * .005, P[1] * L * .01, 0),
                                r += w[s].l + .001 * t.tr * t.finalSize
                            }
                            "html" === C ? tt = x.toCSS() : "svg" === C ? tt = x.to2dCSS() : et = [x.props[0], x.props[1], x.props[2], x.props[3], x.props[4], x.props[5], x.props[6], x.props[7], x.props[8], x.props[9], x.props[10], x.props[11], x.props[12], x.props[13], x.props[14], x.props[15]],
                            Y = z
                        }
                        A <= s ? (I = new LetterProps(Y,q,W,U,tt,et),
                        this.renderedLetters.push(I),
                        A += 1,
                        this.lettersChangedFlag = !0) : (I = this.renderedLetters[s],
                        this.lettersChangedFlag = I.update(Y, q, W, U, tt, et) || this.lettersChangedFlag)
                    }
                }
            }
            ,
            TextAnimatorProperty.prototype.getValue = function() {
                this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId,
                this.iterateDynamicProperties())
            }
            ,
            TextAnimatorProperty.prototype.mHelper = new Matrix,
            TextAnimatorProperty.prototype.defaultPropsArray = [],
            extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
            ITextElement.prototype.initElement = function(t, e, r) {
                this.lettersChangedFlag = !0,
                this.initFrame(),
                this.initBaseData(t, e, r),
                this.textProperty = new TextProperty(this,t.t,this.dynamicProperties),
                this.textAnimator = new TextAnimatorProperty(t.t,this.renderType,this),
                this.initTransform(t, e, r),
                this.initHierarchy(),
                this.initRenderable(),
                this.initRendererElement(),
                this.createContainerElements(),
                this.createRenderableComponents(),
                this.createContent(),
                this.hide(),
                this.textAnimator.searchProperties(this.dynamicProperties)
            }
            ,
            ITextElement.prototype.prepareFrame = function(t) {
                this._mdf = !1,
                this.prepareRenderableFrame(t),
                this.prepareProperties(t, this.isInRange)
            }
            ,
            ITextElement.prototype.createPathShape = function(t, e) {
                var r, i, s = e.length, a = "";
                for (r = 0; r < s; r += 1)
                    "sh" === e[r].ty && (i = e[r].ks.k,
                    a += buildShapeString(i, i.i.length, !0, t));
                return a
            }
            ,
            ITextElement.prototype.updateDocumentData = function(t, e) {
                this.textProperty.updateDocumentData(t, e)
            }
            ,
            ITextElement.prototype.canResizeFont = function(t) {
                this.textProperty.canResizeFont(t)
            }
            ,
            ITextElement.prototype.setMinimumFontSize = function(t) {
                this.textProperty.setMinimumFontSize(t)
            }
            ,
            ITextElement.prototype.applyTextPropertiesToMatrix = function(t, e, r, i, s) {
                switch (t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0),
                e.translate(0, -t.ls, 0),
                t.j) {
                case 1:
                    e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]), 0, 0);
                    break;
                case 2:
                    e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]) / 2, 0, 0)
                }
                e.translate(i, s, 0)
            }
            ,
            ITextElement.prototype.buildColor = function(t) {
                return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")"
            }
            ,
            ITextElement.prototype.emptyProp = new LetterProps,
            ITextElement.prototype.destroy = function() {}
            ,
            ITextElement.prototype.validateText = function() {
                (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(),
                this.textProperty._isFirstFrame = !1,
                this.textProperty._mdf = !1)
            }
            ;
            var emptyShapeData = {
                shapes: []
            };
            function SVGTextLottieElement(t, e, r) {
                this.textSpans = [],
                this.renderType = "svg",
                this.initElement(t, e, r)
            }
            function ISolidElement(t, e, r) {
                this.initElement(t, e, r)
            }
            function NullElement(t, e, r) {
                this.initFrame(),
                this.initBaseData(t, e, r),
                this.initFrame(),
                this.initTransform(t, e, r),
                this.initHierarchy()
            }
            function SVGRendererBase() {}
            function ICompElement() {}
            function SVGCompElement(t, e, r) {
                this.layers = t.layers,
                this.supports3d = !0,
                this.completeLayers = !1,
                this.pendingElements = [],
                this.elements = this.layers ? createSizedArray(this.layers.length) : [],
                this.initElement(t, e, r),
                this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                    _placeholder: !0
                }
            }
            function SVGRenderer(t, e) {
                this.animationItem = t,
                this.layers = null,
                this.renderedFrame = -1,
                this.svgElement = createNS("svg");
                var r = "";
                if (e && e.title) {
                    var i = createNS("title")
                      , s = createElementID();
                    i.setAttribute("id", s),
                    i.textContent = e.title,
                    this.svgElement.appendChild(i),
                    r += s
                }
                if (e && e.description) {
                    var a = createNS("desc")
                      , n = createElementID();
                    a.setAttribute("id", n),
                    a.textContent = e.description,
                    this.svgElement.appendChild(a),
                    r += " " + n
                }
                r && this.svgElement.setAttribute("aria-labelledby", r);
                var o = createNS("defs");
                this.svgElement.appendChild(o);
                var h = createNS("g");
                this.svgElement.appendChild(h),
                this.layerElement = h,
                this.renderConfig = {
                    preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
                    imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                    contentVisibility: e && e.contentVisibility || "visible",
                    progressiveLoad: e && e.progressiveLoad || !1,
                    hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                    viewBoxOnly: e && e.viewBoxOnly || !1,
                    viewBoxSize: e && e.viewBoxSize || !1,
                    className: e && e.className || "",
                    id: e && e.id || "",
                    focusable: e && e.focusable,
                    filterSize: {
                        width: e && e.filterSize && e.filterSize.width || "100%",
                        height: e && e.filterSize && e.filterSize.height || "100%",
                        x: e && e.filterSize && e.filterSize.x || "0%",
                        y: e && e.filterSize && e.filterSize.y || "0%"
                    },
                    width: e && e.width,
                    height: e && e.height,
                    runExpressions: !e || void 0 === e.runExpressions || e.runExpressions
                },
                this.globalData = {
                    _mdf: !1,
                    frameNum: -1,
                    defs: o,
                    renderConfig: this.renderConfig
                },
                this.elements = [],
                this.pendingElements = [],
                this.destroyed = !1,
                this.rendererType = "svg"
            }
            function ShapeTransformManager() {
                this.sequences = {},
                this.sequenceList = [],
                this.transform_key_count = 0
            }
            extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement),
            SVGTextLottieElement.prototype.createContent = function() {
                this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"))
            }
            ,
            SVGTextLottieElement.prototype.buildTextContents = function(t) {
                for (var e = 0, r = t.length, i = [], s = ""; e < r; )
                    t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (i.push(s),
                    s = "") : s += t[e],
                    e += 1;
                return i.push(s),
                i
            }
            ,
            SVGTextLottieElement.prototype.buildShapeData = function(t, e) {
                if (t.shapes && t.shapes.length) {
                    var r = t.shapes[0];
                    if (r.it) {
                        var i = r.it[r.it.length - 1];
                        i.s && (i.s.k[0] = e,
                        i.s.k[1] = e)
                    }
                }
                return t
            }
            ,
            SVGTextLottieElement.prototype.buildNewText = function() {
                var t, e;
                this.addDynamicProperty(this);
                var r = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(r ? r.l.length : 0),
                r.fc ? this.layerElement.setAttribute("fill", this.buildColor(r.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
                r.sc && (this.layerElement.setAttribute("stroke", this.buildColor(r.sc)),
                this.layerElement.setAttribute("stroke-width", r.sw)),
                this.layerElement.setAttribute("font-size", r.finalSize);
                var i = this.globalData.fontManager.getFontByName(r.f);
                if (i.fClass)
                    this.layerElement.setAttribute("class", i.fClass);
                else {
                    this.layerElement.setAttribute("font-family", i.fFamily);
                    var s = r.fWeight
                      , a = r.fStyle;
                    this.layerElement.setAttribute("font-style", a),
                    this.layerElement.setAttribute("font-weight", s)
                }
                this.layerElement.setAttribute("aria-label", r.t);
                var n, o = r.l || [], h = !!this.globalData.fontManager.chars;
                e = o.length;
                var l = this.mHelper
                  , p = this.data.singleShape
                  , c = 0
                  , f = 0
                  , u = !0
                  , d = .001 * r.tr * r.finalSize;
                if (!p || h || r.sz) {
                    var m, y = this.textSpans.length;
                    for (t = 0; t < e; t += 1) {
                        if (this.textSpans[t] || (this.textSpans[t] = {
                            span: null,
                            childSpan: null,
                            glyph: null
                        }),
                        !h || !p || 0 === t) {
                            if (n = y > t ? this.textSpans[t].span : createNS(h ? "g" : "text"),
                            y <= t) {
                                if (n.setAttribute("stroke-linecap", "butt"),
                                n.setAttribute("stroke-linejoin", "round"),
                                n.setAttribute("stroke-miterlimit", "4"),
                                this.textSpans[t].span = n,
                                h) {
                                    var g = createNS("g");
                                    n.appendChild(g),
                                    this.textSpans[t].childSpan = g
                                }
                                this.textSpans[t].span = n,
                                this.layerElement.appendChild(n)
                            }
                            n.style.display = "inherit"
                        }
                        if (l.reset(),
                        p && (o[t].n && (c = -d,
                        f += r.yOffset,
                        f += u ? 1 : 0,
                        u = !1),
                        this.applyTextPropertiesToMatrix(r, l, o[t].line, c, f),
                        c += o[t].l || 0,
                        c += d),
                        h) {
                            var v;
                            if (1 === (m = this.globalData.fontManager.getCharData(r.finalText[t], i.fStyle, this.globalData.fontManager.getFontByName(r.f).fFamily)).t)
                                v = new SVGCompElement(m.data,this.globalData,this);
                            else {
                                var b = emptyShapeData;
                                m.data && m.data.shapes && (b = this.buildShapeData(m.data, r.finalSize)),
                                v = new SVGShapeElement(b,this.globalData,this)
                            }
                            if (this.textSpans[t].glyph) {
                                var _ = this.textSpans[t].glyph;
                                this.textSpans[t].childSpan.removeChild(_.layerElement),
                                _.destroy()
                            }
                            this.textSpans[t].glyph = v,
                            v._debug = !0,
                            v.prepareFrame(0),
                            v.renderFrame(),
                            this.textSpans[t].childSpan.appendChild(v.layerElement),
                            1 === m.t && this.textSpans[t].childSpan.setAttribute("transform", "scale(" + r.finalSize / 100 + "," + r.finalSize / 100 + ")")
                        } else
                            p && n.setAttribute("transform", "translate(" + l.props[12] + "," + l.props[13] + ")"),
                            n.textContent = o[t].val,
                            n.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve")
                    }
                    p && n && n.setAttribute("d", "")
                } else {
                    var P = this.textContainer
                      , S = "start";
                    switch (r.j) {
                    case 1:
                        S = "end";
                        break;
                    case 2:
                        S = "middle";
                        break;
                    default:
                        S = "start"
                    }
                    P.setAttribute("text-anchor", S),
                    P.setAttribute("letter-spacing", d);
                    var E = this.buildTextContents(r.finalText);
                    for (e = E.length,
                    f = r.ps ? r.ps[1] + r.ascent : 0,
                    t = 0; t < e; t += 1)
                        (n = this.textSpans[t].span || createNS("tspan")).textContent = E[t],
                        n.setAttribute("x", 0),
                        n.setAttribute("y", f),
                        n.style.display = "inherit",
                        P.appendChild(n),
                        this.textSpans[t] || (this.textSpans[t] = {
                            span: null,
                            glyph: null
                        }),
                        this.textSpans[t].span = n,
                        f += r.finalLineHeight;
                    this.layerElement.appendChild(P)
                }
                for (; t < this.textSpans.length; )
                    this.textSpans[t].span.style.display = "none",
                    t += 1;
                this._sizeChanged = !0
            }
            ,
            SVGTextLottieElement.prototype.sourceRectAtTime = function() {
                if (this.prepareFrame(this.comp.renderedFrame - this.data.st),
                this.renderInnerContent(),
                this._sizeChanged) {
                    this._sizeChanged = !1;
                    var t = this.layerElement.getBBox();
                    this.bbox = {
                        top: t.y,
                        left: t.x,
                        width: t.width,
                        height: t.height
                    }
                }
                return this.bbox
            }
            ,
            SVGTextLottieElement.prototype.getValue = function() {
                var t, e, r = this.textSpans.length;
                for (this.renderedFrame = this.comp.renderedFrame,
                t = 0; t < r; t += 1)
                    (e = this.textSpans[t].glyph) && (e.prepareFrame(this.comp.renderedFrame - this.data.st),
                    e._mdf && (this._mdf = !0))
            }
            ,
            SVGTextLottieElement.prototype.renderInnerContent = function() {
                if (this.validateText(),
                (!this.data.singleShape || this._mdf) && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
                this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                    var t, e;
                    this._sizeChanged = !0;
                    var r, i, s, a = this.textAnimator.renderedLetters, n = this.textProperty.currentData.l;
                    for (e = n.length,
                    t = 0; t < e; t += 1)
                        n[t].n || (r = a[t],
                        i = this.textSpans[t].span,
                        (s = this.textSpans[t].glyph) && s.renderFrame(),
                        r._mdf.m && i.setAttribute("transform", r.m),
                        r._mdf.o && i.setAttribute("opacity", r.o),
                        r._mdf.sw && i.setAttribute("stroke-width", r.sw),
                        r._mdf.sc && i.setAttribute("stroke", r.sc),
                        r._mdf.fc && i.setAttribute("fill", r.fc))
                }
            }
            ,
            extendPrototype([IImageElement], ISolidElement),
            ISolidElement.prototype.createContent = function() {
                var t = createNS("rect");
                t.setAttribute("width", this.data.sw),
                t.setAttribute("height", this.data.sh),
                t.setAttribute("fill", this.data.sc),
                this.layerElement.appendChild(t)
            }
            ,
            NullElement.prototype.prepareFrame = function(t) {
                this.prepareProperties(t, !0)
            }
            ,
            NullElement.prototype.renderFrame = function() {}
            ,
            NullElement.prototype.getBaseElement = function() {
                return null
            }
            ,
            NullElement.prototype.destroy = function() {}
            ,
            NullElement.prototype.sourceRectAtTime = function() {}
            ,
            NullElement.prototype.hide = function() {}
            ,
            extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
            extendPrototype([BaseRenderer], SVGRendererBase),
            SVGRendererBase.prototype.createNull = function(t) {
                return new NullElement(t,this.globalData,this)
            }
            ,
            SVGRendererBase.prototype.createShape = function(t) {
                return new SVGShapeElement(t,this.globalData,this)
            }
            ,
            SVGRendererBase.prototype.createText = function(t) {
                return new SVGTextLottieElement(t,this.globalData,this)
            }
            ,
            SVGRendererBase.prototype.createImage = function(t) {
                return new IImageElement(t,this.globalData,this)
            }
            ,
            SVGRendererBase.prototype.createSolid = function(t) {
                return new ISolidElement(t,this.globalData,this)
            }
            ,
            SVGRendererBase.prototype.configAnimation = function(t) {
                this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
                this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink"),
                this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h),
                this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", t.w),
                this.svgElement.setAttribute("height", t.h),
                this.svgElement.style.width = "100%",
                this.svgElement.style.height = "100%",
                this.svgElement.style.transform = "translate3d(0,0,0)",
                this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility),
                this.renderConfig.width && this.svgElement.setAttribute("width", this.renderConfig.width),
                this.renderConfig.height && this.svgElement.setAttribute("height", this.renderConfig.height),
                this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className),
                this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id),
                void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable),
                this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio),
                this.animationItem.wrapper.appendChild(this.svgElement);
                var e = this.globalData.defs;
                this.setupGlobalData(t, e),
                this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
                this.data = t;
                var r = createNS("clipPath")
                  , i = createNS("rect");
                i.setAttribute("width", t.w),
                i.setAttribute("height", t.h),
                i.setAttribute("x", 0),
                i.setAttribute("y", 0);
                var s = createElementID();
                r.setAttribute("id", s),
                r.appendChild(i),
                this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + s + ")"),
                e.appendChild(r),
                this.layers = t.layers,
                this.elements = createSizedArray(t.layers.length)
            }
            ,
            SVGRendererBase.prototype.destroy = function() {
                var t;
                this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
                this.layerElement = null,
                this.globalData.defs = null;
                var e = this.layers ? this.layers.length : 0;
                for (t = 0; t < e; t += 1)
                    this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
                this.elements.length = 0,
                this.destroyed = !0,
                this.animationItem = null
            }
            ,
            SVGRendererBase.prototype.updateContainerSize = function() {}
            ,
            SVGRendererBase.prototype.findIndexByInd = function(t) {
                var e = 0
                  , r = this.layers.length;
                for (e = 0; e < r; e += 1)
                    if (this.layers[e].ind === t)
                        return e;
                return -1
            }
            ,
            SVGRendererBase.prototype.buildItem = function(t) {
                var e = this.elements;
                if (!e[t] && 99 !== this.layers[t].ty) {
                    e[t] = !0;
                    var r = this.createItem(this.layers[t]);
                    if (e[t] = r,
                    getExpressionsPlugin() && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(r),
                    r.initExpressions()),
                    this.appendElementInPos(r, t),
                    this.layers[t].tt) {
                        var i = "tp"in this.layers[t] ? this.findIndexByInd(this.layers[t].tp) : t - 1;
                        if (-1 === i)
                            return;
                        if (this.elements[i] && !0 !== this.elements[i]) {
                            var s = e[i].getMatte(this.layers[t].tt);
                            r.setMatte(s)
                        } else
                            this.buildItem(i),
                            this.addPendingElement(r)
                    }
                }
            }
            ,
            SVGRendererBase.prototype.checkPendingElements = function() {
                for (; this.pendingElements.length; ) {
                    var t = this.pendingElements.pop();
                    if (t.checkParenting(),
                    t.data.tt)
                        for (var e = 0, r = this.elements.length; e < r; ) {
                            if (this.elements[e] === t) {
                                var i = "tp"in t.data ? this.findIndexByInd(t.data.tp) : e - 1
                                  , s = this.elements[i].getMatte(this.layers[e].tt);
                                t.setMatte(s);
                                break
                            }
                            e += 1
                        }
                }
            }
            ,
            SVGRendererBase.prototype.renderFrame = function(t) {
                if (this.renderedFrame !== t && !this.destroyed) {
                    var e;
                    null === t ? t = this.renderedFrame : this.renderedFrame = t,
                    this.globalData.frameNum = t,
                    this.globalData.frameId += 1,
                    this.globalData.projectInterface.currentFrame = t,
                    this.globalData._mdf = !1;
                    var r = this.layers.length;
                    for (this.completeLayers || this.checkLayers(t),
                    e = r - 1; e >= 0; e -= 1)
                        (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                    if (this.globalData._mdf)
                        for (e = 0; e < r; e += 1)
                            (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
                }
            }
            ,
            SVGRendererBase.prototype.appendElementInPos = function(t, e) {
                var r = t.getBaseElement();
                if (r) {
                    for (var i, s = 0; s < e; )
                        this.elements[s] && !0 !== this.elements[s] && this.elements[s].getBaseElement() && (i = this.elements[s].getBaseElement()),
                        s += 1;
                    i ? this.layerElement.insertBefore(r, i) : this.layerElement.appendChild(r)
                }
            }
            ,
            SVGRendererBase.prototype.hide = function() {
                this.layerElement.style.display = "none"
            }
            ,
            SVGRendererBase.prototype.show = function() {
                this.layerElement.style.display = "block"
            }
            ,
            extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
            ICompElement.prototype.initElement = function(t, e, r) {
                this.initFrame(),
                this.initBaseData(t, e, r),
                this.initTransform(t, e, r),
                this.initRenderable(),
                this.initHierarchy(),
                this.initRendererElement(),
                this.createContainerElements(),
                this.createRenderableComponents(),
                !this.data.xt && e.progressiveLoad || this.buildAllItems(),
                this.hide()
            }
            ,
            ICompElement.prototype.prepareFrame = function(t) {
                if (this._mdf = !1,
                this.prepareRenderableFrame(t),
                this.prepareProperties(t, this.isInRange),
                this.isInRange || this.data.xt) {
                    if (this.tm._placeholder)
                        this.renderedFrame = t / this.data.sr;
                    else {
                        var e = this.tm.v;
                        e === this.data.op && (e = this.data.op - 1),
                        this.renderedFrame = e
                    }
                    var r, i = this.elements.length;
                    for (this.completeLayers || this.checkLayers(this.renderedFrame),
                    r = i - 1; r >= 0; r -= 1)
                        (this.completeLayers || this.elements[r]) && (this.elements[r].prepareFrame(this.renderedFrame - this.layers[r].st),
                        this.elements[r]._mdf && (this._mdf = !0))
                }
            }
            ,
            ICompElement.prototype.renderInnerContent = function() {
                var t, e = this.layers.length;
                for (t = 0; t < e; t += 1)
                    (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
            }
            ,
            ICompElement.prototype.setElements = function(t) {
                this.elements = t
            }
            ,
            ICompElement.prototype.getElements = function() {
                return this.elements
            }
            ,
            ICompElement.prototype.destroyElements = function() {
                var t, e = this.layers.length;
                for (t = 0; t < e; t += 1)
                    this.elements[t] && this.elements[t].destroy()
            }
            ,
            ICompElement.prototype.destroy = function() {
                this.destroyElements(),
                this.destroyBaseElement()
            }
            ,
            extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement),
            SVGCompElement.prototype.createComp = function(t) {
                return new SVGCompElement(t,this.globalData,this)
            }
            ,
            extendPrototype([SVGRendererBase], SVGRenderer),
            SVGRenderer.prototype.createComp = function(t) {
                return new SVGCompElement(t,this.globalData,this)
            }
            ,
            ShapeTransformManager.prototype = {
                addTransformSequence: function(t) {
                    var e, r = t.length, i = "_";
                    for (e = 0; e < r; e += 1)
                        i += t[e].transform.key + "_";
                    var s = this.sequences[i];
                    return s || (s = {
                        transforms: [].concat(t),
                        finalTransform: new Matrix,
                        _mdf: !1
                    },
                    this.sequences[i] = s,
                    this.sequenceList.push(s)),
                    s
                },
                processSequence: function(t, e) {
                    for (var r = 0, i = t.transforms.length, s = e; r < i && !e; ) {
                        if (t.transforms[r].transform.mProps._mdf) {
                            s = !0;
                            break
                        }
                        r += 1
                    }
                    if (s)
                        for (t.finalTransform.reset(),
                        r = i - 1; r >= 0; r -= 1)
                            t.finalTransform.multiply(t.transforms[r].transform.mProps.v);
                    t._mdf = s
                },
                processSequences: function(t) {
                    var e, r = this.sequenceList.length;
                    for (e = 0; e < r; e += 1)
                        this.processSequence(this.sequenceList[e], t)
                },
                getNewKey: function() {
                    return this.transform_key_count += 1,
                    "_" + this.transform_key_count
                }
            };
            var lumaLoader = function() {
                var t = "__lottie_element_luma_buffer"
                  , e = null
                  , r = null
                  , i = null;
                function s() {
                    var s, a, n;
                    e || (s = createNS("svg"),
                    a = createNS("filter"),
                    n = createNS("feColorMatrix"),
                    a.setAttribute("id", t),
                    n.setAttribute("type", "matrix"),
                    n.setAttribute("color-interpolation-filters", "sRGB"),
                    n.setAttribute("values", "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"),
                    a.appendChild(n),
                    s.appendChild(a),
                    s.setAttribute("id", t + "_svg"),
                    featureSupport.svgLumaHidden && (s.style.display = "none"),
                    i = s,
                    document.body.appendChild(i),
                    e = createTag("canvas"),
                    (r = e.getContext("2d")).filter = "url(#" + t + ")",
                    r.fillStyle = "rgba(0,0,0,0)",
                    r.fillRect(0, 0, 1, 1))
                }
                return {
                    load: s,
                    get: function(i) {
                        return e || s(),
                        e.width = i.width,
                        e.height = i.height,
                        r.filter = "url(#" + t + ")",
                        e
                    }
                }
            };
            function createCanvas(t, e) {
                if (featureSupport.offscreenCanvas)
                    return new OffscreenCanvas(t,e);
                var r = createTag("canvas");
                return r.width = t,
                r.height = e,
                r
            }
            var assetLoader = {
                loadLumaCanvas: lumaLoader.load,
                getLumaCanvas: lumaLoader.get,
                createCanvas: createCanvas
            }
              , registeredEffects = {};
            function CVEffects(t) {
                var e, r, i = t.data.ef ? t.data.ef.length : 0;
                for (this.filters = [],
                e = 0; e < i; e += 1) {
                    r = null;
                    var s = t.data.ef[e].ty;
                    registeredEffects[s] && (r = new (0,
                    registeredEffects[s].effect)(t.effectsManager.effectElements[e],t)),
                    r && this.filters.push(r)
                }
                this.filters.length && t.addRenderableComponent(this)
            }
            function registerEffect(t, e) {
                registeredEffects[t] = {
                    effect: e
                }
            }
            function CVMaskElement(t, e) {
                var r;
                this.data = t,
                this.element = e,
                this.masksProperties = this.data.masksProperties || [],
                this.viewData = createSizedArray(this.masksProperties.length);
                var i = this.masksProperties.length
                  , s = !1;
                for (r = 0; r < i; r += 1)
                    "n" !== this.masksProperties[r].mode && (s = !0),
                    this.viewData[r] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[r], 3);
                this.hasMasks = s,
                s && this.element.addRenderableComponent(this)
            }
            function CVBaseElement() {}
            CVEffects.prototype.renderFrame = function(t) {
                var e, r = this.filters.length;
                for (e = 0; e < r; e += 1)
                    this.filters[e].renderFrame(t)
            }
            ,
            CVEffects.prototype.getEffects = function(t) {
                var e, r = this.filters.length, i = [];
                for (e = 0; e < r; e += 1)
                    this.filters[e].type === t && i.push(this.filters[e]);
                return i
            }
            ,
            CVMaskElement.prototype.renderFrame = function() {
                if (this.hasMasks) {
                    var t, e, r, i, s = this.element.finalTransform.mat, a = this.element.canvasContext, n = this.masksProperties.length;
                    for (a.beginPath(),
                    t = 0; t < n; t += 1)
                        if ("n" !== this.masksProperties[t].mode) {
                            var o;
                            this.masksProperties[t].inv && (a.moveTo(0, 0),
                            a.lineTo(this.element.globalData.compSize.w, 0),
                            a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h),
                            a.lineTo(0, this.element.globalData.compSize.h),
                            a.lineTo(0, 0)),
                            i = this.viewData[t].v,
                            e = s.applyToPointArray(i.v[0][0], i.v[0][1], 0),
                            a.moveTo(e[0], e[1]);
                            var h = i._length;
                            for (o = 1; o < h; o += 1)
                                r = s.applyToTriplePoints(i.o[o - 1], i.i[o], i.v[o]),
                                a.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5]);
                            r = s.applyToTriplePoints(i.o[o - 1], i.i[0], i.v[0]),
                            a.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5])
                        }
                    this.element.globalData.renderer.save(!0),
                    a.clip()
                }
            }
            ,
            CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty,
            CVMaskElement.prototype.destroy = function() {
                this.element = null
            }
            ;
            var operationsMap = {
                1: "source-in",
                2: "source-out",
                3: "source-in",
                4: "source-out"
            };
            function CVShapeData(t, e, r, i) {
                this.styledShapes = [],
                this.tr = [0, 0, 0, 0, 0, 0];
                var s, a = 4;
                "rc" === e.ty ? a = 5 : "el" === e.ty ? a = 6 : "sr" === e.ty && (a = 7),
                this.sh = ShapePropertyFactory.getShapeProp(t, e, a, t);
                var n, o = r.length;
                for (s = 0; s < o; s += 1)
                    r[s].closed || (n = {
                        transforms: i.addTransformSequence(r[s].transforms),
                        trNodes: []
                    },
                    this.styledShapes.push(n),
                    r[s].elements.push(n))
            }
            function CVShapeElement(t, e, r) {
                this.shapes = [],
                this.shapesData = t.shapes,
                this.stylesList = [],
                this.itemsData = [],
                this.prevViewData = [],
                this.shapeModifiers = [],
                this.processedElements = [],
                this.transformsManager = new ShapeTransformManager,
                this.initElement(t, e, r)
            }
            function CVTextElement(t, e, r) {
                this.textSpans = [],
                this.yOffset = 0,
                this.fillColorAnim = !1,
                this.strokeColorAnim = !1,
                this.strokeWidthAnim = !1,
                this.stroke = !1,
                this.fill = !1,
                this.justifyOffset = 0,
                this.currentRender = null,
                this.renderType = "canvas",
                this.values = {
                    fill: "rgba(0,0,0,0)",
                    stroke: "rgba(0,0,0,0)",
                    sWidth: 0,
                    fValue: ""
                },
                this.initElement(t, e, r)
            }
            function CVImageElement(t, e, r) {
                this.assetData = e.getAssetData(t.refId),
                this.img = e.imageLoader.getAsset(this.assetData),
                this.initElement(t, e, r)
            }
            function CVSolidElement(t, e, r) {
                this.initElement(t, e, r)
            }
            function CanvasRendererBase() {}
            function CanvasContext() {
                this.opacity = -1,
                this.transform = createTypedArray("float32", 16),
                this.fillStyle = "",
                this.strokeStyle = "",
                this.lineWidth = "",
                this.lineCap = "",
                this.lineJoin = "",
                this.miterLimit = "",
                this.id = Math.random()
            }
            function CVContextData() {
                var t;
                for (this.stack = [],
                this.cArrPos = 0,
                this.cTr = new Matrix,
                t = 0; t < 15; t += 1) {
                    var e = new CanvasContext;
                    this.stack[t] = e
                }
                this._length = 15,
                this.nativeContext = null,
                this.transformMat = new Matrix,
                this.currentOpacity = 1,
                this.currentFillStyle = "",
                this.appliedFillStyle = "",
                this.currentStrokeStyle = "",
                this.appliedStrokeStyle = "",
                this.currentLineWidth = "",
                this.appliedLineWidth = "",
                this.currentLineCap = "",
                this.appliedLineCap = "",
                this.currentLineJoin = "",
                this.appliedLineJoin = "",
                this.appliedMiterLimit = "",
                this.currentMiterLimit = ""
            }
            function CVCompElement(t, e, r) {
                this.completeLayers = !1,
                this.layers = t.layers,
                this.pendingElements = [],
                this.elements = createSizedArray(this.layers.length),
                this.initElement(t, e, r),
                this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                    _placeholder: !0
                }
            }
            function CanvasRenderer(t, e) {
                this.animationItem = t,
                this.renderConfig = {
                    clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas,
                    context: e && e.context || null,
                    progressiveLoad: e && e.progressiveLoad || !1,
                    preserveAspectRatio: e && e.preserveAspectRatio || "xMidYMid meet",
                    imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                    contentVisibility: e && e.contentVisibility || "visible",
                    className: e && e.className || "",
                    id: e && e.id || "",
                    runExpressions: !e || void 0 === e.runExpressions || e.runExpressions
                },
                this.renderConfig.dpr = e && e.dpr || 1,
                this.animationItem.wrapper && (this.renderConfig.dpr = e && e.dpr || window.devicePixelRatio || 1),
                this.renderedFrame = -1,
                this.globalData = {
                    frameNum: -1,
                    _mdf: !1,
                    renderConfig: this.renderConfig,
                    currentGlobalAlpha: -1
                },
                this.contextData = new CVContextData,
                this.elements = [],
                this.pendingElements = [],
                this.transformMat = new Matrix,
                this.completeLayers = !1,
                this.rendererType = "canvas",
                this.renderConfig.clearCanvas && (this.ctxTransform = this.contextData.transform.bind(this.contextData),
                this.ctxOpacity = this.contextData.opacity.bind(this.contextData),
                this.ctxFillStyle = this.contextData.fillStyle.bind(this.contextData),
                this.ctxStrokeStyle = this.contextData.strokeStyle.bind(this.contextData),
                this.ctxLineWidth = this.contextData.lineWidth.bind(this.contextData),
                this.ctxLineCap = this.contextData.lineCap.bind(this.contextData),
                this.ctxLineJoin = this.contextData.lineJoin.bind(this.contextData),
                this.ctxMiterLimit = this.contextData.miterLimit.bind(this.contextData),
                this.ctxFill = this.contextData.fill.bind(this.contextData),
                this.ctxFillRect = this.contextData.fillRect.bind(this.contextData),
                this.ctxStroke = this.contextData.stroke.bind(this.contextData),
                this.save = this.contextData.save.bind(this.contextData))
            }
            function HBaseElement() {}
            function HSolidElement(t, e, r) {
                this.initElement(t, e, r)
            }
            function HShapeElement(t, e, r) {
                this.shapes = [],
                this.shapesData = t.shapes,
                this.stylesList = [],
                this.shapeModifiers = [],
                this.itemsData = [],
                this.processedElements = [],
                this.animatedContents = [],
                this.shapesContainer = createNS("g"),
                this.initElement(t, e, r),
                this.prevViewData = [],
                this.currentBBox = {
                    x: 999999,
                    y: -999999,
                    h: 0,
                    w: 0
                }
            }
            function HTextElement(t, e, r) {
                this.textSpans = [],
                this.textPaths = [],
                this.currentBBox = {
                    x: 999999,
                    y: -999999,
                    h: 0,
                    w: 0
                },
                this.renderType = "svg",
                this.isMasked = !1,
                this.initElement(t, e, r)
            }
            function HCameraElement(t, e, r) {
                this.initFrame(),
                this.initBaseData(t, e, r),
                this.initHierarchy();
                var i = PropertyFactory.getProp;
                if (this.pe = i(this, t.pe, 0, 0, this),
                t.ks.p.s ? (this.px = i(this, t.ks.p.x, 1, 0, this),
                this.py = i(this, t.ks.p.y, 1, 0, this),
                this.pz = i(this, t.ks.p.z, 1, 0, this)) : this.p = i(this, t.ks.p, 1, 0, this),
                t.ks.a && (this.a = i(this, t.ks.a, 1, 0, this)),
                t.ks.or.k.length && t.ks.or.k[0].to) {
                    var s, a = t.ks.or.k.length;
                    for (s = 0; s < a; s += 1)
                        t.ks.or.k[s].to = null,
                        t.ks.or.k[s].ti = null
                }
                this.or = i(this, t.ks.or, 1, degToRads, this),
                this.or.sh = !0,
                this.rx = i(this, t.ks.rx, 0, degToRads, this),
                this.ry = i(this, t.ks.ry, 0, degToRads, this),
                this.rz = i(this, t.ks.rz, 0, degToRads, this),
                this.mat = new Matrix,
                this._prevMat = new Matrix,
                this._isFirstFrame = !0,
                this.finalTransform = {
                    mProp: this
                }
            }
            function HImageElement(t, e, r) {
                this.assetData = e.getAssetData(t.refId),
                this.initElement(t, e, r)
            }
            function HybridRendererBase(t, e) {
                this.animationItem = t,
                this.layers = null,
                this.renderedFrame = -1,
                this.renderConfig = {
                    className: e && e.className || "",
                    imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                    hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                    filterSize: {
                        width: e && e.filterSize && e.filterSize.width || "400%",
                        height: e && e.filterSize && e.filterSize.height || "400%",
                        x: e && e.filterSize && e.filterSize.x || "-100%",
                        y: e && e.filterSize && e.filterSize.y || "-100%"
                    }
                },
                this.globalData = {
                    _mdf: !1,
                    frameNum: -1,
                    renderConfig: this.renderConfig
                },
                this.pendingElements = [],
                this.elements = [],
                this.threeDElements = [],
                this.destroyed = !1,
                this.camera = null,
                this.supports3d = !0,
                this.rendererType = "html"
            }
            function HCompElement(t, e, r) {
                this.layers = t.layers,
                this.supports3d = !t.hasMask,
                this.completeLayers = !1,
                this.pendingElements = [],
                this.elements = this.layers ? createSizedArray(this.layers.length) : [],
                this.initElement(t, e, r),
                this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : {
                    _placeholder: !0
                }
            }
            function HybridRenderer(t, e) {
                this.animationItem = t,
                this.layers = null,
                this.renderedFrame = -1,
                this.renderConfig = {
                    className: e && e.className || "",
                    imagePreserveAspectRatio: e && e.imagePreserveAspectRatio || "xMidYMid slice",
                    hideOnTransparent: !(e && !1 === e.hideOnTransparent),
                    filterSize: {
                        width: e && e.filterSize && e.filterSize.width || "400%",
                        height: e && e.filterSize && e.filterSize.height || "400%",
                        x: e && e.filterSize && e.filterSize.x || "-100%",
                        y: e && e.filterSize && e.filterSize.y || "-100%"
                    },
                    runExpressions: !e || void 0 === e.runExpressions || e.runExpressions
                },
                this.globalData = {
                    _mdf: !1,
                    frameNum: -1,
                    renderConfig: this.renderConfig
                },
                this.pendingElements = [],
                this.elements = [],
                this.threeDElements = [],
                this.destroyed = !1,
                this.camera = null,
                this.supports3d = !0,
                this.rendererType = "html"
            }
            CVBaseElement.prototype = {
                createElements: function() {},
                initRendererElement: function() {},
                createContainerElements: function() {
                    if (this.data.tt >= 1) {
                        this.buffers = [];
                        var t = this.globalData.canvasContext
                          , e = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
                        this.buffers.push(e);
                        var r = assetLoader.createCanvas(t.canvas.width, t.canvas.height);
                        this.buffers.push(r),
                        this.data.tt >= 3 && !document._isProxy && assetLoader.loadLumaCanvas()
                    }
                    this.canvasContext = this.globalData.canvasContext,
                    this.transformCanvas = this.globalData.transformCanvas,
                    this.renderableEffectsManager = new CVEffects(this),
                    this.searchEffectTransforms()
                },
                createContent: function() {},
                setBlendMode: function() {
                    var t = this.globalData;
                    if (t.blendMode !== this.data.bm) {
                        t.blendMode = this.data.bm;
                        var e = getBlendMode(this.data.bm);
                        t.canvasContext.globalCompositeOperation = e
                    }
                },
                createRenderableComponents: function() {
                    this.maskManager = new CVMaskElement(this.data,this),
                    this.transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT)
                },
                hideElement: function() {
                    this.hidden || this.isInRange && !this.isTransparent || (this.hidden = !0)
                },
                showElement: function() {
                    this.isInRange && !this.isTransparent && (this.hidden = !1,
                    this._isFirstFrame = !0,
                    this.maskManager._isFirstFrame = !0)
                },
                clearCanvas: function(t) {
                    t.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy)
                },
                prepareLayer: function() {
                    if (this.data.tt >= 1) {
                        var t = this.buffers[0].getContext("2d");
                        this.clearCanvas(t),
                        t.drawImage(this.canvasContext.canvas, 0, 0),
                        this.currentTransform = this.canvasContext.getTransform(),
                        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                        this.clearCanvas(this.canvasContext),
                        this.canvasContext.setTransform(this.currentTransform)
                    }
                },
                exitLayer: function() {
                    if (this.data.tt >= 1) {
                        var t = this.buffers[1]
                          , e = t.getContext("2d");
                        if (this.clearCanvas(e),
                        e.drawImage(this.canvasContext.canvas, 0, 0),
                        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                        this.clearCanvas(this.canvasContext),
                        this.canvasContext.setTransform(this.currentTransform),
                        this.comp.getElementById("tp"in this.data ? this.data.tp : this.data.ind - 1).renderFrame(!0),
                        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                        this.data.tt >= 3 && !document._isProxy) {
                            var r = assetLoader.getLumaCanvas(this.canvasContext.canvas);
                            r.getContext("2d").drawImage(this.canvasContext.canvas, 0, 0),
                            this.clearCanvas(this.canvasContext),
                            this.canvasContext.drawImage(r, 0, 0)
                        }
                        this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt],
                        this.canvasContext.drawImage(t, 0, 0),
                        this.canvasContext.globalCompositeOperation = "destination-over",
                        this.canvasContext.drawImage(this.buffers[0], 0, 0),
                        this.canvasContext.setTransform(this.currentTransform),
                        this.canvasContext.globalCompositeOperation = "source-over"
                    }
                },
                renderFrame: function(t) {
                    if (!this.hidden && !this.data.hd && (1 !== this.data.td || t)) {
                        this.renderTransform(),
                        this.renderRenderable(),
                        this.renderLocalTransform(),
                        this.setBlendMode();
                        var e = 0 === this.data.ty;
                        this.prepareLayer(),
                        this.globalData.renderer.save(e),
                        this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props),
                        this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity),
                        this.renderInnerContent(),
                        this.globalData.renderer.restore(e),
                        this.exitLayer(),
                        this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
                        this._isFirstFrame && (this._isFirstFrame = !1)
                    }
                },
                destroy: function() {
                    this.canvasContext = null,
                    this.data = null,
                    this.globalData = null,
                    this.maskManager.destroy()
                },
                mHelper: new Matrix
            },
            CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement,
            CVBaseElement.prototype.show = CVBaseElement.prototype.showElement,
            CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated,
            extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement),
            CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement,
            CVShapeElement.prototype.transformHelper = {
                opacity: 1,
                _opMdf: !1
            },
            CVShapeElement.prototype.dashResetter = [],
            CVShapeElement.prototype.createContent = function() {
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, [])
            }
            ,
            CVShapeElement.prototype.createStyleElement = function(t, e) {
                var r = {
                    data: t,
                    type: t.ty,
                    preTransforms: this.transformsManager.addTransformSequence(e),
                    transforms: [],
                    elements: [],
                    closed: !0 === t.hd
                }
                  , i = {};
                if ("fl" === t.ty || "st" === t.ty ? (i.c = PropertyFactory.getProp(this, t.c, 1, 255, this),
                i.c.k || (r.co = "rgb(" + bmFloor(i.c.v[0]) + "," + bmFloor(i.c.v[1]) + "," + bmFloor(i.c.v[2]) + ")")) : "gf" !== t.ty && "gs" !== t.ty || (i.s = PropertyFactory.getProp(this, t.s, 1, null, this),
                i.e = PropertyFactory.getProp(this, t.e, 1, null, this),
                i.h = PropertyFactory.getProp(this, t.h || {
                    k: 0
                }, 0, .01, this),
                i.a = PropertyFactory.getProp(this, t.a || {
                    k: 0
                }, 0, degToRads, this),
                i.g = new GradientProperty(this,t.g,this)),
                i.o = PropertyFactory.getProp(this, t.o, 0, .01, this),
                "st" === t.ty || "gs" === t.ty) {
                    if (r.lc = lineCapEnum[t.lc || 2],
                    r.lj = lineJoinEnum[t.lj || 2],
                    1 == t.lj && (r.ml = t.ml),
                    i.w = PropertyFactory.getProp(this, t.w, 0, null, this),
                    i.w.k || (r.wi = i.w.v),
                    t.d) {
                        var s = new DashProperty(this,t.d,"canvas",this);
                        i.d = s,
                        i.d.k || (r.da = i.d.dashArray,
                        r.do = i.d.dashoffset[0])
                    }
                } else
                    r.r = 2 === t.r ? "evenodd" : "nonzero";
                return this.stylesList.push(r),
                i.style = r,
                i
            }
            ,
            CVShapeElement.prototype.createGroupElement = function() {
                return {
                    it: [],
                    prevViewData: []
                }
            }
            ,
            CVShapeElement.prototype.createTransformElement = function(t) {
                return {
                    transform: {
                        opacity: 1,
                        _opMdf: !1,
                        key: this.transformsManager.getNewKey(),
                        op: PropertyFactory.getProp(this, t.o, 0, .01, this),
                        mProps: TransformPropertyFactory.getTransformProperty(this, t, this)
                    }
                }
            }
            ,
            CVShapeElement.prototype.createShapeElement = function(t) {
                var e = new CVShapeData(this,t,this.stylesList,this.transformsManager);
                return this.shapes.push(e),
                this.addShapeToModifiers(e),
                e
            }
            ,
            CVShapeElement.prototype.reloadShapes = function() {
                var t;
                this._isFirstFrame = !0;
                var e = this.itemsData.length;
                for (t = 0; t < e; t += 1)
                    this.prevViewData[t] = this.itemsData[t];
                for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []),
                e = this.dynamicProperties.length,
                t = 0; t < e; t += 1)
                    this.dynamicProperties[t].getValue();
                this.renderModifiers(),
                this.transformsManager.processSequences(this._isFirstFrame)
            }
            ,
            CVShapeElement.prototype.addTransformToStyleList = function(t) {
                var e, r = this.stylesList.length;
                for (e = 0; e < r; e += 1)
                    this.stylesList[e].closed || this.stylesList[e].transforms.push(t)
            }
            ,
            CVShapeElement.prototype.removeTransformFromStyleList = function() {
                var t, e = this.stylesList.length;
                for (t = 0; t < e; t += 1)
                    this.stylesList[t].closed || this.stylesList[t].transforms.pop()
            }
            ,
            CVShapeElement.prototype.closeStyles = function(t) {
                var e, r = t.length;
                for (e = 0; e < r; e += 1)
                    t[e].closed = !0
            }
            ,
            CVShapeElement.prototype.searchShapes = function(t, e, r, i, s) {
                var a, n, o, h, l, p, c = t.length - 1, f = [], u = [], d = [].concat(s);
                for (a = c; a >= 0; a -= 1) {
                    if ((h = this.searchProcessedElement(t[a])) ? e[a] = r[h - 1] : t[a]._shouldRender = i,
                    "fl" === t[a].ty || "st" === t[a].ty || "gf" === t[a].ty || "gs" === t[a].ty)
                        h ? e[a].style.closed = !1 : e[a] = this.createStyleElement(t[a], d),
                        f.push(e[a].style);
                    else if ("gr" === t[a].ty) {
                        if (h)
                            for (o = e[a].it.length,
                            n = 0; n < o; n += 1)
                                e[a].prevViewData[n] = e[a].it[n];
                        else
                            e[a] = this.createGroupElement(t[a]);
                        this.searchShapes(t[a].it, e[a].it, e[a].prevViewData, i, d)
                    } else
                        "tr" === t[a].ty ? (h || (p = this.createTransformElement(t[a]),
                        e[a] = p),
                        d.push(e[a]),
                        this.addTransformToStyleList(e[a])) : "sh" === t[a].ty || "rc" === t[a].ty || "el" === t[a].ty || "sr" === t[a].ty ? h || (e[a] = this.createShapeElement(t[a])) : "tm" === t[a].ty || "rd" === t[a].ty || "pb" === t[a].ty || "zz" === t[a].ty || "op" === t[a].ty ? (h ? (l = e[a]).closed = !1 : ((l = ShapeModifiers.getModifier(t[a].ty)).init(this, t[a]),
                        e[a] = l,
                        this.shapeModifiers.push(l)),
                        u.push(l)) : "rp" === t[a].ty && (h ? (l = e[a]).closed = !0 : (l = ShapeModifiers.getModifier(t[a].ty),
                        e[a] = l,
                        l.init(this, t, a, e),
                        this.shapeModifiers.push(l),
                        i = !1),
                        u.push(l));
                    this.addProcessedElement(t[a], a + 1)
                }
                for (this.removeTransformFromStyleList(),
                this.closeStyles(f),
                c = u.length,
                a = 0; a < c; a += 1)
                    u[a].closed = !0
            }
            ,
            CVShapeElement.prototype.renderInnerContent = function() {
                this.transformHelper.opacity = 1,
                this.transformHelper._opMdf = !1,
                this.renderModifiers(),
                this.transformsManager.processSequences(this._isFirstFrame),
                this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0)
            }
            ,
            CVShapeElement.prototype.renderShapeTransform = function(t, e) {
                (t._opMdf || e.op._mdf || this._isFirstFrame) && (e.opacity = t.opacity,
                e.opacity *= e.op.v,
                e._opMdf = !0)
            }
            ,
            CVShapeElement.prototype.drawLayer = function() {
                var t, e, r, i, s, a, n, o, h, l = this.stylesList.length, p = this.globalData.renderer, c = this.globalData.canvasContext;
                for (t = 0; t < l; t += 1)
                    if (("st" !== (o = (h = this.stylesList[t]).type) && "gs" !== o || 0 !== h.wi) && h.data._shouldRender && 0 !== h.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                        for (p.save(),
                        a = h.elements,
                        "st" === o || "gs" === o ? (p.ctxStrokeStyle("st" === o ? h.co : h.grd),
                        p.ctxLineWidth(h.wi),
                        p.ctxLineCap(h.lc),
                        p.ctxLineJoin(h.lj),
                        p.ctxMiterLimit(h.ml || 0)) : p.ctxFillStyle("fl" === o ? h.co : h.grd),
                        p.ctxOpacity(h.coOp),
                        "st" !== o && "gs" !== o && c.beginPath(),
                        p.ctxTransform(h.preTransforms.finalTransform.props),
                        r = a.length,
                        e = 0; e < r; e += 1) {
                            for ("st" !== o && "gs" !== o || (c.beginPath(),
                            h.da && (c.setLineDash(h.da),
                            c.lineDashOffset = h.do)),
                            s = (n = a[e].trNodes).length,
                            i = 0; i < s; i += 1)
                                "m" === n[i].t ? c.moveTo(n[i].p[0], n[i].p[1]) : "c" === n[i].t ? c.bezierCurveTo(n[i].pts[0], n[i].pts[1], n[i].pts[2], n[i].pts[3], n[i].pts[4], n[i].pts[5]) : c.closePath();
                            "st" !== o && "gs" !== o || (p.ctxStroke(),
                            h.da && c.setLineDash(this.dashResetter))
                        }
                        "st" !== o && "gs" !== o && this.globalData.renderer.ctxFill(h.r),
                        p.restore()
                    }
            }
            ,
            CVShapeElement.prototype.renderShape = function(t, e, r, i) {
                var s, a;
                for (a = t,
                s = e.length - 1; s >= 0; s -= 1)
                    "tr" === e[s].ty ? (a = r[s].transform,
                    this.renderShapeTransform(t, a)) : "sh" === e[s].ty || "el" === e[s].ty || "rc" === e[s].ty || "sr" === e[s].ty ? this.renderPath(e[s], r[s]) : "fl" === e[s].ty ? this.renderFill(e[s], r[s], a) : "st" === e[s].ty ? this.renderStroke(e[s], r[s], a) : "gf" === e[s].ty || "gs" === e[s].ty ? this.renderGradientFill(e[s], r[s], a) : "gr" === e[s].ty ? this.renderShape(a, e[s].it, r[s].it) : e[s].ty;
                i && this.drawLayer()
            }
            ,
            CVShapeElement.prototype.renderStyledShape = function(t, e) {
                if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
                    var r, i, s, a = t.trNodes, n = e.paths, o = n._length;
                    a.length = 0;
                    var h = t.transforms.finalTransform;
                    for (s = 0; s < o; s += 1) {
                        var l = n.shapes[s];
                        if (l && l.v) {
                            for (i = l._length,
                            r = 1; r < i; r += 1)
                                1 === r && a.push({
                                    t: "m",
                                    p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0)
                                }),
                                a.push({
                                    t: "c",
                                    pts: h.applyToTriplePoints(l.o[r - 1], l.i[r], l.v[r])
                                });
                            1 === i && a.push({
                                t: "m",
                                p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0)
                            }),
                            l.c && i && (a.push({
                                t: "c",
                                pts: h.applyToTriplePoints(l.o[r - 1], l.i[0], l.v[0])
                            }),
                            a.push({
                                t: "z"
                            }))
                        }
                    }
                    t.trNodes = a
                }
            }
            ,
            CVShapeElement.prototype.renderPath = function(t, e) {
                if (!0 !== t.hd && t._shouldRender) {
                    var r, i = e.styledShapes.length;
                    for (r = 0; r < i; r += 1)
                        this.renderStyledShape(e.styledShapes[r], e.sh)
                }
            }
            ,
            CVShapeElement.prototype.renderFill = function(t, e, r) {
                var i = e.style;
                (e.c._mdf || this._isFirstFrame) && (i.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity)
            }
            ,
            CVShapeElement.prototype.renderGradientFill = function(t, e, r) {
                var i, s = e.style;
                if (!s.grd || e.g._mdf || e.s._mdf || e.e._mdf || 1 !== t.t && (e.h._mdf || e.a._mdf)) {
                    var a, n = this.globalData.canvasContext, o = e.s.v, h = e.e.v;
                    if (1 === t.t)
                        i = n.createLinearGradient(o[0], o[1], h[0], h[1]);
                    else {
                        var l = Math.sqrt(Math.pow(o[0] - h[0], 2) + Math.pow(o[1] - h[1], 2))
                          , p = Math.atan2(h[1] - o[1], h[0] - o[0])
                          , c = e.h.v;
                        c >= 1 ? c = .99 : c <= -1 && (c = -.99);
                        var f = l * c
                          , u = Math.cos(p + e.a.v) * f + o[0]
                          , d = Math.sin(p + e.a.v) * f + o[1];
                        i = n.createRadialGradient(u, d, 0, o[0], o[1], l)
                    }
                    var m = t.g.p
                      , y = e.g.c
                      , g = 1;
                    for (a = 0; a < m; a += 1)
                        e.g._hasOpacity && e.g._collapsable && (g = e.g.o[2 * a + 1]),
                        i.addColorStop(y[4 * a] / 100, "rgba(" + y[4 * a + 1] + "," + y[4 * a + 2] + "," + y[4 * a + 3] + "," + g + ")");
                    s.grd = i
                }
                s.coOp = e.o.v * r.opacity
            }
            ,
            CVShapeElement.prototype.renderStroke = function(t, e, r) {
                var i = e.style
                  , s = e.d;
                s && (s._mdf || this._isFirstFrame) && (i.da = s.dashArray,
                i.do = s.dashoffset[0]),
                (e.c._mdf || this._isFirstFrame) && (i.co = "rgb(" + bmFloor(e.c.v[0]) + "," + bmFloor(e.c.v[1]) + "," + bmFloor(e.c.v[2]) + ")"),
                (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity),
                (e.w._mdf || this._isFirstFrame) && (i.wi = e.w.v)
            }
            ,
            CVShapeElement.prototype.destroy = function() {
                this.shapesData = null,
                this.globalData = null,
                this.canvasContext = null,
                this.stylesList.length = 0,
                this.itemsData.length = 0
            }
            ,
            extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement),
            CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"),
            CVTextElement.prototype.buildNewText = function() {
                var t = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
                var e = !1;
                t.fc ? (e = !0,
                this.values.fill = this.buildColor(t.fc)) : this.values.fill = "rgba(0,0,0,0)",
                this.fill = e;
                var r = !1;
                t.sc && (r = !0,
                this.values.stroke = this.buildColor(t.sc),
                this.values.sWidth = t.sw);
                var i, s, a, n, o, h, l, p, c, f, u, d, m = this.globalData.fontManager.getFontByName(t.f), y = t.l, g = this.mHelper;
                this.stroke = r,
                this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily,
                s = t.finalText.length;
                var v = this.data.singleShape
                  , b = .001 * t.tr * t.finalSize
                  , _ = 0
                  , P = 0
                  , S = !0
                  , E = 0;
                for (i = 0; i < s; i += 1) {
                    n = (a = this.globalData.fontManager.getCharData(t.finalText[i], m.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && a.data || {},
                    g.reset(),
                    v && y[i].n && (_ = -b,
                    P += t.yOffset,
                    P += S ? 1 : 0,
                    S = !1),
                    c = (l = n.shapes ? n.shapes[0].it : []).length,
                    g.scale(t.finalSize / 100, t.finalSize / 100),
                    v && this.applyTextPropertiesToMatrix(t, g, y[i].line, _, P),
                    u = createSizedArray(c - 1);
                    var x = 0;
                    for (p = 0; p < c; p += 1)
                        if ("sh" === l[p].ty) {
                            for (h = l[p].ks.k.i.length,
                            f = l[p].ks.k,
                            d = [],
                            o = 1; o < h; o += 1)
                                1 === o && d.push(g.applyToX(f.v[0][0], f.v[0][1], 0), g.applyToY(f.v[0][0], f.v[0][1], 0)),
                                d.push(g.applyToX(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToY(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToX(f.i[o][0], f.i[o][1], 0), g.applyToY(f.i[o][0], f.i[o][1], 0), g.applyToX(f.v[o][0], f.v[o][1], 0), g.applyToY(f.v[o][0], f.v[o][1], 0));
                            d.push(g.applyToX(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToY(f.o[o - 1][0], f.o[o - 1][1], 0), g.applyToX(f.i[0][0], f.i[0][1], 0), g.applyToY(f.i[0][0], f.i[0][1], 0), g.applyToX(f.v[0][0], f.v[0][1], 0), g.applyToY(f.v[0][0], f.v[0][1], 0)),
                            u[x] = d,
                            x += 1
                        }
                    v && (_ += y[i].l,
                    _ += b),
                    this.textSpans[E] ? this.textSpans[E].elem = u : this.textSpans[E] = {
                        elem: u
                    },
                    E += 1
                }
            }
            ,
            CVTextElement.prototype.renderInnerContent = function() {
                var t, e, r, i, s, a;
                this.validateText(),
                this.canvasContext.font = this.values.fValue,
                this.globalData.renderer.ctxLineCap("butt"),
                this.globalData.renderer.ctxLineJoin("miter"),
                this.globalData.renderer.ctxMiterLimit(4),
                this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
                var n, o = this.textAnimator.renderedLetters, h = this.textProperty.currentData.l;
                e = h.length;
                var l, p, c = null, f = null, u = null, d = this.globalData.renderer;
                for (t = 0; t < e; t += 1)
                    if (!h[t].n) {
                        if ((n = o[t]) && (d.save(),
                        d.ctxTransform(n.p),
                        d.ctxOpacity(n.o)),
                        this.fill) {
                            for (n && n.fc ? c !== n.fc && (d.ctxFillStyle(n.fc),
                            c = n.fc) : c !== this.values.fill && (c = this.values.fill,
                            d.ctxFillStyle(this.values.fill)),
                            i = (l = this.textSpans[t].elem).length,
                            this.globalData.canvasContext.beginPath(),
                            r = 0; r < i; r += 1)
                                for (a = (p = l[r]).length,
                                this.globalData.canvasContext.moveTo(p[0], p[1]),
                                s = 2; s < a; s += 6)
                                    this.globalData.canvasContext.bezierCurveTo(p[s], p[s + 1], p[s + 2], p[s + 3], p[s + 4], p[s + 5]);
                            this.globalData.canvasContext.closePath(),
                            d.ctxFill()
                        }
                        if (this.stroke) {
                            for (n && n.sw ? u !== n.sw && (u = n.sw,
                            d.ctxLineWidth(n.sw)) : u !== this.values.sWidth && (u = this.values.sWidth,
                            d.ctxLineWidth(this.values.sWidth)),
                            n && n.sc ? f !== n.sc && (f = n.sc,
                            d.ctxStrokeStyle(n.sc)) : f !== this.values.stroke && (f = this.values.stroke,
                            d.ctxStrokeStyle(this.values.stroke)),
                            i = (l = this.textSpans[t].elem).length,
                            this.globalData.canvasContext.beginPath(),
                            r = 0; r < i; r += 1)
                                for (a = (p = l[r]).length,
                                this.globalData.canvasContext.moveTo(p[0], p[1]),
                                s = 2; s < a; s += 6)
                                    this.globalData.canvasContext.bezierCurveTo(p[s], p[s + 1], p[s + 2], p[s + 3], p[s + 4], p[s + 5]);
                            this.globalData.canvasContext.closePath(),
                            d.ctxStroke()
                        }
                        n && this.globalData.renderer.restore()
                    }
            }
            ,
            extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement),
            CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement,
            CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
            CVImageElement.prototype.createContent = function() {
                if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
                    var t = createTag("canvas");
                    t.width = this.assetData.w,
                    t.height = this.assetData.h;
                    var e, r, i = t.getContext("2d"), s = this.img.width, a = this.img.height, n = s / a, o = this.assetData.w / this.assetData.h, h = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
                    n > o && "xMidYMid slice" === h || n < o && "xMidYMid slice" !== h ? e = (r = a) * o : r = (e = s) / o,
                    i.drawImage(this.img, (s - e) / 2, (a - r) / 2, e, r, 0, 0, this.assetData.w, this.assetData.h),
                    this.img = t
                }
            }
            ,
            CVImageElement.prototype.renderInnerContent = function() {
                this.canvasContext.drawImage(this.img, 0, 0)
            }
            ,
            CVImageElement.prototype.destroy = function() {
                this.img = null
            }
            ,
            extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement),
            CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement,
            CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
            CVSolidElement.prototype.renderInnerContent = function() {
                this.globalData.renderer.ctxFillStyle(this.data.sc),
                this.globalData.renderer.ctxFillRect(0, 0, this.data.sw, this.data.sh)
            }
            ,
            extendPrototype([BaseRenderer], CanvasRendererBase),
            CanvasRendererBase.prototype.createShape = function(t) {
                return new CVShapeElement(t,this.globalData,this)
            }
            ,
            CanvasRendererBase.prototype.createText = function(t) {
                return new CVTextElement(t,this.globalData,this)
            }
            ,
            CanvasRendererBase.prototype.createImage = function(t) {
                return new CVImageElement(t,this.globalData,this)
            }
            ,
            CanvasRendererBase.prototype.createSolid = function(t) {
                return new CVSolidElement(t,this.globalData,this)
            }
            ,
            CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull,
            CanvasRendererBase.prototype.ctxTransform = function(t) {
                1 === t[0] && 0 === t[1] && 0 === t[4] && 1 === t[5] && 0 === t[12] && 0 === t[13] || this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13])
            }
            ,
            CanvasRendererBase.prototype.ctxOpacity = function(t) {
                this.canvasContext.globalAlpha *= t < 0 ? 0 : t
            }
            ,
            CanvasRendererBase.prototype.ctxFillStyle = function(t) {
                this.canvasContext.fillStyle = t
            }
            ,
            CanvasRendererBase.prototype.ctxStrokeStyle = function(t) {
                this.canvasContext.strokeStyle = t
            }
            ,
            CanvasRendererBase.prototype.ctxLineWidth = function(t) {
                this.canvasContext.lineWidth = t
            }
            ,
            CanvasRendererBase.prototype.ctxLineCap = function(t) {
                this.canvasContext.lineCap = t
            }
            ,
            CanvasRendererBase.prototype.ctxLineJoin = function(t) {
                this.canvasContext.lineJoin = t
            }
            ,
            CanvasRendererBase.prototype.ctxMiterLimit = function(t) {
                this.canvasContext.miterLimit = t
            }
            ,
            CanvasRendererBase.prototype.ctxFill = function(t) {
                this.canvasContext.fill(t)
            }
            ,
            CanvasRendererBase.prototype.ctxFillRect = function(t, e, r, i) {
                this.canvasContext.fillRect(t, e, r, i)
            }
            ,
            CanvasRendererBase.prototype.ctxStroke = function() {
                this.canvasContext.stroke()
            }
            ,
            CanvasRendererBase.prototype.reset = function() {
                this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore()
            }
            ,
            CanvasRendererBase.prototype.save = function() {
                this.canvasContext.save()
            }
            ,
            CanvasRendererBase.prototype.restore = function(t) {
                this.renderConfig.clearCanvas ? (t && (this.globalData.blendMode = "source-over"),
                this.contextData.restore(t)) : this.canvasContext.restore()
            }
            ,
            CanvasRendererBase.prototype.configAnimation = function(t) {
                if (this.animationItem.wrapper) {
                    this.animationItem.container = createTag("canvas");
                    var e = this.animationItem.container.style;
                    e.width = "100%",
                    e.height = "100%";
                    var r = "0px 0px 0px";
                    e.transformOrigin = r,
                    e.mozTransformOrigin = r,
                    e.webkitTransformOrigin = r,
                    e["-webkit-transform"] = r,
                    e.contentVisibility = this.renderConfig.contentVisibility,
                    this.animationItem.wrapper.appendChild(this.animationItem.container),
                    this.canvasContext = this.animationItem.container.getContext("2d"),
                    this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className),
                    this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id)
                } else
                    this.canvasContext = this.renderConfig.context;
                this.contextData.setContext(this.canvasContext),
                this.data = t,
                this.layers = t.layers,
                this.transformCanvas = {
                    w: t.w,
                    h: t.h,
                    sx: 0,
                    sy: 0,
                    tx: 0,
                    ty: 0
                },
                this.setupGlobalData(t, document.body),
                this.globalData.canvasContext = this.canvasContext,
                this.globalData.renderer = this,
                this.globalData.isDashed = !1,
                this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
                this.globalData.transformCanvas = this.transformCanvas,
                this.elements = createSizedArray(t.layers.length),
                this.updateContainerSize()
            }
            ,
            CanvasRendererBase.prototype.updateContainerSize = function(t, e) {
                var r, i, s, a;
                if (this.reset(),
                t ? (r = t,
                i = e,
                this.canvasContext.canvas.width = r,
                this.canvasContext.canvas.height = i) : (this.animationItem.wrapper && this.animationItem.container ? (r = this.animationItem.wrapper.offsetWidth,
                i = this.animationItem.wrapper.offsetHeight) : (r = this.canvasContext.canvas.width,
                i = this.canvasContext.canvas.height),
                this.canvasContext.canvas.width = r * this.renderConfig.dpr,
                this.canvasContext.canvas.height = i * this.renderConfig.dpr),
                -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
                    var n = this.renderConfig.preserveAspectRatio.split(" ")
                      , o = n[1] || "meet"
                      , h = n[0] || "xMidYMid"
                      , l = h.substr(0, 4)
                      , p = h.substr(4);
                    s = r / i,
                    (a = this.transformCanvas.w / this.transformCanvas.h) > s && "meet" === o || a < s && "slice" === o ? (this.transformCanvas.sx = r / (this.transformCanvas.w / this.renderConfig.dpr),
                    this.transformCanvas.sy = r / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = i / (this.transformCanvas.h / this.renderConfig.dpr),
                    this.transformCanvas.sy = i / (this.transformCanvas.h / this.renderConfig.dpr)),
                    this.transformCanvas.tx = "xMid" === l && (a < s && "meet" === o || a > s && "slice" === o) ? (r - this.transformCanvas.w * (i / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === l && (a < s && "meet" === o || a > s && "slice" === o) ? (r - this.transformCanvas.w * (i / this.transformCanvas.h)) * this.renderConfig.dpr : 0,
                    this.transformCanvas.ty = "YMid" === p && (a > s && "meet" === o || a < s && "slice" === o) ? (i - this.transformCanvas.h * (r / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === p && (a > s && "meet" === o || a < s && "slice" === o) ? (i - this.transformCanvas.h * (r / this.transformCanvas.w)) * this.renderConfig.dpr : 0
                } else
                    "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = r / (this.transformCanvas.w / this.renderConfig.dpr),
                    this.transformCanvas.sy = i / (this.transformCanvas.h / this.renderConfig.dpr),
                    this.transformCanvas.tx = 0,
                    this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr,
                    this.transformCanvas.sy = this.renderConfig.dpr,
                    this.transformCanvas.tx = 0,
                    this.transformCanvas.ty = 0);
                this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1],
                this.ctxTransform(this.transformCanvas.props),
                this.canvasContext.beginPath(),
                this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h),
                this.canvasContext.closePath(),
                this.canvasContext.clip(),
                this.renderFrame(this.renderedFrame, !0)
            }
            ,
            CanvasRendererBase.prototype.destroy = function() {
                var t;
                for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
                t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1)
                    this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
                this.elements.length = 0,
                this.globalData.canvasContext = null,
                this.animationItem.container = null,
                this.destroyed = !0
            }
            ,
            CanvasRendererBase.prototype.renderFrame = function(t, e) {
                if ((this.renderedFrame !== t || !0 !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
                    var r;
                    this.renderedFrame = t,
                    this.globalData.frameNum = t - this.animationItem._isFirstFrame,
                    this.globalData.frameId += 1,
                    this.globalData._mdf = !this.renderConfig.clearCanvas || e,
                    this.globalData.projectInterface.currentFrame = t;
                    var i = this.layers.length;
                    for (this.completeLayers || this.checkLayers(t),
                    r = i - 1; r >= 0; r -= 1)
                        (this.completeLayers || this.elements[r]) && this.elements[r].prepareFrame(t - this.layers[r].st);
                    if (this.globalData._mdf) {
                        for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(),
                        r = i - 1; r >= 0; r -= 1)
                            (this.completeLayers || this.elements[r]) && this.elements[r].renderFrame();
                        !0 !== this.renderConfig.clearCanvas && this.restore()
                    }
                }
            }
            ,
            CanvasRendererBase.prototype.buildItem = function(t) {
                var e = this.elements;
                if (!e[t] && 99 !== this.layers[t].ty) {
                    var r = this.createItem(this.layers[t], this, this.globalData);
                    e[t] = r,
                    r.initExpressions()
                }
            }
            ,
            CanvasRendererBase.prototype.checkPendingElements = function() {
                for (; this.pendingElements.length; )
                    this.pendingElements.pop().checkParenting()
            }
            ,
            CanvasRendererBase.prototype.hide = function() {
                this.animationItem.container.style.display = "none"
            }
            ,
            CanvasRendererBase.prototype.show = function() {
                this.animationItem.container.style.display = "block"
            }
            ,
            CVContextData.prototype.duplicate = function() {
                var t = 2 * this._length
                  , e = 0;
                for (e = this._length; e < t; e += 1)
                    this.stack[e] = new CanvasContext;
                this._length = t
            }
            ,
            CVContextData.prototype.reset = function() {
                this.cArrPos = 0,
                this.cTr.reset(),
                this.stack[this.cArrPos].opacity = 1
            }
            ,
            CVContextData.prototype.restore = function(t) {
                this.cArrPos -= 1;
                var e, r = this.stack[this.cArrPos], i = r.transform, s = this.cTr.props;
                for (e = 0; e < 16; e += 1)
                    s[e] = i[e];
                if (t) {
                    this.nativeContext.restore();
                    var a = this.stack[this.cArrPos + 1];
                    this.appliedFillStyle = a.fillStyle,
                    this.appliedStrokeStyle = a.strokeStyle,
                    this.appliedLineWidth = a.lineWidth,
                    this.appliedLineCap = a.lineCap,
                    this.appliedLineJoin = a.lineJoin,
                    this.appliedMiterLimit = a.miterLimit
                }
                this.nativeContext.setTransform(i[0], i[1], i[4], i[5], i[12], i[13]),
                (t || -1 !== r.opacity && this.currentOpacity !== r.opacity) && (this.nativeContext.globalAlpha = r.opacity,
                this.currentOpacity = r.opacity),
                this.currentFillStyle = r.fillStyle,
                this.currentStrokeStyle = r.strokeStyle,
                this.currentLineWidth = r.lineWidth,
                this.currentLineCap = r.lineCap,
                this.currentLineJoin = r.lineJoin,
                this.currentMiterLimit = r.miterLimit
            }
            ,
            CVContextData.prototype.save = function(t) {
                t && this.nativeContext.save();
                var e = this.cTr.props;
                this._length <= this.cArrPos && this.duplicate();
                var r, i = this.stack[this.cArrPos];
                for (r = 0; r < 16; r += 1)
                    i.transform[r] = e[r];
                this.cArrPos += 1;
                var s = this.stack[this.cArrPos];
                s.opacity = i.opacity,
                s.fillStyle = i.fillStyle,
                s.strokeStyle = i.strokeStyle,
                s.lineWidth = i.lineWidth,
                s.lineCap = i.lineCap,
                s.lineJoin = i.lineJoin,
                s.miterLimit = i.miterLimit
            }
            ,
            CVContextData.prototype.setOpacity = function(t) {
                this.stack[this.cArrPos].opacity = t
            }
            ,
            CVContextData.prototype.setContext = function(t) {
                this.nativeContext = t
            }
            ,
            CVContextData.prototype.fillStyle = function(t) {
                this.stack[this.cArrPos].fillStyle !== t && (this.currentFillStyle = t,
                this.stack[this.cArrPos].fillStyle = t)
            }
            ,
            CVContextData.prototype.strokeStyle = function(t) {
                this.stack[this.cArrPos].strokeStyle !== t && (this.currentStrokeStyle = t,
                this.stack[this.cArrPos].strokeStyle = t)
            }
            ,
            CVContextData.prototype.lineWidth = function(t) {
                this.stack[this.cArrPos].lineWidth !== t && (this.currentLineWidth = t,
                this.stack[this.cArrPos].lineWidth = t)
            }
            ,
            CVContextData.prototype.lineCap = function(t) {
                this.stack[this.cArrPos].lineCap !== t && (this.currentLineCap = t,
                this.stack[this.cArrPos].lineCap = t)
            }
            ,
            CVContextData.prototype.lineJoin = function(t) {
                this.stack[this.cArrPos].lineJoin !== t && (this.currentLineJoin = t,
                this.stack[this.cArrPos].lineJoin = t)
            }
            ,
            CVContextData.prototype.miterLimit = function(t) {
                this.stack[this.cArrPos].miterLimit !== t && (this.currentMiterLimit = t,
                this.stack[this.cArrPos].miterLimit = t)
            }
            ,
            CVContextData.prototype.transform = function(t) {
                this.transformMat.cloneFromProps(t);
                var e = this.cTr;
                this.transformMat.multiply(e),
                e.cloneFromProps(this.transformMat.props);
                var r = e.props;
                this.nativeContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13])
            }
            ,
            CVContextData.prototype.opacity = function(t) {
                var e = this.stack[this.cArrPos].opacity;
                e *= t < 0 ? 0 : t,
                this.stack[this.cArrPos].opacity !== e && (this.currentOpacity !== t && (this.nativeContext.globalAlpha = t,
                this.currentOpacity = t),
                this.stack[this.cArrPos].opacity = e)
            }
            ,
            CVContextData.prototype.fill = function(t) {
                this.appliedFillStyle !== this.currentFillStyle && (this.appliedFillStyle = this.currentFillStyle,
                this.nativeContext.fillStyle = this.appliedFillStyle),
                this.nativeContext.fill(t)
            }
            ,
            CVContextData.prototype.fillRect = function(t, e, r, i) {
                this.appliedFillStyle !== this.currentFillStyle && (this.appliedFillStyle = this.currentFillStyle,
                this.nativeContext.fillStyle = this.appliedFillStyle),
                this.nativeContext.fillRect(t, e, r, i)
            }
            ,
            CVContextData.prototype.stroke = function() {
                this.appliedStrokeStyle !== this.currentStrokeStyle && (this.appliedStrokeStyle = this.currentStrokeStyle,
                this.nativeContext.strokeStyle = this.appliedStrokeStyle),
                this.appliedLineWidth !== this.currentLineWidth && (this.appliedLineWidth = this.currentLineWidth,
                this.nativeContext.lineWidth = this.appliedLineWidth),
                this.appliedLineCap !== this.currentLineCap && (this.appliedLineCap = this.currentLineCap,
                this.nativeContext.lineCap = this.appliedLineCap),
                this.appliedLineJoin !== this.currentLineJoin && (this.appliedLineJoin = this.currentLineJoin,
                this.nativeContext.lineJoin = this.appliedLineJoin),
                this.appliedMiterLimit !== this.currentMiterLimit && (this.appliedMiterLimit = this.currentMiterLimit,
                this.nativeContext.miterLimit = this.appliedMiterLimit),
                this.nativeContext.stroke()
            }
            ,
            extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement),
            CVCompElement.prototype.renderInnerContent = function() {
                var t, e = this.canvasContext;
                for (e.beginPath(),
                e.moveTo(0, 0),
                e.lineTo(this.data.w, 0),
                e.lineTo(this.data.w, this.data.h),
                e.lineTo(0, this.data.h),
                e.lineTo(0, 0),
                e.clip(),
                t = this.layers.length - 1; t >= 0; t -= 1)
                    (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
            }
            ,
            CVCompElement.prototype.destroy = function() {
                var t;
                for (t = this.layers.length - 1; t >= 0; t -= 1)
                    this.elements[t] && this.elements[t].destroy();
                this.layers = null,
                this.elements = null
            }
            ,
            CVCompElement.prototype.createComp = function(t) {
                return new CVCompElement(t,this.globalData,this)
            }
            ,
            extendPrototype([CanvasRendererBase], CanvasRenderer),
            CanvasRenderer.prototype.createComp = function(t) {
                return new CVCompElement(t,this.globalData,this)
            }
            ,
            HBaseElement.prototype = {
                checkBlendMode: function() {},
                initRendererElement: function() {
                    this.baseElement = createTag(this.data.tg || "div"),
                    this.data.hasMask ? (this.svgElement = createNS("svg"),
                    this.layerElement = createNS("g"),
                    this.maskedElement = this.layerElement,
                    this.svgElement.appendChild(this.layerElement),
                    this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement,
                    styleDiv(this.baseElement)
                },
                createContainerElements: function() {
                    this.renderableEffectsManager = new CVEffects(this),
                    this.transformedElement = this.baseElement,
                    this.maskedElement = this.layerElement,
                    this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                    this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                    0 !== this.data.bm && this.setBlendMode()
                },
                renderElement: function() {
                    var t = this.transformedElement ? this.transformedElement.style : {};
                    if (this.finalTransform._matMdf) {
                        var e = this.finalTransform.mat.toCSS();
                        t.transform = e,
                        t.webkitTransform = e
                    }
                    this.finalTransform._opMdf && (t.opacity = this.finalTransform.mProp.o.v)
                },
                renderFrame: function() {
                    this.data.hd || this.hidden || (this.renderTransform(),
                    this.renderRenderable(),
                    this.renderElement(),
                    this.renderInnerContent(),
                    this._isFirstFrame && (this._isFirstFrame = !1))
                },
                destroy: function() {
                    this.layerElement = null,
                    this.transformedElement = null,
                    this.matteElement && (this.matteElement = null),
                    this.maskManager && (this.maskManager.destroy(),
                    this.maskManager = null)
                },
                createRenderableComponents: function() {
                    this.maskManager = new MaskElement(this.data,this,this.globalData)
                },
                addEffects: function() {},
                setMatte: function() {}
            },
            HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement,
            HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy,
            HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting,
            extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement),
            HSolidElement.prototype.createContent = function() {
                var t;
                this.data.hasMask ? ((t = createNS("rect")).setAttribute("width", this.data.sw),
                t.setAttribute("height", this.data.sh),
                t.setAttribute("fill", this.data.sc),
                this.svgElement.setAttribute("width", this.data.sw),
                this.svgElement.setAttribute("height", this.data.sh)) : ((t = createTag("div")).style.width = this.data.sw + "px",
                t.style.height = this.data.sh + "px",
                t.style.backgroundColor = this.data.sc),
                this.layerElement.appendChild(t)
            }
            ,
            extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement),
            HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent,
            HShapeElement.prototype.createContent = function() {
                var t;
                if (this.baseElement.style.fontSize = 0,
                this.data.hasMask)
                    this.layerElement.appendChild(this.shapesContainer),
                    t = this.svgElement;
                else {
                    t = createNS("svg");
                    var e = this.comp.data ? this.comp.data : this.globalData.compSize;
                    t.setAttribute("width", e.w),
                    t.setAttribute("height", e.h),
                    t.appendChild(this.shapesContainer),
                    this.layerElement.appendChild(t)
                }
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0),
                this.filterUniqueShapes(),
                this.shapeCont = t
            }
            ,
            HShapeElement.prototype.getTransformedPoint = function(t, e) {
                var r, i = t.length;
                for (r = 0; r < i; r += 1)
                    e = t[r].mProps.v.applyToPointArray(e[0], e[1], 0);
                return e
            }
            ,
            HShapeElement.prototype.calculateShapeBoundingBox = function(t, e) {
                var r, i, s, a, n, o = t.sh.v, h = t.transformers, l = o._length;
                if (!(l <= 1)) {
                    for (r = 0; r < l - 1; r += 1)
                        i = this.getTransformedPoint(h, o.v[r]),
                        s = this.getTransformedPoint(h, o.o[r]),
                        a = this.getTransformedPoint(h, o.i[r + 1]),
                        n = this.getTransformedPoint(h, o.v[r + 1]),
                        this.checkBounds(i, s, a, n, e);
                    o.c && (i = this.getTransformedPoint(h, o.v[r]),
                    s = this.getTransformedPoint(h, o.o[r]),
                    a = this.getTransformedPoint(h, o.i[0]),
                    n = this.getTransformedPoint(h, o.v[0]),
                    this.checkBounds(i, s, a, n, e))
                }
            }
            ,
            HShapeElement.prototype.checkBounds = function(t, e, r, i, s) {
                this.getBoundsOfCurve(t, e, r, i);
                var a = this.shapeBoundingBox;
                s.x = bmMin(a.left, s.x),
                s.xMax = bmMax(a.right, s.xMax),
                s.y = bmMin(a.top, s.y),
                s.yMax = bmMax(a.bottom, s.yMax)
            }
            ,
            HShapeElement.prototype.shapeBoundingBox = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            },
            HShapeElement.prototype.tempBoundingBox = {
                x: 0,
                xMax: 0,
                y: 0,
                yMax: 0,
                width: 0,
                height: 0
            },
            HShapeElement.prototype.getBoundsOfCurve = function(t, e, r, i) {
                for (var s, a, n, o, h, l, p, c = [[t[0], i[0]], [t[1], i[1]]], f = 0; f < 2; ++f)
                    a = 6 * t[f] - 12 * e[f] + 6 * r[f],
                    s = -3 * t[f] + 9 * e[f] - 9 * r[f] + 3 * i[f],
                    n = 3 * e[f] - 3 * t[f],
                    a |= 0,
                    n |= 0,
                    0 == (s |= 0) && 0 === a || (0 === s ? (o = -n / a) > 0 && o < 1 && c[f].push(this.calculateF(o, t, e, r, i, f)) : (h = a * a - 4 * n * s) >= 0 && ((l = (-a + bmSqrt(h)) / (2 * s)) > 0 && l < 1 && c[f].push(this.calculateF(l, t, e, r, i, f)),
                    (p = (-a - bmSqrt(h)) / (2 * s)) > 0 && p < 1 && c[f].push(this.calculateF(p, t, e, r, i, f))));
                this.shapeBoundingBox.left = bmMin.apply(null, c[0]),
                this.shapeBoundingBox.top = bmMin.apply(null, c[1]),
                this.shapeBoundingBox.right = bmMax.apply(null, c[0]),
                this.shapeBoundingBox.bottom = bmMax.apply(null, c[1])
            }
            ,
            HShapeElement.prototype.calculateF = function(t, e, r, i, s, a) {
                return bmPow(1 - t, 3) * e[a] + 3 * bmPow(1 - t, 2) * t * r[a] + 3 * (1 - t) * bmPow(t, 2) * i[a] + bmPow(t, 3) * s[a]
            }
            ,
            HShapeElement.prototype.calculateBoundingBox = function(t, e) {
                var r, i = t.length;
                for (r = 0; r < i; r += 1)
                    t[r] && t[r].sh ? this.calculateShapeBoundingBox(t[r], e) : t[r] && t[r].it ? this.calculateBoundingBox(t[r].it, e) : t[r] && t[r].style && t[r].w && this.expandStrokeBoundingBox(t[r].w, e)
            }
            ,
            HShapeElement.prototype.expandStrokeBoundingBox = function(t, e) {
                var r = 0;
                if (t.keyframes) {
                    for (var i = 0; i < t.keyframes.length; i += 1) {
                        var s = t.keyframes[i].s;
                        s > r && (r = s)
                    }
                    r *= t.mult
                } else
                    r = t.v * t.mult;
                e.x -= r,
                e.xMax += r,
                e.y -= r,
                e.yMax += r
            }
            ,
            HShapeElement.prototype.currentBoxContains = function(t) {
                return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height
            }
            ,
            HShapeElement.prototype.renderInnerContent = function() {
                if (this._renderShapeFrame(),
                !this.hidden && (this._isFirstFrame || this._mdf)) {
                    var t = this.tempBoundingBox
                      , e = 999999;
                    if (t.x = e,
                    t.xMax = -e,
                    t.y = e,
                    t.yMax = -e,
                    this.calculateBoundingBox(this.itemsData, t),
                    t.width = t.xMax < t.x ? 0 : t.xMax - t.x,
                    t.height = t.yMax < t.y ? 0 : t.yMax - t.y,
                    this.currentBoxContains(t))
                        return;
                    var r = !1;
                    if (this.currentBBox.w !== t.width && (this.currentBBox.w = t.width,
                    this.shapeCont.setAttribute("width", t.width),
                    r = !0),
                    this.currentBBox.h !== t.height && (this.currentBBox.h = t.height,
                    this.shapeCont.setAttribute("height", t.height),
                    r = !0),
                    r || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) {
                        this.currentBBox.w = t.width,
                        this.currentBBox.h = t.height,
                        this.currentBBox.x = t.x,
                        this.currentBBox.y = t.y,
                        this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                        var i = this.shapeCont.style
                          , s = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                        i.transform = s,
                        i.webkitTransform = s
                    }
                }
            }
            ,
            extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement),
            HTextElement.prototype.createContent = function() {
                if (this.isMasked = this.checkMasks(),
                this.isMasked) {
                    this.renderType = "svg",
                    this.compW = this.comp.data.w,
                    this.compH = this.comp.data.h,
                    this.svgElement.setAttribute("width", this.compW),
                    this.svgElement.setAttribute("height", this.compH);
                    var t = createNS("g");
                    this.maskedElement.appendChild(t),
                    this.innerElem = t
                } else
                    this.renderType = "html",
                    this.innerElem = this.layerElement;
                this.checkParenting()
            }
            ,
            HTextElement.prototype.buildNewText = function() {
                var t = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
                var e = this.innerElem.style
                  , r = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)";
                e.fill = r,
                e.color = r,
                t.sc && (e.stroke = this.buildColor(t.sc),
                e.strokeWidth = t.sw + "px");
                var i, s, a = this.globalData.fontManager.getFontByName(t.f);
                if (!this.globalData.fontManager.chars)
                    if (e.fontSize = t.finalSize + "px",
                    e.lineHeight = t.finalSize + "px",
                    a.fClass)
                        this.innerElem.className = a.fClass;
                    else {
                        e.fontFamily = a.fFamily;
                        var n = t.fWeight
                          , o = t.fStyle;
                        e.fontStyle = o,
                        e.fontWeight = n
                    }
                var h, l, p, c = t.l;
                s = c.length;
                var f, u = this.mHelper, d = "", m = 0;
                for (i = 0; i < s; i += 1) {
                    if (this.globalData.fontManager.chars ? (this.textPaths[m] ? h = this.textPaths[m] : ((h = createNS("path")).setAttribute("stroke-linecap", lineCapEnum[1]),
                    h.setAttribute("stroke-linejoin", lineJoinEnum[2]),
                    h.setAttribute("stroke-miterlimit", "4")),
                    this.isMasked || (this.textSpans[m] ? p = (l = this.textSpans[m]).children[0] : ((l = createTag("div")).style.lineHeight = 0,
                    (p = createNS("svg")).appendChild(h),
                    styleDiv(l)))) : this.isMasked ? h = this.textPaths[m] ? this.textPaths[m] : createNS("text") : this.textSpans[m] ? (l = this.textSpans[m],
                    h = this.textPaths[m]) : (styleDiv(l = createTag("span")),
                    styleDiv(h = createTag("span")),
                    l.appendChild(h)),
                    this.globalData.fontManager.chars) {
                        var y, g = this.globalData.fontManager.getCharData(t.finalText[i], a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                        if (y = g ? g.data : null,
                        u.reset(),
                        y && y.shapes && y.shapes.length && (f = y.shapes[0].it,
                        u.scale(t.finalSize / 100, t.finalSize / 100),
                        d = this.createPathShape(u, f),
                        h.setAttribute("d", d)),
                        this.isMasked)
                            this.innerElem.appendChild(h);
                        else {
                            if (this.innerElem.appendChild(l),
                            y && y.shapes) {
                                document.body.appendChild(p);
                                var v = p.getBBox();
                                p.setAttribute("width", v.width + 2),
                                p.setAttribute("height", v.height + 2),
                                p.setAttribute("viewBox", v.x - 1 + " " + (v.y - 1) + " " + (v.width + 2) + " " + (v.height + 2));
                                var b = p.style
                                  , _ = "translate(" + (v.x - 1) + "px," + (v.y - 1) + "px)";
                                b.transform = _,
                                b.webkitTransform = _,
                                c[i].yOffset = v.y - 1
                            } else
                                p.setAttribute("width", 1),
                                p.setAttribute("height", 1);
                            l.appendChild(p)
                        }
                    } else if (h.textContent = c[i].val,
                    h.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"),
                    this.isMasked)
                        this.innerElem.appendChild(h);
                    else {
                        this.innerElem.appendChild(l);
                        var P = h.style
                          , S = "translate3d(0," + -t.finalSize / 1.2 + "px,0)";
                        P.transform = S,
                        P.webkitTransform = S
                    }
                    this.isMasked ? this.textSpans[m] = h : this.textSpans[m] = l,
                    this.textSpans[m].style.display = "block",
                    this.textPaths[m] = h,
                    m += 1
                }
                for (; m < this.textSpans.length; )
                    this.textSpans[m].style.display = "none",
                    m += 1
            }
            ,
            HTextElement.prototype.renderInnerContent = function() {
                var t;
                if (this.validateText(),
                this.data.singleShape) {
                    if (!this._isFirstFrame && !this.lettersChangedFlag)
                        return;
                    if (this.isMasked && this.finalTransform._matMdf) {
                        this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH),
                        t = this.svgElement.style;
                        var e = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                        t.transform = e,
                        t.webkitTransform = e
                    }
                }
                if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
                this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
                    var r, i, s, a, n, o = 0, h = this.textAnimator.renderedLetters, l = this.textProperty.currentData.l;
                    for (i = l.length,
                    r = 0; r < i; r += 1)
                        l[r].n ? o += 1 : (a = this.textSpans[r],
                        n = this.textPaths[r],
                        s = h[o],
                        o += 1,
                        s._mdf.m && (this.isMasked ? a.setAttribute("transform", s.m) : (a.style.webkitTransform = s.m,
                        a.style.transform = s.m)),
                        a.style.opacity = s.o,
                        s.sw && s._mdf.sw && n.setAttribute("stroke-width", s.sw),
                        s.sc && s._mdf.sc && n.setAttribute("stroke", s.sc),
                        s.fc && s._mdf.fc && (n.setAttribute("fill", s.fc),
                        n.style.color = s.fc));
                    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                        var p = this.innerElem.getBBox();
                        if (this.currentBBox.w !== p.width && (this.currentBBox.w = p.width,
                        this.svgElement.setAttribute("width", p.width)),
                        this.currentBBox.h !== p.height && (this.currentBBox.h = p.height,
                        this.svgElement.setAttribute("height", p.height)),
                        this.currentBBox.w !== p.width + 2 || this.currentBBox.h !== p.height + 2 || this.currentBBox.x !== p.x - 1 || this.currentBBox.y !== p.y - 1) {
                            this.currentBBox.w = p.width + 2,
                            this.currentBBox.h = p.height + 2,
                            this.currentBBox.x = p.x - 1,
                            this.currentBBox.y = p.y - 1,
                            this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h),
                            t = this.svgElement.style;
                            var c = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                            t.transform = c,
                            t.webkitTransform = c
                        }
                    }
                }
            }
            ,
            extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement),
            HCameraElement.prototype.setup = function() {
                var t, e, r, i, s = this.comp.threeDElements.length;
                for (t = 0; t < s; t += 1)
                    if ("3d" === (e = this.comp.threeDElements[t]).type) {
                        r = e.perspectiveElem.style,
                        i = e.container.style;
                        var a = this.pe.v + "px"
                          , n = "0px 0px 0px"
                          , o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                        r.perspective = a,
                        r.webkitPerspective = a,
                        i.transformOrigin = n,
                        i.mozTransformOrigin = n,
                        i.webkitTransformOrigin = n,
                        r.transform = o,
                        r.webkitTransform = o
                    }
            }
            ,
            HCameraElement.prototype.createElements = function() {}
            ,
            HCameraElement.prototype.hide = function() {}
            ,
            HCameraElement.prototype.renderFrame = function() {
                var t, e, r = this._isFirstFrame;
                if (this.hierarchy)
                    for (e = this.hierarchy.length,
                    t = 0; t < e; t += 1)
                        r = this.hierarchy[t].finalTransform.mProp._mdf || r;
                if (r || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
                    if (this.mat.reset(),
                    this.hierarchy)
                        for (t = e = this.hierarchy.length - 1; t >= 0; t -= 1) {
                            var i = this.hierarchy[t].finalTransform.mProp;
                            this.mat.translate(-i.p.v[0], -i.p.v[1], i.p.v[2]),
                            this.mat.rotateX(-i.or.v[0]).rotateY(-i.or.v[1]).rotateZ(i.or.v[2]),
                            this.mat.rotateX(-i.rx.v).rotateY(-i.ry.v).rotateZ(i.rz.v),
                            this.mat.scale(1 / i.s.v[0], 1 / i.s.v[1], 1 / i.s.v[2]),
                            this.mat.translate(i.a.v[0], i.a.v[1], i.a.v[2])
                        }
                    if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
                    this.a) {
                        var s;
                        s = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                        var a = Math.sqrt(Math.pow(s[0], 2) + Math.pow(s[1], 2) + Math.pow(s[2], 2))
                          , n = [s[0] / a, s[1] / a, s[2] / a]
                          , o = Math.sqrt(n[2] * n[2] + n[0] * n[0])
                          , h = Math.atan2(n[1], o)
                          , l = Math.atan2(n[0], -n[2]);
                        this.mat.rotateY(l).rotateX(-h)
                    }
                    this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
                    this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),
                    this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0),
                    this.mat.translate(0, 0, this.pe.v);
                    var p = !this._prevMat.equals(this.mat);
                    if ((p || this.pe._mdf) && this.comp.threeDElements) {
                        var c, f, u;
                        for (e = this.comp.threeDElements.length,
                        t = 0; t < e; t += 1)
                            if ("3d" === (c = this.comp.threeDElements[t]).type) {
                                if (p) {
                                    var d = this.mat.toCSS();
                                    (u = c.container.style).transform = d,
                                    u.webkitTransform = d
                                }
                                this.pe._mdf && ((f = c.perspectiveElem.style).perspective = this.pe.v + "px",
                                f.webkitPerspective = this.pe.v + "px")
                            }
                        this.mat.clone(this._prevMat)
                    }
                }
                this._isFirstFrame = !1
            }
            ,
            HCameraElement.prototype.prepareFrame = function(t) {
                this.prepareProperties(t, !0)
            }
            ,
            HCameraElement.prototype.destroy = function() {}
            ,
            HCameraElement.prototype.getBaseElement = function() {
                return null
            }
            ,
            extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement),
            HImageElement.prototype.createContent = function() {
                var t = this.globalData.getAssetsPath(this.assetData)
                  , e = new Image;
                this.data.hasMask ? (this.imageElem = createNS("image"),
                this.imageElem.setAttribute("width", this.assetData.w + "px"),
                this.imageElem.setAttribute("height", this.assetData.h + "px"),
                this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t),
                this.layerElement.appendChild(this.imageElem),
                this.baseElement.setAttribute("width", this.assetData.w),
                this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(e),
                e.crossOrigin = "anonymous",
                e.src = t,
                this.data.ln && this.baseElement.setAttribute("id", this.data.ln)
            }
            ,
            extendPrototype([BaseRenderer], HybridRendererBase),
            HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem,
            HybridRendererBase.prototype.checkPendingElements = function() {
                for (; this.pendingElements.length; )
                    this.pendingElements.pop().checkParenting()
            }
            ,
            HybridRendererBase.prototype.appendElementInPos = function(t, e) {
                var r = t.getBaseElement();
                if (r) {
                    var i = this.layers[e];
                    if (i.ddd && this.supports3d)
                        this.addTo3dContainer(r, e);
                    else if (this.threeDElements)
                        this.addTo3dContainer(r, e);
                    else {
                        for (var s, a, n = 0; n < e; )
                            this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement && (a = this.elements[n],
                            s = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : a.getBaseElement()) || s),
                            n += 1;
                        s ? i.ddd && this.supports3d || this.layerElement.insertBefore(r, s) : i.ddd && this.supports3d || this.layerElement.appendChild(r)
                    }
                }
            }
            ,
            HybridRendererBase.prototype.createShape = function(t) {
                return this.supports3d ? new HShapeElement(t,this.globalData,this) : new SVGShapeElement(t,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createText = function(t) {
                return this.supports3d ? new HTextElement(t,this.globalData,this) : new SVGTextLottieElement(t,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createCamera = function(t) {
                return this.camera = new HCameraElement(t,this.globalData,this),
                this.camera
            }
            ,
            HybridRendererBase.prototype.createImage = function(t) {
                return this.supports3d ? new HImageElement(t,this.globalData,this) : new IImageElement(t,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createSolid = function(t) {
                return this.supports3d ? new HSolidElement(t,this.globalData,this) : new ISolidElement(t,this.globalData,this)
            }
            ,
            HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull,
            HybridRendererBase.prototype.getThreeDContainerByPos = function(t) {
                for (var e = 0, r = this.threeDElements.length; e < r; ) {
                    if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t)
                        return this.threeDElements[e].perspectiveElem;
                    e += 1
                }
                return null
            }
            ,
            HybridRendererBase.prototype.createThreeDContainer = function(t, e) {
                var r, i, s = createTag("div");
                styleDiv(s);
                var a = createTag("div");
                if (styleDiv(a),
                "3d" === e) {
                    (r = s.style).width = this.globalData.compSize.w + "px",
                    r.height = this.globalData.compSize.h + "px";
                    var n = "50% 50%";
                    r.webkitTransformOrigin = n,
                    r.mozTransformOrigin = n,
                    r.transformOrigin = n;
                    var o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                    (i = a.style).transform = o,
                    i.webkitTransform = o
                }
                s.appendChild(a);
                var h = {
                    container: a,
                    perspectiveElem: s,
                    startPos: t,
                    endPos: t,
                    type: e
                };
                return this.threeDElements.push(h),
                h
            }
            ,
            HybridRendererBase.prototype.build3dContainers = function() {
                var t, e, r = this.layers.length, i = "";
                for (t = 0; t < r; t += 1)
                    this.layers[t].ddd && 3 !== this.layers[t].ty ? ("3d" !== i && (i = "3d",
                    e = this.createThreeDContainer(t, "3d")),
                    e.endPos = Math.max(e.endPos, t)) : ("2d" !== i && (i = "2d",
                    e = this.createThreeDContainer(t, "2d")),
                    e.endPos = Math.max(e.endPos, t));
                for (t = (r = this.threeDElements.length) - 1; t >= 0; t -= 1)
                    this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem)
            }
            ,
            HybridRendererBase.prototype.addTo3dContainer = function(t, e) {
                for (var r = 0, i = this.threeDElements.length; r < i; ) {
                    if (e <= this.threeDElements[r].endPos) {
                        for (var s, a = this.threeDElements[r].startPos; a < e; )
                            this.elements[a] && this.elements[a].getBaseElement && (s = this.elements[a].getBaseElement()),
                            a += 1;
                        s ? this.threeDElements[r].container.insertBefore(t, s) : this.threeDElements[r].container.appendChild(t);
                        break
                    }
                    r += 1
                }
            }
            ,
            HybridRendererBase.prototype.configAnimation = function(t) {
                var e = createTag("div")
                  , r = this.animationItem.wrapper
                  , i = e.style;
                i.width = t.w + "px",
                i.height = t.h + "px",
                this.resizerElem = e,
                styleDiv(e),
                i.transformStyle = "flat",
                i.mozTransformStyle = "flat",
                i.webkitTransformStyle = "flat",
                this.renderConfig.className && e.setAttribute("class", this.renderConfig.className),
                r.appendChild(e),
                i.overflow = "hidden";
                var s = createNS("svg");
                s.setAttribute("width", "1"),
                s.setAttribute("height", "1"),
                styleDiv(s),
                this.resizerElem.appendChild(s);
                var a = createNS("defs");
                s.appendChild(a),
                this.data = t,
                this.setupGlobalData(t, s),
                this.globalData.defs = a,
                this.layers = t.layers,
                this.layerElement = this.resizerElem,
                this.build3dContainers(),
                this.updateContainerSize()
            }
            ,
            HybridRendererBase.prototype.destroy = function() {
                var t;
                this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
                this.animationItem.container = null,
                this.globalData.defs = null;
                var e = this.layers ? this.layers.length : 0;
                for (t = 0; t < e; t += 1)
                    this.elements[t] && this.elements[t].destroy && this.elements[t].destroy();
                this.elements.length = 0,
                this.destroyed = !0,
                this.animationItem = null
            }
            ,
            HybridRendererBase.prototype.updateContainerSize = function() {
                var t, e, r, i, s = this.animationItem.wrapper.offsetWidth, a = this.animationItem.wrapper.offsetHeight, n = s / a;
                this.globalData.compSize.w / this.globalData.compSize.h > n ? (t = s / this.globalData.compSize.w,
                e = s / this.globalData.compSize.w,
                r = 0,
                i = (a - this.globalData.compSize.h * (s / this.globalData.compSize.w)) / 2) : (t = a / this.globalData.compSize.h,
                e = a / this.globalData.compSize.h,
                r = (s - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2,
                i = 0);
                var o = this.resizerElem.style;
                o.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + r + "," + i + ",0,1)",
                o.transform = o.webkitTransform
            }
            ,
            HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame,
            HybridRendererBase.prototype.hide = function() {
                this.resizerElem.style.display = "none"
            }
            ,
            HybridRendererBase.prototype.show = function() {
                this.resizerElem.style.display = "block"
            }
            ,
            HybridRendererBase.prototype.initItems = function() {
                if (this.buildAllItems(),
                this.camera)
                    this.camera.setup();
                else {
                    var t, e = this.globalData.compSize.w, r = this.globalData.compSize.h, i = this.threeDElements.length;
                    for (t = 0; t < i; t += 1) {
                        var s = this.threeDElements[t].perspectiveElem.style;
                        s.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(r, 2)) + "px",
                        s.perspective = s.webkitPerspective
                    }
                }
            }
            ,
            HybridRendererBase.prototype.searchExtraCompositions = function(t) {
                var e, r = t.length, i = createTag("div");
                for (e = 0; e < r; e += 1)
                    if (t[e].xt) {
                        var s = this.createComp(t[e], i, this.globalData.comp, null);
                        s.initExpressions(),
                        this.globalData.projectInterface.registerComposition(s)
                    }
            }
            ,
            extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement),
            HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements,
            HCompElement.prototype.createContainerElements = function() {
                this._createBaseContainerElements(),
                this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w),
                this.svgElement.setAttribute("height", this.data.h),
                this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement
            }
            ,
            HCompElement.prototype.addTo3dContainer = function(t, e) {
                for (var r, i = 0; i < e; )
                    this.elements[i] && this.elements[i].getBaseElement && (r = this.elements[i].getBaseElement()),
                    i += 1;
                r ? this.layerElement.insertBefore(t, r) : this.layerElement.appendChild(t)
            }
            ,
            HCompElement.prototype.createComp = function(t) {
                return this.supports3d ? new HCompElement(t,this.globalData,this) : new SVGCompElement(t,this.globalData,this)
            }
            ,
            extendPrototype([HybridRendererBase], HybridRenderer),
            HybridRenderer.prototype.createComp = function(t) {
                return this.supports3d ? new HCompElement(t,this.globalData,this) : new SVGCompElement(t,this.globalData,this)
            }
            ;
            var CompExpressionInterface = function(t) {
                function e(e) {
                    for (var r = 0, i = t.layers.length; r < i; ) {
                        if (t.layers[r].nm === e || t.layers[r].ind === e)
                            return t.elements[r].layerInterface;
                        r += 1
                    }
                    return null
                }
                return Object.defineProperty(e, "_name", {
                    value: t.data.nm
                }),
                e.layer = e,
                e.pixelAspect = 1,
                e.height = t.data.h || t.globalData.compSize.h,
                e.width = t.data.w || t.globalData.compSize.w,
                e.pixelAspect = 1,
                e.frameDuration = 1 / t.globalData.frameRate,
                e.displayStartTime = 0,
                e.numLayers = t.layers.length,
                e
            };
            function _typeof$2(t) {
                return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof$2(t)
            }
            function seedRandom(t, e) {
                var r = this
                  , i = 256
                  , s = e.pow(i, 6)
                  , a = e.pow(2, 52)
                  , n = 2 * a
                  , o = 255;
                function h(t) {
                    var e, r = t.length, s = this, a = 0, n = s.i = s.j = 0, h = s.S = [];
                    for (r || (t = [r++]); a < i; )
                        h[a] = a++;
                    for (a = 0; a < i; a++)
                        h[a] = h[n = o & n + t[a % r] + (e = h[a])],
                        h[n] = e;
                    s.g = function(t) {
                        for (var e, r = 0, a = s.i, n = s.j, h = s.S; t--; )
                            e = h[a = o & a + 1],
                            r = r * i + h[o & (h[a] = h[n = o & n + e]) + (h[n] = e)];
                        return s.i = a,
                        s.j = n,
                        r
                    }
                }
                function l(t, e) {
                    return e.i = t.i,
                    e.j = t.j,
                    e.S = t.S.slice(),
                    e
                }
                function p(t, e) {
                    var r, i = [], s = _typeof$2(t);
                    if (e && "object" == s)
                        for (r in t)
                            try {
                                i.push(p(t[r], e - 1))
                            } catch (t) {}
                    return i.length ? i : "string" == s ? t : t + "\0"
                }
                function c(t, e) {
                    for (var r, i = t + "", s = 0; s < i.length; )
                        e[o & s] = o & (r ^= 19 * e[o & s]) + i.charCodeAt(s++);
                    return f(e)
                }
                function f(t) {
                    return String.fromCharCode.apply(0, t)
                }
                e.seedrandom = function(o, u, d) {
                    var m = []
                      , y = c(p((u = !0 === u ? {
                        entropy: !0
                    } : u || {}).entropy ? [o, f(t)] : null === o ? function() {
                        try {
                            var e = new Uint8Array(i);
                            return (r.crypto || r.msCrypto).getRandomValues(e),
                            f(e)
                        } catch (e) {
                            var s = r.navigator
                              , a = s && s.plugins;
                            return [+new Date, r, a, r.screen, f(t)]
                        }
                    }() : o, 3), m)
                      , g = new h(m)
                      , v = function() {
                        for (var t = g.g(6), e = s, r = 0; t < a; )
                            t = (t + r) * i,
                            e *= i,
                            r = g.g(1);
                        for (; t >= n; )
                            t /= 2,
                            e /= 2,
                            r >>>= 1;
                        return (t + r) / e
                    };
                    return v.int32 = function() {
                        return 0 | g.g(4)
                    }
                    ,
                    v.quick = function() {
                        return g.g(4) / 4294967296
                    }
                    ,
                    v.double = v,
                    c(f(g.S), t),
                    (u.pass || d || function(t, r, i, s) {
                        return s && (s.S && l(s, g),
                        t.state = function() {
                            return l(g, {})
                        }
                        ),
                        i ? (e.random = t,
                        r) : t
                    }
                    )(v, y, "global"in u ? u.global : this == e, u.state)
                }
                ,
                c(e.random(), t)
            }
            function initialize$2(t) {
                seedRandom([], t)
            }
            var propTypes = {
                SHAPE: "shape"
            };
            function _typeof$1(t) {
                return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof$1(t)
            }
            var ExpressionManager = function() {
                var ob = {}
                  , Math = BMMath
                  , window = null
                  , document = null
                  , XMLHttpRequest = null
                  , fetch = null
                  , frames = null
                  , _lottieGlobal = {};
                function resetFrame() {
                    _lottieGlobal = {}
                }
                function $bm_isInstanceOfArray(t) {
                    return t.constructor === Array || t.constructor === Float32Array
                }
                function isNumerable(t, e) {
                    return "number" === t || e instanceof Number || "boolean" === t || "string" === t
                }
                function $bm_neg(t) {
                    var e = _typeof$1(t);
                    if ("number" === e || t instanceof Number || "boolean" === e)
                        return -t;
                    if ($bm_isInstanceOfArray(t)) {
                        var r, i = t.length, s = [];
                        for (r = 0; r < i; r += 1)
                            s[r] = -t[r];
                        return s
                    }
                    return t.propType ? t.v : -t
                }
                initialize$2(BMMath);
                var easeInBez = BezierFactory.getBezierEasing(.333, 0, .833, .833, "easeIn").get
                  , easeOutBez = BezierFactory.getBezierEasing(.167, .167, .667, 1, "easeOut").get
                  , easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, "easeInOut").get;
                function sum(t, e) {
                    var r = _typeof$1(t)
                      , i = _typeof$1(e);
                    if (isNumerable(r, t) && isNumerable(i, e) || "string" === r || "string" === i)
                        return t + e;
                    if ($bm_isInstanceOfArray(t) && isNumerable(i, e))
                        return (t = t.slice(0))[0] += e,
                        t;
                    if (isNumerable(r, t) && $bm_isInstanceOfArray(e))
                        return (e = e.slice(0))[0] = t + e[0],
                        e;
                    if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                        for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                            ("number" == typeof t[s] || t[s]instanceof Number) && ("number" == typeof e[s] || e[s]instanceof Number) ? o[s] = t[s] + e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s],
                            s += 1;
                        return o
                    }
                    return 0
                }
                var add = sum;
                function sub(t, e) {
                    var r = _typeof$1(t)
                      , i = _typeof$1(e);
                    if (isNumerable(r, t) && isNumerable(i, e))
                        return "string" === r && (t = parseInt(t, 10)),
                        "string" === i && (e = parseInt(e, 10)),
                        t - e;
                    if ($bm_isInstanceOfArray(t) && isNumerable(i, e))
                        return (t = t.slice(0))[0] -= e,
                        t;
                    if (isNumerable(r, t) && $bm_isInstanceOfArray(e))
                        return (e = e.slice(0))[0] = t - e[0],
                        e;
                    if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                        for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; )
                            ("number" == typeof t[s] || t[s]instanceof Number) && ("number" == typeof e[s] || e[s]instanceof Number) ? o[s] = t[s] - e[s] : o[s] = void 0 === e[s] ? t[s] : t[s] || e[s],
                            s += 1;
                        return o
                    }
                    return 0
                }
                function mul(t, e) {
                    var r, i, s, a = _typeof$1(t), n = _typeof$1(e);
                    if (isNumerable(a, t) && isNumerable(n, e))
                        return t * e;
                    if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                        for (s = t.length,
                        r = createTypedArray("float32", s),
                        i = 0; i < s; i += 1)
                            r[i] = t[i] * e;
                        return r
                    }
                    if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                        for (s = e.length,
                        r = createTypedArray("float32", s),
                        i = 0; i < s; i += 1)
                            r[i] = t * e[i];
                        return r
                    }
                    return 0
                }
                function div(t, e) {
                    var r, i, s, a = _typeof$1(t), n = _typeof$1(e);
                    if (isNumerable(a, t) && isNumerable(n, e))
                        return t / e;
                    if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                        for (s = t.length,
                        r = createTypedArray("float32", s),
                        i = 0; i < s; i += 1)
                            r[i] = t[i] / e;
                        return r
                    }
                    if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                        for (s = e.length,
                        r = createTypedArray("float32", s),
                        i = 0; i < s; i += 1)
                            r[i] = t / e[i];
                        return r
                    }
                    return 0
                }
                function mod(t, e) {
                    return "string" == typeof t && (t = parseInt(t, 10)),
                    "string" == typeof e && (e = parseInt(e, 10)),
                    t % e
                }
                var $bm_sum = sum
                  , $bm_sub = sub
                  , $bm_mul = mul
                  , $bm_div = div
                  , $bm_mod = mod;
                function clamp(t, e, r) {
                    if (e > r) {
                        var i = r;
                        r = e,
                        e = i
                    }
                    return Math.min(Math.max(t, e), r)
                }
                function radiansToDegrees(t) {
                    return t / degToRads
                }
                var radians_to_degrees = radiansToDegrees;
                function degreesToRadians(t) {
                    return t * degToRads
                }
                var degrees_to_radians = radiansToDegrees
                  , helperLengthArray = [0, 0, 0, 0, 0, 0];
                function length(t, e) {
                    if ("number" == typeof t || t instanceof Number)
                        return e = e || 0,
                        Math.abs(t - e);
                    var r;
                    e || (e = helperLengthArray);
                    var i = Math.min(t.length, e.length)
                      , s = 0;
                    for (r = 0; r < i; r += 1)
                        s += Math.pow(e[r] - t[r], 2);
                    return Math.sqrt(s)
                }
                function normalize(t) {
                    return div(t, length(t))
                }
                function rgbToHsl(t) {
                    var e, r, i = t[0], s = t[1], a = t[2], n = Math.max(i, s, a), o = Math.min(i, s, a), h = (n + o) / 2;
                    if (n === o)
                        e = 0,
                        r = 0;
                    else {
                        var l = n - o;
                        switch (r = h > .5 ? l / (2 - n - o) : l / (n + o),
                        n) {
                        case i:
                            e = (s - a) / l + (s < a ? 6 : 0);
                            break;
                        case s:
                            e = (a - i) / l + 2;
                            break;
                        case a:
                            e = (i - s) / l + 4
                        }
                        e /= 6
                    }
                    return [e, r, h, t[3]]
                }
                function hue2rgb(t, e, r) {
                    return r < 0 && (r += 1),
                    r > 1 && (r -= 1),
                    r < 1 / 6 ? t + 6 * (e - t) * r : r < .5 ? e : r < 2 / 3 ? t + (e - t) * (2 / 3 - r) * 6 : t
                }
                function hslToRgb(t) {
                    var e, r, i, s = t[0], a = t[1], n = t[2];
                    if (0 === a)
                        e = n,
                        i = n,
                        r = n;
                    else {
                        var o = n < .5 ? n * (1 + a) : n + a - n * a
                          , h = 2 * n - o;
                        e = hue2rgb(h, o, s + 1 / 3),
                        r = hue2rgb(h, o, s),
                        i = hue2rgb(h, o, s - 1 / 3)
                    }
                    return [e, r, i, t[3]]
                }
                function linear(t, e, r, i, s) {
                    if (void 0 !== i && void 0 !== s || (i = e,
                    s = r,
                    e = 0,
                    r = 1),
                    r < e) {
                        var a = r;
                        r = e,
                        e = a
                    }
                    if (t <= e)
                        return i;
                    if (t >= r)
                        return s;
                    var n, o = r === e ? 0 : (t - e) / (r - e);
                    if (!i.length)
                        return i + (s - i) * o;
                    var h = i.length
                      , l = createTypedArray("float32", h);
                    for (n = 0; n < h; n += 1)
                        l[n] = i[n] + (s[n] - i[n]) * o;
                    return l
                }
                function random(t, e) {
                    if (void 0 === e && (void 0 === t ? (t = 0,
                    e = 1) : (e = t,
                    t = void 0)),
                    e.length) {
                        var r, i = e.length;
                        t || (t = createTypedArray("float32", i));
                        var s = createTypedArray("float32", i)
                          , a = BMMath.random();
                        for (r = 0; r < i; r += 1)
                            s[r] = t[r] + a * (e[r] - t[r]);
                        return s
                    }
                    return void 0 === t && (t = 0),
                    t + BMMath.random() * (e - t)
                }
                function createPath(t, e, r, i) {
                    var s, a = t.length, n = shapePool.newElement();
                    n.setPathData(!!i, a);
                    var o, h, l = [0, 0];
                    for (s = 0; s < a; s += 1)
                        o = e && e[s] ? e[s] : l,
                        h = r && r[s] ? r[s] : l,
                        n.setTripleAt(t[s][0], t[s][1], h[0] + t[s][0], h[1] + t[s][1], o[0] + t[s][0], o[1] + t[s][1], s, !0);
                    return n
                }
                function initiateExpression(elem, data, property) {
                    function noOp(t) {
                        return t
                    }
                    if (!elem.globalData.renderConfig.runExpressions)
                        return noOp;
                    var val = data.x, needsVelocity = /velocity(?![\w\d])/.test(val), _needsRandom = -1 !== val.indexOf("random"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;
                    thisProperty.valueAtTime = thisProperty.getValueAtTime,
                    Object.defineProperty(thisProperty, "value", {
                        get: function() {
                            return thisProperty.v
                        }
                    }),
                    elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate,
                    elem.comp.displayStartTime = 0;
                    var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || !0 !== this.data.hd, wiggle = function(t, e) {
                        var r, i, s = this.pv.length ? this.pv.length : 1, a = createTypedArray("float32", s), n = Math.floor(5 * time);
                        for (r = 0,
                        i = 0; r < n; ) {
                            for (i = 0; i < s; i += 1)
                                a[i] += -e + 2 * e * BMMath.random();
                            r += 1
                        }
                        var o = 5 * time
                          , h = o - Math.floor(o)
                          , l = createTypedArray("float32", s);
                        if (s > 1) {
                            for (i = 0; i < s; i += 1)
                                l[i] = this.pv[i] + a[i] + (-e + 2 * e * BMMath.random()) * h;
                            return l
                        }
                        return this.pv + a[0] + (-e + 2 * e * BMMath.random()) * h
                    }
                    .bind(this);
                    function loopInDuration(t, e) {
                        return loopIn(t, e, !0)
                    }
                    function loopOutDuration(t, e) {
                        return loopOut(t, e, !0)
                    }
                    thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty),
                    loop_in = loopIn),
                    thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty),
                    loop_out = loopOut),
                    thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)),
                    this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)),
                    this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                    var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;
                    function lookAt(t, e) {
                        var r = [e[0] - t[0], e[1] - t[1], e[2] - t[2]]
                          , i = Math.atan2(r[0], Math.sqrt(r[1] * r[1] + r[2] * r[2])) / degToRads;
                        return [-Math.atan2(r[1], r[2]) / degToRads, i, 0]
                    }
                    function easeOut(t, e, r, i, s) {
                        return applyEase(easeOutBez, t, e, r, i, s)
                    }
                    function easeIn(t, e, r, i, s) {
                        return applyEase(easeInBez, t, e, r, i, s)
                    }
                    function ease(t, e, r, i, s) {
                        return applyEase(easeInOutBez, t, e, r, i, s)
                    }
                    function applyEase(t, e, r, i, s, a) {
                        void 0 === s ? (s = r,
                        a = i) : e = (e - r) / (i - r),
                        e > 1 ? e = 1 : e < 0 && (e = 0);
                        var n = t(e);
                        if ($bm_isInstanceOfArray(s)) {
                            var o, h = s.length, l = createTypedArray("float32", h);
                            for (o = 0; o < h; o += 1)
                                l[o] = (a[o] - s[o]) * n + s[o];
                            return l
                        }
                        return (a - s) * n + s
                    }
                    function nearestKey(t) {
                        var e, r, i, s = data.k.length;
                        if (data.k.length && "number" != typeof data.k[0])
                            if (r = -1,
                            (t *= elem.comp.globalData.frameRate) < data.k[0].t)
                                r = 1,
                                i = data.k[0].t;
                            else {
                                for (e = 0; e < s - 1; e += 1) {
                                    if (t === data.k[e].t) {
                                        r = e + 1,
                                        i = data.k[e].t;
                                        break
                                    }
                                    if (t > data.k[e].t && t < data.k[e + 1].t) {
                                        t - data.k[e].t > data.k[e + 1].t - t ? (r = e + 2,
                                        i = data.k[e + 1].t) : (r = e + 1,
                                        i = data.k[e].t);
                                        break
                                    }
                                }
                                -1 === r && (r = e + 1,
                                i = data.k[e].t)
                            }
                        else
                            r = 0,
                            i = 0;
                        var a = {};
                        return a.index = r,
                        a.time = i / elem.comp.globalData.frameRate,
                        a
                    }
                    function key(t) {
                        var e, r, i;
                        if (!data.k.length || "number" == typeof data.k[0])
                            throw new Error("The property has no keyframe at index " + t);
                        t -= 1,
                        e = {
                            time: data.k[t].t / elem.comp.globalData.frameRate,
                            value: []
                        };
                        var s = Object.prototype.hasOwnProperty.call(data.k[t], "s") ? data.k[t].s : data.k[t - 1].e;
                        for (i = s.length,
                        r = 0; r < i; r += 1)
                            e[r] = s[r],
                            e.value[r] = s[r];
                        return e
                    }
                    function framesToTime(t, e) {
                        return e || (e = elem.comp.globalData.frameRate),
                        t / e
                    }
                    function timeToFrames(t, e) {
                        return t || 0 === t || (t = time),
                        e || (e = elem.comp.globalData.frameRate),
                        t * e
                    }
                    function seedRandom(t) {
                        BMMath.seedrandom(randSeed + t)
                    }
                    function sourceRectAtTime() {
                        return elem.sourceRectAtTime()
                    }
                    function substring(t, e) {
                        return "string" == typeof value ? void 0 === e ? value.substring(t) : value.substring(t, e) : ""
                    }
                    function substr(t, e) {
                        return "string" == typeof value ? void 0 === e ? value.substr(t) : value.substr(t, e) : ""
                    }
                    function posterizeTime(t) {
                        time = 0 === t ? 0 : Math.floor(time * t) / t,
                        value = valueAtTime(time)
                    }
                    var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;
                    function executeExpression(t) {
                        return value = t,
                        this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex,
                        textTotal = this.textTotal,
                        selectorValue = this.selectorValue),
                        thisLayer || (text = elem.layerInterface.text,
                        thisLayer = elem.layerInterface,
                        thisComp = elem.comp.compInterface,
                        toWorld = thisLayer.toWorld.bind(thisLayer),
                        fromWorld = thisLayer.fromWorld.bind(thisLayer),
                        fromComp = thisLayer.fromComp.bind(thisLayer),
                        toComp = thisLayer.toComp.bind(thisLayer),
                        mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null,
                        fromCompToSurface = fromComp),
                        transform || (transform = elem.layerInterface("ADBE Transform Group"),
                        $bm_transform = transform,
                        transform && (anchorPoint = transform.anchorPoint)),
                        4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                        effect || (effect = thisLayer(4)),
                        (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                        time = this.comp.renderedFrame / this.comp.globalData.frameRate,
                        _needsRandom && seedRandom(randSeed + time),
                        needsVelocity && (velocity = velocityAtTime(time)),
                        expression_function(),
                        this.frameExpressionId = elem.globalData.frameId,
                        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt)
                    }
                    return executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData],
                    executeExpression
                }
                return ob.initiateExpression = initiateExpression,
                ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath, _lottieGlobal],
                ob.resetFrame = resetFrame,
                ob
            }()
              , Expressions = function() {
                var t = {
                    initExpressions: function(t) {
                        var e = 0
                          , r = [];
                        t.renderer.compInterface = CompExpressionInterface(t.renderer),
                        t.renderer.globalData.projectInterface.registerComposition(t.renderer),
                        t.renderer.globalData.pushExpression = function() {
                            e += 1
                        }
                        ,
                        t.renderer.globalData.popExpression = function() {
                            0 == (e -= 1) && function() {
                                var t, e = r.length;
                                for (t = 0; t < e; t += 1)
                                    r[t].release();
                                r.length = 0
                            }()
                        }
                        ,
                        t.renderer.globalData.registerExpressionProperty = function(t) {
                            -1 === r.indexOf(t) && r.push(t)
                        }
                    }
                };
                return t.resetFrame = ExpressionManager.resetFrame,
                t
            }()
              , MaskManagerInterface = function() {
                function t(t, e) {
                    this._mask = t,
                    this._data = e
                }
                return Object.defineProperty(t.prototype, "maskPath", {
                    get: function() {
                        return this._mask.prop.k && this._mask.prop.getValue(),
                        this._mask.prop
                    }
                }),
                Object.defineProperty(t.prototype, "maskOpacity", {
                    get: function() {
                        return this._mask.op.k && this._mask.op.getValue(),
                        100 * this._mask.op.v
                    }
                }),
                function(e) {
                    var r, i = createSizedArray(e.viewData.length), s = e.viewData.length;
                    for (r = 0; r < s; r += 1)
                        i[r] = new t(e.viewData[r],e.masksProperties[r]);
                    return function(t) {
                        for (r = 0; r < s; ) {
                            if (e.masksProperties[r].nm === t)
                                return i[r];
                            r += 1
                        }
                        return null
                    }
                }
            }()
              , ExpressionPropertyInterface = function() {
                var t = {
                    pv: 0,
                    v: 0,
                    mult: 1
                }
                  , e = {
                    pv: [0, 0, 0],
                    v: [0, 0, 0],
                    mult: 1
                };
                function r(t, e, r) {
                    Object.defineProperty(t, "velocity", {
                        get: function() {
                            return e.getVelocityAtTime(e.comp.currentFrame)
                        }
                    }),
                    t.numKeys = e.keyframes ? e.keyframes.length : 0,
                    t.key = function(i) {
                        if (!t.numKeys)
                            return 0;
                        var s = "";
                        s = "s"in e.keyframes[i - 1] ? e.keyframes[i - 1].s : "e"in e.keyframes[i - 2] ? e.keyframes[i - 2].e : e.keyframes[i - 2].s;
                        var a = "unidimensional" === r ? new Number(s) : Object.assign({}, s);
                        return a.time = e.keyframes[i - 1].t / e.elem.comp.globalData.frameRate,
                        a.value = "unidimensional" === r ? s[0] : s,
                        a
                    }
                    ,
                    t.valueAtTime = e.getValueAtTime,
                    t.speedAtTime = e.getSpeedAtTime,
                    t.velocityAtTime = e.getVelocityAtTime,
                    t.propertyGroup = e.propertyGroup
                }
                function i() {
                    return t
                }
                return function(s) {
                    return s ? "unidimensional" === s.propType ? function(e) {
                        e && "pv"in e || (e = t);
                        var i = 1 / e.mult
                          , s = e.pv * i
                          , a = new Number(s);
                        return a.value = s,
                        r(a, e, "unidimensional"),
                        function() {
                            return e.k && e.getValue(),
                            s = e.v * i,
                            a.value !== s && ((a = new Number(s)).value = s,
                            r(a, e, "unidimensional")),
                            a
                        }
                    }(s) : function(t) {
                        t && "pv"in t || (t = e);
                        var i = 1 / t.mult
                          , s = t.data && t.data.l || t.pv.length
                          , a = createTypedArray("float32", s)
                          , n = createTypedArray("float32", s);
                        return a.value = n,
                        r(a, t, "multidimensional"),
                        function() {
                            t.k && t.getValue();
                            for (var e = 0; e < s; e += 1)
                                n[e] = t.v[e] * i,
                                a[e] = n[e];
                            return a
                        }
                    }(s) : i
                }
            }()
              , TransformExpressionInterface = function(t) {
                function e(t) {
                    switch (t) {
                    case "scale":
                    case "Scale":
                    case "ADBE Scale":
                    case 6:
                        return e.scale;
                    case "rotation":
                    case "Rotation":
                    case "ADBE Rotation":
                    case "ADBE Rotate Z":
                    case 10:
                        return e.rotation;
                    case "ADBE Rotate X":
                        return e.xRotation;
                    case "ADBE Rotate Y":
                        return e.yRotation;
                    case "position":
                    case "Position":
                    case "ADBE Position":
                    case 2:
                        return e.position;
                    case "ADBE Position_0":
                        return e.xPosition;
                    case "ADBE Position_1":
                        return e.yPosition;
                    case "ADBE Position_2":
                        return e.zPosition;
                    case "anchorPoint":
                    case "AnchorPoint":
                    case "Anchor Point":
                    case "ADBE AnchorPoint":
                    case 1:
                        return e.anchorPoint;
                    case "opacity":
                    case "Opacity":
                    case 11:
                        return e.opacity;
                    default:
                        return null
                    }
                }
                var r, i, s, a;
                return Object.defineProperty(e, "rotation", {
                    get: ExpressionPropertyInterface(t.r || t.rz)
                }),
                Object.defineProperty(e, "zRotation", {
                    get: ExpressionPropertyInterface(t.rz || t.r)
                }),
                Object.defineProperty(e, "xRotation", {
                    get: ExpressionPropertyInterface(t.rx)
                }),
                Object.defineProperty(e, "yRotation", {
                    get: ExpressionPropertyInterface(t.ry)
                }),
                Object.defineProperty(e, "scale", {
                    get: ExpressionPropertyInterface(t.s)
                }),
                t.p ? a = ExpressionPropertyInterface(t.p) : (r = ExpressionPropertyInterface(t.px),
                i = ExpressionPropertyInterface(t.py),
                t.pz && (s = ExpressionPropertyInterface(t.pz))),
                Object.defineProperty(e, "position", {
                    get: function() {
                        return t.p ? a() : [r(), i(), s ? s() : 0]
                    }
                }),
                Object.defineProperty(e, "xPosition", {
                    get: ExpressionPropertyInterface(t.px)
                }),
                Object.defineProperty(e, "yPosition", {
                    get: ExpressionPropertyInterface(t.py)
                }),
                Object.defineProperty(e, "zPosition", {
                    get: ExpressionPropertyInterface(t.pz)
                }),
                Object.defineProperty(e, "anchorPoint", {
                    get: ExpressionPropertyInterface(t.a)
                }),
                Object.defineProperty(e, "opacity", {
                    get: ExpressionPropertyInterface(t.o)
                }),
                Object.defineProperty(e, "skew", {
                    get: ExpressionPropertyInterface(t.sk)
                }),
                Object.defineProperty(e, "skewAxis", {
                    get: ExpressionPropertyInterface(t.sa)
                }),
                Object.defineProperty(e, "orientation", {
                    get: ExpressionPropertyInterface(t.or)
                }),
                e
            }
              , LayerExpressionInterface = function() {
                function t(t) {
                    var e = new Matrix;
                    return void 0 !== t ? this._elem.finalTransform.mProp.getValueAtTime(t).clone(e) : this._elem.finalTransform.mProp.applyToMatrix(e),
                    e
                }
                function e(t, e) {
                    var r = this.getMatrix(e);
                    return r.props[12] = 0,
                    r.props[13] = 0,
                    r.props[14] = 0,
                    this.applyPoint(r, t)
                }
                function r(t, e) {
                    var r = this.getMatrix(e);
                    return this.applyPoint(r, t)
                }
                function i(t, e) {
                    var r = this.getMatrix(e);
                    return r.props[12] = 0,
                    r.props[13] = 0,
                    r.props[14] = 0,
                    this.invertPoint(r, t)
                }
                function s(t, e) {
                    var r = this.getMatrix(e);
                    return this.invertPoint(r, t)
                }
                function a(t, e) {
                    if (this._elem.hierarchy && this._elem.hierarchy.length) {
                        var r, i = this._elem.hierarchy.length;
                        for (r = 0; r < i; r += 1)
                            this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t)
                    }
                    return t.applyToPointArray(e[0], e[1], e[2] || 0)
                }
                function n(t, e) {
                    if (this._elem.hierarchy && this._elem.hierarchy.length) {
                        var r, i = this._elem.hierarchy.length;
                        for (r = 0; r < i; r += 1)
                            this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(t)
                    }
                    return t.inversePoint(e)
                }
                function o(t) {
                    var e = new Matrix;
                    if (e.reset(),
                    this._elem.finalTransform.mProp.applyToMatrix(e),
                    this._elem.hierarchy && this._elem.hierarchy.length) {
                        var r, i = this._elem.hierarchy.length;
                        for (r = 0; r < i; r += 1)
                            this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(e);
                        return e.inversePoint(t)
                    }
                    return e.inversePoint(t)
                }
                function h() {
                    return [1, 1, 1, 1]
                }
                return function(l) {
                    var p;
                    function c(t) {
                        switch (t) {
                        case "ADBE Root Vectors Group":
                        case "Contents":
                        case 2:
                            return c.shapeInterface;
                        case 1:
                        case 6:
                        case "Transform":
                        case "transform":
                        case "ADBE Transform Group":
                            return p;
                        case 4:
                        case "ADBE Effect Parade":
                        case "effects":
                        case "Effects":
                            return c.effect;
                        case "ADBE Text Properties":
                            return c.textInterface;
                        default:
                            return null
                        }
                    }
                    c.getMatrix = t,
                    c.invertPoint = n,
                    c.applyPoint = a,
                    c.toWorld = r,
                    c.toWorldVec = e,
                    c.fromWorld = s,
                    c.fromWorldVec = i,
                    c.toComp = r,
                    c.fromComp = o,
                    c.sampleImage = h,
                    c.sourceRectAtTime = l.sourceRectAtTime.bind(l),
                    c._elem = l;
                    var f = getDescriptor(p = TransformExpressionInterface(l.finalTransform.mProp), "anchorPoint");
                    return Object.defineProperties(c, {
                        hasParent: {
                            get: function() {
                                return l.hierarchy.length
                            }
                        },
                        parent: {
                            get: function() {
                                return l.hierarchy[0].layerInterface
                            }
                        },
                        rotation: getDescriptor(p, "rotation"),
                        scale: getDescriptor(p, "scale"),
                        position: getDescriptor(p, "position"),
                        opacity: getDescriptor(p, "opacity"),
                        anchorPoint: f,
                        anchor_point: f,
                        transform: {
                            get: function() {
                                return p
                            }
                        },
                        active: {
                            get: function() {
                                return l.isInRange
                            }
                        }
                    }),
                    c.startTime = l.data.st,
                    c.index = l.data.ind,
                    c.source = l.data.refId,
                    c.height = 0 === l.data.ty ? l.data.h : 100,
                    c.width = 0 === l.data.ty ? l.data.w : 100,
                    c.inPoint = l.data.ip / l.comp.globalData.frameRate,
                    c.outPoint = l.data.op / l.comp.globalData.frameRate,
                    c._name = l.data.nm,
                    c.registerMaskInterface = function(t) {
                        c.mask = new MaskManagerInterface(t,l)
                    }
                    ,
                    c.registerEffectsInterface = function(t) {
                        c.effect = t
                    }
                    ,
                    c
                }
            }()
              , propertyGroupFactory = function(t, e) {
                return function(r) {
                    return (r = void 0 === r ? 1 : r) <= 0 ? t : e(r - 1)
                }
            }
              , PropertyInterface = function(t, e) {
                var r = {
                    _name: t
                };
                return function(t) {
                    return (t = void 0 === t ? 1 : t) <= 0 ? r : e(t - 1)
                }
            }
              , EffectsExpressionInterface = function() {
                var t = {
                    createEffectsInterface: function(t, r) {
                        if (t.effectsManager) {
                            var i, s = [], a = t.data.ef, n = t.effectsManager.effectElements.length;
                            for (i = 0; i < n; i += 1)
                                s.push(e(a[i], t.effectsManager.effectElements[i], r, t));
                            var o = t.data.ef || []
                              , h = function(t) {
                                for (i = 0,
                                n = o.length; i < n; ) {
                                    if (t === o[i].nm || t === o[i].mn || t === o[i].ix)
                                        return s[i];
                                    i += 1
                                }
                                return null
                            };
                            return Object.defineProperty(h, "numProperties", {
                                get: function() {
                                    return o.length
                                }
                            }),
                            h
                        }
                        return null
                    }
                };
                function e(t, i, s, a) {
                    function n(e) {
                        for (var r = t.ef, i = 0, s = r.length; i < s; ) {
                            if (e === r[i].nm || e === r[i].mn || e === r[i].ix)
                                return 5 === r[i].ty ? l[i] : l[i]();
                            i += 1
                        }
                        throw new Error
                    }
                    var o, h = propertyGroupFactory(n, s), l = [], p = t.ef.length;
                    for (o = 0; o < p; o += 1)
                        5 === t.ef[o].ty ? l.push(e(t.ef[o], i.effectElements[o], i.effectElements[o].propertyGroup, a)) : l.push(r(i.effectElements[o], t.ef[o].ty, a, h));
                    return "ADBE Color Control" === t.mn && Object.defineProperty(n, "color", {
                        get: function() {
                            return l[0]()
                        }
                    }),
                    Object.defineProperties(n, {
                        numProperties: {
                            get: function() {
                                return t.np
                            }
                        },
                        _name: {
                            value: t.nm
                        },
                        propertyGroup: {
                            value: h
                        }
                    }),
                    n.enabled = 0 !== t.en,
                    n.active = n.enabled,
                    n
                }
                function r(t, e, r, i) {
                    var s = ExpressionPropertyInterface(t.p);
                    return t.p.setGroupProperty && t.p.setGroupProperty(PropertyInterface("", i)),
                    function() {
                        return 10 === e ? r.comp.compInterface(t.p.v) : s()
                    }
                }
                return t
            }()
              , ShapePathInterface = function(t, e, r) {
                var i = e.sh;
                function s(t) {
                    return "Shape" === t || "shape" === t || "Path" === t || "path" === t || "ADBE Vector Shape" === t || 2 === t ? s.path : null
                }
                var a = propertyGroupFactory(s, r);
                return i.setGroupProperty(PropertyInterface("Path", a)),
                Object.defineProperties(s, {
                    path: {
                        get: function() {
                            return i.k && i.getValue(),
                            i
                        }
                    },
                    shape: {
                        get: function() {
                            return i.k && i.getValue(),
                            i
                        }
                    },
                    _name: {
                        value: t.nm
                    },
                    ix: {
                        value: t.ix
                    },
                    propertyIndex: {
                        value: t.ix
                    },
                    mn: {
                        value: t.mn
                    },
                    propertyGroup: {
                        value: r
                    }
                }),
                s
            }
              , ShapeExpressionInterface = function() {
                function t(t, n, f) {
                    var u, d = [], m = t ? t.length : 0;
                    for (u = 0; u < m; u += 1)
                        "gr" === t[u].ty ? d.push(e(t[u], n[u], f)) : "fl" === t[u].ty ? d.push(r(t[u], n[u], f)) : "st" === t[u].ty ? d.push(s(t[u], n[u], f)) : "tm" === t[u].ty ? d.push(a(t[u], n[u], f)) : "tr" === t[u].ty || ("el" === t[u].ty ? d.push(o(t[u], n[u], f)) : "sr" === t[u].ty ? d.push(h(t[u], n[u], f)) : "sh" === t[u].ty ? d.push(ShapePathInterface(t[u], n[u], f)) : "rc" === t[u].ty ? d.push(l(t[u], n[u], f)) : "rd" === t[u].ty ? d.push(p(t[u], n[u], f)) : "rp" === t[u].ty ? d.push(c(t[u], n[u], f)) : "gf" === t[u].ty ? d.push(i(t[u], n[u], f)) : d.push((t[u],
                        n[u],
                        function() {
                            return null
                        }
                        )));
                    return d
                }
                function e(e, r, i) {
                    var s = function(t) {
                        switch (t) {
                        case "ADBE Vectors Group":
                        case "Contents":
                        case 2:
                            return s.content;
                        default:
                            return s.transform
                        }
                    };
                    s.propertyGroup = propertyGroupFactory(s, i);
                    var a = function(e, r, i) {
                        var s, a = function(t) {
                            for (var e = 0, r = s.length; e < r; ) {
                                if (s[e]._name === t || s[e].mn === t || s[e].propertyIndex === t || s[e].ix === t || s[e].ind === t)
                                    return s[e];
                                e += 1
                            }
                            return "number" == typeof t ? s[t - 1] : null
                        };
                        a.propertyGroup = propertyGroupFactory(a, i),
                        s = t(e.it, r.it, a.propertyGroup),
                        a.numProperties = s.length;
                        var o = n(e.it[e.it.length - 1], r.it[r.it.length - 1], a.propertyGroup);
                        return a.transform = o,
                        a.propertyIndex = e.cix,
                        a._name = e.nm,
                        a
                    }(e, r, s.propertyGroup)
                      , o = n(e.it[e.it.length - 1], r.it[r.it.length - 1], s.propertyGroup);
                    return s.content = a,
                    s.transform = o,
                    Object.defineProperty(s, "_name", {
                        get: function() {
                            return e.nm
                        }
                    }),
                    s.numProperties = e.np,
                    s.propertyIndex = e.ix,
                    s.nm = e.nm,
                    s.mn = e.mn,
                    s
                }
                function r(t, e, r) {
                    function i(t) {
                        return "Color" === t || "color" === t ? i.color : "Opacity" === t || "opacity" === t ? i.opacity : null
                    }
                    return Object.defineProperties(i, {
                        color: {
                            get: ExpressionPropertyInterface(e.c)
                        },
                        opacity: {
                            get: ExpressionPropertyInterface(e.o)
                        },
                        _name: {
                            value: t.nm
                        },
                        mn: {
                            value: t.mn
                        }
                    }),
                    e.c.setGroupProperty(PropertyInterface("Color", r)),
                    e.o.setGroupProperty(PropertyInterface("Opacity", r)),
                    i
                }
                function i(t, e, r) {
                    function i(t) {
                        return "Start Point" === t || "start point" === t ? i.startPoint : "End Point" === t || "end point" === t ? i.endPoint : "Opacity" === t || "opacity" === t ? i.opacity : null
                    }
                    return Object.defineProperties(i, {
                        startPoint: {
                            get: ExpressionPropertyInterface(e.s)
                        },
                        endPoint: {
                            get: ExpressionPropertyInterface(e.e)
                        },
                        opacity: {
                            get: ExpressionPropertyInterface(e.o)
                        },
                        type: {
                            get: function() {
                                return "a"
                            }
                        },
                        _name: {
                            value: t.nm
                        },
                        mn: {
                            value: t.mn
                        }
                    }),
                    e.s.setGroupProperty(PropertyInterface("Start Point", r)),
                    e.e.setGroupProperty(PropertyInterface("End Point", r)),
                    e.o.setGroupProperty(PropertyInterface("Opacity", r)),
                    i
                }
                function s(t, e, r) {
                    var i, s = propertyGroupFactory(l, r), a = propertyGroupFactory(h, s);
                    function n(r) {
                        Object.defineProperty(h, t.d[r].nm, {
                            get: ExpressionPropertyInterface(e.d.dataProps[r].p)
                        })
                    }
                    var o = t.d ? t.d.length : 0
                      , h = {};
                    for (i = 0; i < o; i += 1)
                        n(i),
                        e.d.dataProps[i].p.setGroupProperty(a);
                    function l(t) {
                        return "Color" === t || "color" === t ? l.color : "Opacity" === t || "opacity" === t ? l.opacity : "Stroke Width" === t || "stroke width" === t ? l.strokeWidth : null
                    }
                    return Object.defineProperties(l, {
                        color: {
                            get: ExpressionPropertyInterface(e.c)
                        },
                        opacity: {
                            get: ExpressionPropertyInterface(e.o)
                        },
                        strokeWidth: {
                            get: ExpressionPropertyInterface(e.w)
                        },
                        dash: {
                            get: function() {
                                return h
                            }
                        },
                        _name: {
                            value: t.nm
                        },
                        mn: {
                            value: t.mn
                        }
                    }),
                    e.c.setGroupProperty(PropertyInterface("Color", s)),
                    e.o.setGroupProperty(PropertyInterface("Opacity", s)),
                    e.w.setGroupProperty(PropertyInterface("Stroke Width", s)),
                    l
                }
                function a(t, e, r) {
                    function i(e) {
                        return e === t.e.ix || "End" === e || "end" === e ? i.end : e === t.s.ix ? i.start : e === t.o.ix ? i.offset : null
                    }
                    var s = propertyGroupFactory(i, r);
                    return i.propertyIndex = t.ix,
                    e.s.setGroupProperty(PropertyInterface("Start", s)),
                    e.e.setGroupProperty(PropertyInterface("End", s)),
                    e.o.setGroupProperty(PropertyInterface("Offset", s)),
                    i.propertyIndex = t.ix,
                    i.propertyGroup = r,
                    Object.defineProperties(i, {
                        start: {
                            get: ExpressionPropertyInterface(e.s)
                        },
                        end: {
                            get: ExpressionPropertyInterface(e.e)
                        },
                        offset: {
                            get: ExpressionPropertyInterface(e.o)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.mn = t.mn,
                    i
                }
                function n(t, e, r) {
                    function i(e) {
                        return t.a.ix === e || "Anchor Point" === e ? i.anchorPoint : t.o.ix === e || "Opacity" === e ? i.opacity : t.p.ix === e || "Position" === e ? i.position : t.r.ix === e || "Rotation" === e || "ADBE Vector Rotation" === e ? i.rotation : t.s.ix === e || "Scale" === e ? i.scale : t.sk && t.sk.ix === e || "Skew" === e ? i.skew : t.sa && t.sa.ix === e || "Skew Axis" === e ? i.skewAxis : null
                    }
                    var s = propertyGroupFactory(i, r);
                    return e.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", s)),
                    e.transform.mProps.p.setGroupProperty(PropertyInterface("Position", s)),
                    e.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", s)),
                    e.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", s)),
                    e.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", s)),
                    e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", s)),
                    e.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", s))),
                    e.transform.op.setGroupProperty(PropertyInterface("Opacity", s)),
                    Object.defineProperties(i, {
                        opacity: {
                            get: ExpressionPropertyInterface(e.transform.mProps.o)
                        },
                        position: {
                            get: ExpressionPropertyInterface(e.transform.mProps.p)
                        },
                        anchorPoint: {
                            get: ExpressionPropertyInterface(e.transform.mProps.a)
                        },
                        scale: {
                            get: ExpressionPropertyInterface(e.transform.mProps.s)
                        },
                        rotation: {
                            get: ExpressionPropertyInterface(e.transform.mProps.r)
                        },
                        skew: {
                            get: ExpressionPropertyInterface(e.transform.mProps.sk)
                        },
                        skewAxis: {
                            get: ExpressionPropertyInterface(e.transform.mProps.sa)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.ty = "tr",
                    i.mn = t.mn,
                    i.propertyGroup = r,
                    i
                }
                function o(t, e, r) {
                    function i(e) {
                        return t.p.ix === e ? i.position : t.s.ix === e ? i.size : null
                    }
                    var s = propertyGroupFactory(i, r);
                    i.propertyIndex = t.ix;
                    var a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                    return a.s.setGroupProperty(PropertyInterface("Size", s)),
                    a.p.setGroupProperty(PropertyInterface("Position", s)),
                    Object.defineProperties(i, {
                        size: {
                            get: ExpressionPropertyInterface(a.s)
                        },
                        position: {
                            get: ExpressionPropertyInterface(a.p)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.mn = t.mn,
                    i
                }
                function h(t, e, r) {
                    function i(e) {
                        return t.p.ix === e ? i.position : t.r.ix === e ? i.rotation : t.pt.ix === e ? i.points : t.or.ix === e || "ADBE Vector Star Outer Radius" === e ? i.outerRadius : t.os.ix === e ? i.outerRoundness : !t.ir || t.ir.ix !== e && "ADBE Vector Star Inner Radius" !== e ? t.is && t.is.ix === e ? i.innerRoundness : null : i.innerRadius
                    }
                    var s = propertyGroupFactory(i, r)
                      , a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                    return i.propertyIndex = t.ix,
                    a.or.setGroupProperty(PropertyInterface("Outer Radius", s)),
                    a.os.setGroupProperty(PropertyInterface("Outer Roundness", s)),
                    a.pt.setGroupProperty(PropertyInterface("Points", s)),
                    a.p.setGroupProperty(PropertyInterface("Position", s)),
                    a.r.setGroupProperty(PropertyInterface("Rotation", s)),
                    t.ir && (a.ir.setGroupProperty(PropertyInterface("Inner Radius", s)),
                    a.is.setGroupProperty(PropertyInterface("Inner Roundness", s))),
                    Object.defineProperties(i, {
                        position: {
                            get: ExpressionPropertyInterface(a.p)
                        },
                        rotation: {
                            get: ExpressionPropertyInterface(a.r)
                        },
                        points: {
                            get: ExpressionPropertyInterface(a.pt)
                        },
                        outerRadius: {
                            get: ExpressionPropertyInterface(a.or)
                        },
                        outerRoundness: {
                            get: ExpressionPropertyInterface(a.os)
                        },
                        innerRadius: {
                            get: ExpressionPropertyInterface(a.ir)
                        },
                        innerRoundness: {
                            get: ExpressionPropertyInterface(a.is)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.mn = t.mn,
                    i
                }
                function l(t, e, r) {
                    function i(e) {
                        return t.p.ix === e ? i.position : t.r.ix === e ? i.roundness : t.s.ix === e || "Size" === e || "ADBE Vector Rect Size" === e ? i.size : null
                    }
                    var s = propertyGroupFactory(i, r)
                      , a = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                    return i.propertyIndex = t.ix,
                    a.p.setGroupProperty(PropertyInterface("Position", s)),
                    a.s.setGroupProperty(PropertyInterface("Size", s)),
                    a.r.setGroupProperty(PropertyInterface("Rotation", s)),
                    Object.defineProperties(i, {
                        position: {
                            get: ExpressionPropertyInterface(a.p)
                        },
                        roundness: {
                            get: ExpressionPropertyInterface(a.r)
                        },
                        size: {
                            get: ExpressionPropertyInterface(a.s)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.mn = t.mn,
                    i
                }
                function p(t, e, r) {
                    function i(e) {
                        return t.r.ix === e || "Round Corners 1" === e ? i.radius : null
                    }
                    var s = propertyGroupFactory(i, r)
                      , a = e;
                    return i.propertyIndex = t.ix,
                    a.rd.setGroupProperty(PropertyInterface("Radius", s)),
                    Object.defineProperties(i, {
                        radius: {
                            get: ExpressionPropertyInterface(a.rd)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.mn = t.mn,
                    i
                }
                function c(t, e, r) {
                    function i(e) {
                        return t.c.ix === e || "Copies" === e ? i.copies : t.o.ix === e || "Offset" === e ? i.offset : null
                    }
                    var s = propertyGroupFactory(i, r)
                      , a = e;
                    return i.propertyIndex = t.ix,
                    a.c.setGroupProperty(PropertyInterface("Copies", s)),
                    a.o.setGroupProperty(PropertyInterface("Offset", s)),
                    Object.defineProperties(i, {
                        copies: {
                            get: ExpressionPropertyInterface(a.c)
                        },
                        offset: {
                            get: ExpressionPropertyInterface(a.o)
                        },
                        _name: {
                            value: t.nm
                        }
                    }),
                    i.mn = t.mn,
                    i
                }
                return function(e, r, i) {
                    var s;
                    function a(t) {
                        if ("number" == typeof t)
                            return 0 === (t = void 0 === t ? 1 : t) ? i : s[t - 1];
                        for (var e = 0, r = s.length; e < r; ) {
                            if (s[e]._name === t)
                                return s[e];
                            e += 1
                        }
                        return null
                    }
                    return a.propertyGroup = propertyGroupFactory(a, (function() {
                        return i
                    }
                    )),
                    s = t(e, r, a.propertyGroup),
                    a.numProperties = s.length,
                    a._name = "Contents",
                    a
                }
            }()
              , TextExpressionInterface = function(t) {
                var e;
                function r(t) {
                    return "ADBE Text Document" === t ? r.sourceText : null
                }
                return Object.defineProperty(r, "sourceText", {
                    get: function() {
                        t.textProperty.getValue();
                        var r = t.textProperty.currentData.t;
                        return e && r === e.value || ((e = new String(r)).value = r || new String(r),
                        Object.defineProperty(e, "style", {
                            get: function() {
                                return {
                                    fillColor: t.textProperty.currentData.fc
                                }
                            }
                        })),
                        e
                    }
                }),
                r
            };
            function _typeof(t) {
                return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                    return typeof t
                }
                : function(t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }
                ,
                _typeof(t)
            }
            var FootageInterface = (dataInterfaceFactory = function(t) {
                function e(t) {
                    return "Outline" === t ? e.outlineInterface() : null
                }
                return e._name = "Outline",
                e.outlineInterface = function(t) {
                    var e = ""
                      , r = t.getFootageData();
                    function i(t) {
                        if (r[t])
                            return e = t,
                            "object" === _typeof(r = r[t]) ? i : r;
                        var s = t.indexOf(e);
                        if (-1 !== s) {
                            var a = parseInt(t.substr(s + e.length), 10);
                            return "object" === _typeof(r = r[a]) ? i : r
                        }
                        return ""
                    }
                    return function() {
                        return e = "",
                        r = t.getFootageData(),
                        i
                    }
                }(t),
                e
            }
            ,
            function(t) {
                function e(t) {
                    return "Data" === t ? e.dataInterface : null
                }
                return e._name = "Data",
                e.dataInterface = dataInterfaceFactory(t),
                e
            }
            ), dataInterfaceFactory, interfaces = {
                layer: LayerExpressionInterface,
                effects: EffectsExpressionInterface,
                comp: CompExpressionInterface,
                shape: ShapeExpressionInterface,
                text: TextExpressionInterface,
                footage: FootageInterface
            };
            function getInterface(t) {
                return interfaces[t] || null
            }
            var expressionHelpers = {
                searchExpressions: function(t, e, r) {
                    e.x && (r.k = !0,
                    r.x = !0,
                    r.initiateExpression = ExpressionManager.initiateExpression,
                    r.effectsSequence.push(r.initiateExpression(t, e, r).bind(r)))
                },
                getSpeedAtTime: function(t) {
                    var e = this.getValueAtTime(t)
                      , r = this.getValueAtTime(t + -.01)
                      , i = 0;
                    if (e.length) {
                        var s;
                        for (s = 0; s < e.length; s += 1)
                            i += Math.pow(r[s] - e[s], 2);
                        i = 100 * Math.sqrt(i)
                    } else
                        i = 0;
                    return i
                },
                getVelocityAtTime: function(t) {
                    if (void 0 !== this.vel)
                        return this.vel;
                    var e, r, i = -.001, s = this.getValueAtTime(t), a = this.getValueAtTime(t + i);
                    if (s.length)
                        for (e = createTypedArray("float32", s.length),
                        r = 0; r < s.length; r += 1)
                            e[r] = (a[r] - s[r]) / i;
                    else
                        e = (a - s) / i;
                    return e
                },
                getValueAtTime: function(t) {
                    return t *= this.elem.globalData.frameRate,
                    (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0,
                    this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime),
                    this._cachingAtTime.lastFrame = t),
                    this._cachingAtTime.value
                },
                getStaticValueAtTime: function() {
                    return this.pv
                },
                setGroupProperty: function(t) {
                    this.propertyGroup = t
                }
            };
            function addPropertyDecorator() {
                function t(t, e, r) {
                    if (!this.k || !this.keyframes)
                        return this.pv;
                    t = t ? t.toLowerCase() : "";
                    var i, s, a, n, o, h = this.comp.renderedFrame, l = this.keyframes, p = l[l.length - 1].t;
                    if (h <= p)
                        return this.pv;
                    if (r ? s = p - (i = e ? Math.abs(p - this.elem.comp.globalData.frameRate * e) : Math.max(0, p - this.elem.data.ip)) : ((!e || e > l.length - 1) && (e = l.length - 1),
                    i = p - (s = l[l.length - 1 - e].t)),
                    "pingpong" === t) {
                        if (Math.floor((h - s) / i) % 2 != 0)
                            return this.getValueAtTime((i - (h - s) % i + s) / this.comp.globalData.frameRate, 0)
                    } else {
                        if ("offset" === t) {
                            var c = this.getValueAtTime(s / this.comp.globalData.frameRate, 0)
                              , f = this.getValueAtTime(p / this.comp.globalData.frameRate, 0)
                              , u = this.getValueAtTime(((h - s) % i + s) / this.comp.globalData.frameRate, 0)
                              , d = Math.floor((h - s) / i);
                            if (this.pv.length) {
                                for (n = (o = new Array(c.length)).length,
                                a = 0; a < n; a += 1)
                                    o[a] = (f[a] - c[a]) * d + u[a];
                                return o
                            }
                            return (f - c) * d + u
                        }
                        if ("continue" === t) {
                            var m = this.getValueAtTime(p / this.comp.globalData.frameRate, 0)
                              , y = this.getValueAtTime((p - .001) / this.comp.globalData.frameRate, 0);
                            if (this.pv.length) {
                                for (n = (o = new Array(m.length)).length,
                                a = 0; a < n; a += 1)
                                    o[a] = m[a] + (m[a] - y[a]) * ((h - p) / this.comp.globalData.frameRate) / 5e-4;
                                return o
                            }
                            return m + (h - p) / .001 * (m - y)
                        }
                    }
                    return this.getValueAtTime(((h - s) % i + s) / this.comp.globalData.frameRate, 0)
                }
                function e(t, e, r) {
                    if (!this.k)
                        return this.pv;
                    t = t ? t.toLowerCase() : "";
                    var i, s, a, n, o, h = this.comp.renderedFrame, l = this.keyframes, p = l[0].t;
                    if (h >= p)
                        return this.pv;
                    if (r ? s = p + (i = e ? Math.abs(this.elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - p)) : ((!e || e > l.length - 1) && (e = l.length - 1),
                    i = (s = l[e].t) - p),
                    "pingpong" === t) {
                        if (Math.floor((p - h) / i) % 2 == 0)
                            return this.getValueAtTime(((p - h) % i + p) / this.comp.globalData.frameRate, 0)
                    } else {
                        if ("offset" === t) {
                            var c = this.getValueAtTime(p / this.comp.globalData.frameRate, 0)
                              , f = this.getValueAtTime(s / this.comp.globalData.frameRate, 0)
                              , u = this.getValueAtTime((i - (p - h) % i + p) / this.comp.globalData.frameRate, 0)
                              , d = Math.floor((p - h) / i) + 1;
                            if (this.pv.length) {
                                for (n = (o = new Array(c.length)).length,
                                a = 0; a < n; a += 1)
                                    o[a] = u[a] - (f[a] - c[a]) * d;
                                return o
                            }
                            return u - (f - c) * d
                        }
                        if ("continue" === t) {
                            var m = this.getValueAtTime(p / this.comp.globalData.frameRate, 0)
                              , y = this.getValueAtTime((p + .001) / this.comp.globalData.frameRate, 0);
                            if (this.pv.length) {
                                for (n = (o = new Array(m.length)).length,
                                a = 0; a < n; a += 1)
                                    o[a] = m[a] + (m[a] - y[a]) * (p - h) / .001;
                                return o
                            }
                            return m + (m - y) * (p - h) / .001
                        }
                    }
                    return this.getValueAtTime((i - ((p - h) % i + p)) / this.comp.globalData.frameRate, 0)
                }
                function r(t, e) {
                    if (!this.k)
                        return this.pv;
                    if (t = .5 * (t || .4),
                    (e = Math.floor(e || 5)) <= 1)
                        return this.pv;
                    var r, i, s = this.comp.renderedFrame / this.comp.globalData.frameRate, a = s - t, n = e > 1 ? (s + t - a) / (e - 1) : 1, o = 0, h = 0;
                    for (r = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o < e; ) {
                        if (i = this.getValueAtTime(a + o * n),
                        this.pv.length)
                            for (h = 0; h < this.pv.length; h += 1)
                                r[h] += i[h];
                        else
                            r += i;
                        o += 1
                    }
                    if (this.pv.length)
                        for (h = 0; h < this.pv.length; h += 1)
                            r[h] /= e;
                    else
                        r /= e;
                    return r
                }
                function i(t) {
                    this._transformCachingAtTime || (this._transformCachingAtTime = {
                        v: new Matrix
                    });
                    var e = this._transformCachingAtTime.v;
                    if (e.cloneFromProps(this.pre.props),
                    this.appliedTransformations < 1) {
                        var r = this.a.getValueAtTime(t);
                        e.translate(-r[0] * this.a.mult, -r[1] * this.a.mult, r[2] * this.a.mult)
                    }
                    if (this.appliedTransformations < 2) {
                        var i = this.s.getValueAtTime(t);
                        e.scale(i[0] * this.s.mult, i[1] * this.s.mult, i[2] * this.s.mult)
                    }
                    if (this.sk && this.appliedTransformations < 3) {
                        var s = this.sk.getValueAtTime(t)
                          , a = this.sa.getValueAtTime(t);
                        e.skewFromAxis(-s * this.sk.mult, a * this.sa.mult)
                    }
                    if (this.r && this.appliedTransformations < 4) {
                        var n = this.r.getValueAtTime(t);
                        e.rotate(-n * this.r.mult)
                    } else if (!this.r && this.appliedTransformations < 4) {
                        var o = this.rz.getValueAtTime(t)
                          , h = this.ry.getValueAtTime(t)
                          , l = this.rx.getValueAtTime(t)
                          , p = this.or.getValueAtTime(t);
                        e.rotateZ(-o * this.rz.mult).rotateY(h * this.ry.mult).rotateX(l * this.rx.mult).rotateZ(-p[2] * this.or.mult).rotateY(p[1] * this.or.mult).rotateX(p[0] * this.or.mult)
                    }
                    if (this.data.p && this.data.p.s) {
                        var c = this.px.getValueAtTime(t)
                          , f = this.py.getValueAtTime(t);
                        if (this.data.p.z) {
                            var u = this.pz.getValueAtTime(t);
                            e.translate(c * this.px.mult, f * this.py.mult, -u * this.pz.mult)
                        } else
                            e.translate(c * this.px.mult, f * this.py.mult, 0)
                    } else {
                        var d = this.p.getValueAtTime(t);
                        e.translate(d[0] * this.p.mult, d[1] * this.p.mult, -d[2] * this.p.mult)
                    }
                    return e
                }
                function s() {
                    return this.v.clone(new Matrix)
                }
                var a = TransformPropertyFactory.getTransformProperty;
                TransformPropertyFactory.getTransformProperty = function(t, e, r) {
                    var n = a(t, e, r);
                    return n.dynamicProperties.length ? n.getValueAtTime = i.bind(n) : n.getValueAtTime = s.bind(n),
                    n.setGroupProperty = expressionHelpers.setGroupProperty,
                    n
                }
                ;
                var n = PropertyFactory.getProp;
                PropertyFactory.getProp = function(i, s, a, o, h) {
                    var l = n(i, s, a, o, h);
                    l.kf ? l.getValueAtTime = expressionHelpers.getValueAtTime.bind(l) : l.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(l),
                    l.setGroupProperty = expressionHelpers.setGroupProperty,
                    l.loopOut = t,
                    l.loopIn = e,
                    l.smooth = r,
                    l.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(l),
                    l.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(l),
                    l.numKeys = 1 === s.a ? s.k.length : 0,
                    l.propertyIndex = s.ix;
                    var p = 0;
                    return 0 !== a && (p = createTypedArray("float32", 1 === s.a ? s.k[0].s.length : s.k.length)),
                    l._cachingAtTime = {
                        lastFrame: initialDefaultFrame,
                        lastIndex: 0,
                        value: p
                    },
                    expressionHelpers.searchExpressions(i, s, l),
                    l.k && h.addDynamicProperty(l),
                    l
                }
                ;
                var o = ShapePropertyFactory.getConstructorFunction()
                  , h = ShapePropertyFactory.getKeyframedConstructorFunction();
                function l() {}
                l.prototype = {
                    vertices: function(t, e) {
                        this.k && this.getValue();
                        var r, i = this.v;
                        void 0 !== e && (i = this.getValueAtTime(e, 0));
                        var s = i._length
                          , a = i[t]
                          , n = i.v
                          , o = createSizedArray(s);
                        for (r = 0; r < s; r += 1)
                            o[r] = "i" === t || "o" === t ? [a[r][0] - n[r][0], a[r][1] - n[r][1]] : [a[r][0], a[r][1]];
                        return o
                    },
                    points: function(t) {
                        return this.vertices("v", t)
                    },
                    inTangents: function(t) {
                        return this.vertices("i", t)
                    },
                    outTangents: function(t) {
                        return this.vertices("o", t)
                    },
                    isClosed: function() {
                        return this.v.c
                    },
                    pointOnPath: function(t, e) {
                        var r = this.v;
                        void 0 !== e && (r = this.getValueAtTime(e, 0)),
                        this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(r));
                        for (var i, s = this._segmentsLength, a = s.lengths, n = s.totalLength * t, o = 0, h = a.length, l = 0; o < h; ) {
                            if (l + a[o].addedLength > n) {
                                var p = o
                                  , c = r.c && o === h - 1 ? 0 : o + 1
                                  , f = (n - l) / a[o].addedLength;
                                i = bez.getPointInSegment(r.v[p], r.v[c], r.o[p], r.i[c], f, a[o]);
                                break
                            }
                            l += a[o].addedLength,
                            o += 1
                        }
                        return i || (i = r.c ? [r.v[0][0], r.v[0][1]] : [r.v[r._length - 1][0], r.v[r._length - 1][1]]),
                        i
                    },
                    vectorOnPath: function(t, e, r) {
                        1 == t ? t = this.v.c : 0 == t && (t = .999);
                        var i = this.pointOnPath(t, e)
                          , s = this.pointOnPath(t + .001, e)
                          , a = s[0] - i[0]
                          , n = s[1] - i[1]
                          , o = Math.sqrt(Math.pow(a, 2) + Math.pow(n, 2));
                        return 0 === o ? [0, 0] : "tangent" === r ? [a / o, n / o] : [-n / o, a / o]
                    },
                    tangentOnPath: function(t, e) {
                        return this.vectorOnPath(t, e, "tangent")
                    },
                    normalOnPath: function(t, e) {
                        return this.vectorOnPath(t, e, "normal")
                    },
                    setGroupProperty: expressionHelpers.setGroupProperty,
                    getValueAtTime: expressionHelpers.getStaticValueAtTime
                },
                extendPrototype([l], o),
                extendPrototype([l], h),
                h.prototype.getValueAtTime = function(t) {
                    return this._cachingAtTime || (this._cachingAtTime = {
                        shapeValue: shapePool.clone(this.pv),
                        lastIndex: 0,
                        lastTime: initialDefaultFrame
                    }),
                    t *= this.elem.globalData.frameRate,
                    (t -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0,
                    this._cachingAtTime.lastTime = t,
                    this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)),
                    this._cachingAtTime.shapeValue
                }
                ,
                h.prototype.initiateExpression = ExpressionManager.initiateExpression;
                var p = ShapePropertyFactory.getShapeProp;
                ShapePropertyFactory.getShapeProp = function(t, e, r, i, s) {
                    var a = p(t, e, r, i, s);
                    return a.propertyIndex = e.ix,
                    a.lock = !1,
                    3 === r ? expressionHelpers.searchExpressions(t, e.pt, a) : 4 === r && expressionHelpers.searchExpressions(t, e.ks, a),
                    a.k && t.addDynamicProperty(a),
                    a
                }
            }
            function initialize$1() {
                addPropertyDecorator()
            }
            function addDecorator() {
                TextProperty.prototype.getExpressionValue = function(t, e) {
                    var r = this.calculateExpression(e);
                    if (t.t !== r) {
                        var i = {};
                        return this.copyData(i, t),
                        i.t = r.toString(),
                        i.__complete = !1,
                        i
                    }
                    return t
                }
                ,
                TextProperty.prototype.searchProperty = function() {
                    var t = this.searchKeyframes()
                      , e = this.searchExpressions();
                    return this.kf = t || e,
                    this.kf
                }
                ,
                TextProperty.prototype.searchExpressions = function() {
                    return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this),
                    this.addEffect(this.getExpressionValue.bind(this)),
                    !0) : null
                }
            }
            function initialize() {
                addDecorator()
            }
            function SVGComposableEffect() {}
            SVGComposableEffect.prototype = {
                createMergeNode: function(t, e) {
                    var r, i, s = createNS("feMerge");
                    for (s.setAttribute("result", t),
                    i = 0; i < e.length; i += 1)
                        (r = createNS("feMergeNode")).setAttribute("in", e[i]),
                        s.appendChild(r),
                        s.appendChild(r);
                    return s
                }
            };
            var linearFilterValue = "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
            function SVGTintFilter(t, e, r, i, s) {
                this.filterManager = e;
                var a = createNS("feColorMatrix");
                a.setAttribute("type", "matrix"),
                a.setAttribute("color-interpolation-filters", "linearRGB"),
                a.setAttribute("values", linearFilterValue + " 1 0"),
                this.linearFilter = a,
                a.setAttribute("result", i + "_tint_1"),
                t.appendChild(a),
                (a = createNS("feColorMatrix")).setAttribute("type", "matrix"),
                a.setAttribute("color-interpolation-filters", "sRGB"),
                a.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                a.setAttribute("result", i + "_tint_2"),
                t.appendChild(a),
                this.matrixFilter = a;
                var n = this.createMergeNode(i, [s, i + "_tint_1", i + "_tint_2"]);
                t.appendChild(n)
            }
            function SVGFillFilter(t, e, r, i) {
                this.filterManager = e;
                var s = createNS("feColorMatrix");
                s.setAttribute("type", "matrix"),
                s.setAttribute("color-interpolation-filters", "sRGB"),
                s.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
                s.setAttribute("result", i),
                t.appendChild(s),
                this.matrixFilter = s
            }
            function SVGStrokeEffect(t, e, r) {
                this.initialized = !1,
                this.filterManager = e,
                this.elem = r,
                this.paths = []
            }
            function SVGTritoneFilter(t, e, r, i) {
                this.filterManager = e;
                var s = createNS("feColorMatrix");
                s.setAttribute("type", "matrix"),
                s.setAttribute("color-interpolation-filters", "linearRGB"),
                s.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
                t.appendChild(s);
                var a = createNS("feComponentTransfer");
                a.setAttribute("color-interpolation-filters", "sRGB"),
                a.setAttribute("result", i),
                this.matrixFilter = a;
                var n = createNS("feFuncR");
                n.setAttribute("type", "table"),
                a.appendChild(n),
                this.feFuncR = n;
                var o = createNS("feFuncG");
                o.setAttribute("type", "table"),
                a.appendChild(o),
                this.feFuncG = o;
                var h = createNS("feFuncB");
                h.setAttribute("type", "table"),
                a.appendChild(h),
                this.feFuncB = h,
                t.appendChild(a)
            }
            function SVGProLevelsFilter(t, e, r, i) {
                this.filterManager = e;
                var s = this.filterManager.effectElements
                  , a = createNS("feComponentTransfer");
                (s[10].p.k || 0 !== s[10].p.v || s[11].p.k || 1 !== s[11].p.v || s[12].p.k || 1 !== s[12].p.v || s[13].p.k || 0 !== s[13].p.v || s[14].p.k || 1 !== s[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", a)),
                (s[17].p.k || 0 !== s[17].p.v || s[18].p.k || 1 !== s[18].p.v || s[19].p.k || 1 !== s[19].p.v || s[20].p.k || 0 !== s[20].p.v || s[21].p.k || 1 !== s[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", a)),
                (s[24].p.k || 0 !== s[24].p.v || s[25].p.k || 1 !== s[25].p.v || s[26].p.k || 1 !== s[26].p.v || s[27].p.k || 0 !== s[27].p.v || s[28].p.k || 1 !== s[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", a)),
                (s[31].p.k || 0 !== s[31].p.v || s[32].p.k || 1 !== s[32].p.v || s[33].p.k || 1 !== s[33].p.v || s[34].p.k || 0 !== s[34].p.v || s[35].p.k || 1 !== s[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", a)),
                (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (a.setAttribute("color-interpolation-filters", "sRGB"),
                t.appendChild(a)),
                (s[3].p.k || 0 !== s[3].p.v || s[4].p.k || 1 !== s[4].p.v || s[5].p.k || 1 !== s[5].p.v || s[6].p.k || 0 !== s[6].p.v || s[7].p.k || 1 !== s[7].p.v) && ((a = createNS("feComponentTransfer")).setAttribute("color-interpolation-filters", "sRGB"),
                a.setAttribute("result", i),
                t.appendChild(a),
                this.feFuncRComposed = this.createFeFunc("feFuncR", a),
                this.feFuncGComposed = this.createFeFunc("feFuncG", a),
                this.feFuncBComposed = this.createFeFunc("feFuncB", a))
            }
            function SVGDropShadowEffect(t, e, r, i, s) {
                var a = e.container.globalData.renderConfig.filterSize
                  , n = e.data.fs || a;
                t.setAttribute("x", n.x || a.x),
                t.setAttribute("y", n.y || a.y),
                t.setAttribute("width", n.width || a.width),
                t.setAttribute("height", n.height || a.height),
                this.filterManager = e;
                var o = createNS("feGaussianBlur");
                o.setAttribute("in", "SourceAlpha"),
                o.setAttribute("result", i + "_drop_shadow_1"),
                o.setAttribute("stdDeviation", "0"),
                this.feGaussianBlur = o,
                t.appendChild(o);
                var h = createNS("feOffset");
                h.setAttribute("dx", "25"),
                h.setAttribute("dy", "0"),
                h.setAttribute("in", i + "_drop_shadow_1"),
                h.setAttribute("result", i + "_drop_shadow_2"),
                this.feOffset = h,
                t.appendChild(h);
                var l = createNS("feFlood");
                l.setAttribute("flood-color", "#00ff00"),
                l.setAttribute("flood-opacity", "1"),
                l.setAttribute("result", i + "_drop_shadow_3"),
                this.feFlood = l,
                t.appendChild(l);
                var p = createNS("feComposite");
                p.setAttribute("in", i + "_drop_shadow_3"),
                p.setAttribute("in2", i + "_drop_shadow_2"),
                p.setAttribute("operator", "in"),
                p.setAttribute("result", i + "_drop_shadow_4"),
                t.appendChild(p);
                var c = this.createMergeNode(i, [i + "_drop_shadow_4", s]);
                t.appendChild(c)
            }
            extendPrototype([SVGComposableEffect], SVGTintFilter),
            SVGTintFilter.prototype.renderFrame = function(t) {
                if (t || this.filterManager._mdf) {
                    var e = this.filterManager.effectElements[0].p.v
                      , r = this.filterManager.effectElements[1].p.v
                      , i = this.filterManager.effectElements[2].p.v / 100;
                    this.linearFilter.setAttribute("values", linearFilterValue + " " + i + " 0"),
                    this.matrixFilter.setAttribute("values", r[0] - e[0] + " 0 0 0 " + e[0] + " " + (r[1] - e[1]) + " 0 0 0 " + e[1] + " " + (r[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 1 0")
                }
            }
            ,
            SVGFillFilter.prototype.renderFrame = function(t) {
                if (t || this.filterManager._mdf) {
                    var e = this.filterManager.effectElements[2].p.v
                      , r = this.filterManager.effectElements[6].p.v;
                    this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + r + " 0")
                }
            }
            ,
            SVGStrokeEffect.prototype.initialize = function() {
                var t, e, r, i, s = this.elem.layerElement.children || this.elem.layerElement.childNodes;
                for (1 === this.filterManager.effectElements[1].p.v ? (i = this.elem.maskManager.masksProperties.length,
                r = 0) : i = 1 + (r = this.filterManager.effectElements[0].p.v - 1),
                (e = createNS("g")).setAttribute("fill", "none"),
                e.setAttribute("stroke-linecap", "round"),
                e.setAttribute("stroke-dashoffset", 1); r < i; r += 1)
                    t = createNS("path"),
                    e.appendChild(t),
                    this.paths.push({
                        p: t,
                        m: r
                    });
                if (3 === this.filterManager.effectElements[10].p.v) {
                    var a = createNS("mask")
                      , n = createElementID();
                    a.setAttribute("id", n),
                    a.setAttribute("mask-type", "alpha"),
                    a.appendChild(e),
                    this.elem.globalData.defs.appendChild(a);
                    var o = createNS("g");
                    for (o.setAttribute("mask", "url(" + getLocationHref() + "#" + n + ")"); s[0]; )
                        o.appendChild(s[0]);
                    this.elem.layerElement.appendChild(o),
                    this.masker = a,
                    e.setAttribute("stroke", "#fff")
                } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                    if (2 === this.filterManager.effectElements[10].p.v)
                        for (s = this.elem.layerElement.children || this.elem.layerElement.childNodes; s.length; )
                            this.elem.layerElement.removeChild(s[0]);
                    this.elem.layerElement.appendChild(e),
                    this.elem.layerElement.removeAttribute("mask"),
                    e.setAttribute("stroke", "#fff")
                }
                this.initialized = !0,
                this.pathMasker = e
            }
            ,
            SVGStrokeEffect.prototype.renderFrame = function(t) {
                var e;
                this.initialized || this.initialize();
                var r, i, s = this.paths.length;
                for (e = 0; e < s; e += 1)
                    if (-1 !== this.paths[e].m && (r = this.elem.maskManager.viewData[this.paths[e].m],
                    i = this.paths[e].p,
                    (t || this.filterManager._mdf || r.prop._mdf) && i.setAttribute("d", r.lastPath),
                    t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || r.prop._mdf)) {
                        var a;
                        if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                            var n = .01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                              , o = .01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                              , h = i.getTotalLength();
                            a = "0 0 0 " + h * n + " ";
                            var l, p = h * (o - n), c = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01, f = Math.floor(p / c);
                            for (l = 0; l < f; l += 1)
                                a += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01 + " ";
                            a += "0 " + 10 * h + " 0 0"
                        } else
                            a = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01;
                        i.setAttribute("stroke-dasharray", a)
                    }
                if ((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v),
                (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v),
                (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf)) {
                    var u = this.filterManager.effectElements[3].p.v;
                    this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * u[0]) + "," + bmFloor(255 * u[1]) + "," + bmFloor(255 * u[2]) + ")")
                }
            }
            ,
            SVGTritoneFilter.prototype.renderFrame = function(t) {
                if (t || this.filterManager._mdf) {
                    var e = this.filterManager.effectElements[0].p.v
                      , r = this.filterManager.effectElements[1].p.v
                      , i = this.filterManager.effectElements[2].p.v
                      , s = i[0] + " " + r[0] + " " + e[0]
                      , a = i[1] + " " + r[1] + " " + e[1]
                      , n = i[2] + " " + r[2] + " " + e[2];
                    this.feFuncR.setAttribute("tableValues", s),
                    this.feFuncG.setAttribute("tableValues", a),
                    this.feFuncB.setAttribute("tableValues", n)
                }
            }
            ,
            SVGProLevelsFilter.prototype.createFeFunc = function(t, e) {
                var r = createNS(t);
                return r.setAttribute("type", "table"),
                e.appendChild(r),
                r
            }
            ,
            SVGProLevelsFilter.prototype.getTableValue = function(t, e, r, i, s) {
                for (var a, n, o = 0, h = Math.min(t, e), l = Math.max(t, e), p = Array.call(null, {
                    length: 256
                }), c = 0, f = s - i, u = e - t; o <= 256; )
                    n = (a = o / 256) <= h ? u < 0 ? s : i : a >= l ? u < 0 ? i : s : i + f * Math.pow((a - t) / u, 1 / r),
                    p[c] = n,
                    c += 1,
                    o += 256 / 255;
                return p.join(" ")
            }
            ,
            SVGProLevelsFilter.prototype.renderFrame = function(t) {
                if (t || this.filterManager._mdf) {
                    var e, r = this.filterManager.effectElements;
                    this.feFuncRComposed && (t || r[3].p._mdf || r[4].p._mdf || r[5].p._mdf || r[6].p._mdf || r[7].p._mdf) && (e = this.getTableValue(r[3].p.v, r[4].p.v, r[5].p.v, r[6].p.v, r[7].p.v),
                    this.feFuncRComposed.setAttribute("tableValues", e),
                    this.feFuncGComposed.setAttribute("tableValues", e),
                    this.feFuncBComposed.setAttribute("tableValues", e)),
                    this.feFuncR && (t || r[10].p._mdf || r[11].p._mdf || r[12].p._mdf || r[13].p._mdf || r[14].p._mdf) && (e = this.getTableValue(r[10].p.v, r[11].p.v, r[12].p.v, r[13].p.v, r[14].p.v),
                    this.feFuncR.setAttribute("tableValues", e)),
                    this.feFuncG && (t || r[17].p._mdf || r[18].p._mdf || r[19].p._mdf || r[20].p._mdf || r[21].p._mdf) && (e = this.getTableValue(r[17].p.v, r[18].p.v, r[19].p.v, r[20].p.v, r[21].p.v),
                    this.feFuncG.setAttribute("tableValues", e)),
                    this.feFuncB && (t || r[24].p._mdf || r[25].p._mdf || r[26].p._mdf || r[27].p._mdf || r[28].p._mdf) && (e = this.getTableValue(r[24].p.v, r[25].p.v, r[26].p.v, r[27].p.v, r[28].p.v),
                    this.feFuncB.setAttribute("tableValues", e)),
                    this.feFuncA && (t || r[31].p._mdf || r[32].p._mdf || r[33].p._mdf || r[34].p._mdf || r[35].p._mdf) && (e = this.getTableValue(r[31].p.v, r[32].p.v, r[33].p.v, r[34].p.v, r[35].p.v),
                    this.feFuncA.setAttribute("tableValues", e))
                }
            }
            ,
            extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
            SVGDropShadowEffect.prototype.renderFrame = function(t) {
                if (t || this.filterManager._mdf) {
                    if ((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4),
                    t || this.filterManager.effectElements[0].p._mdf) {
                        var e = this.filterManager.effectElements[0].p.v;
                        this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])))
                    }
                    if ((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255),
                    t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                        var r = this.filterManager.effectElements[3].p.v
                          , i = (this.filterManager.effectElements[2].p.v - 90) * degToRads
                          , s = r * Math.cos(i)
                          , a = r * Math.sin(i);
                        this.feOffset.setAttribute("dx", s),
                        this.feOffset.setAttribute("dy", a)
                    }
                }
            }
            ;
            var _svgMatteSymbols = [];
            function SVGMatte3Effect(t, e, r) {
                this.initialized = !1,
                this.filterManager = e,
                this.filterElem = t,
                this.elem = r,
                r.matteElement = createNS("g"),
                r.matteElement.appendChild(r.layerElement),
                r.matteElement.appendChild(r.transformedElement),
                r.baseElement = r.matteElement
            }
            function SVGGaussianBlurEffect(t, e, r, i) {
                t.setAttribute("x", "-100%"),
                t.setAttribute("y", "-100%"),
                t.setAttribute("width", "300%"),
                t.setAttribute("height", "300%"),
                this.filterManager = e;
                var s = createNS("feGaussianBlur");
                s.setAttribute("result", i),
                t.appendChild(s),
                this.feGaussianBlur = s
            }
            function TransformEffect() {}
            function SVGTransformEffect(t, e) {
                this.init(e)
            }
            function CVTransformEffect(t) {
                this.init(t)
            }
            return SVGMatte3Effect.prototype.findSymbol = function(t) {
                for (var e = 0, r = _svgMatteSymbols.length; e < r; ) {
                    if (_svgMatteSymbols[e] === t)
                        return _svgMatteSymbols[e];
                    e += 1
                }
                return null
            }
            ,
            SVGMatte3Effect.prototype.replaceInParent = function(t, e) {
                var r = t.layerElement.parentNode;
                if (r) {
                    for (var i, s = r.children, a = 0, n = s.length; a < n && s[a] !== t.layerElement; )
                        a += 1;
                    a <= n - 2 && (i = s[a + 1]);
                    var o = createNS("use");
                    o.setAttribute("href", "#" + e),
                    i ? r.insertBefore(o, i) : r.appendChild(o)
                }
            }
            ,
            SVGMatte3Effect.prototype.setElementAsMask = function(t, e) {
                if (!this.findSymbol(e)) {
                    var r = createElementID()
                      , i = createNS("mask");
                    i.setAttribute("id", e.layerId),
                    i.setAttribute("mask-type", "alpha"),
                    _svgMatteSymbols.push(e);
                    var s = t.globalData.defs;
                    s.appendChild(i);
                    var a = createNS("symbol");
                    a.setAttribute("id", r),
                    this.replaceInParent(e, r),
                    a.appendChild(e.layerElement),
                    s.appendChild(a);
                    var n = createNS("use");
                    n.setAttribute("href", "#" + r),
                    i.appendChild(n),
                    e.data.hd = !1,
                    e.show()
                }
                t.setMatte(e.layerId)
            }
            ,
            SVGMatte3Effect.prototype.initialize = function() {
                for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, r = 0, i = e.length; r < i; )
                    e[r] && e[r].data.ind === t && this.setElementAsMask(this.elem, e[r]),
                    r += 1;
                this.initialized = !0
            }
            ,
            SVGMatte3Effect.prototype.renderFrame = function() {
                this.initialized || this.initialize()
            }
            ,
            SVGGaussianBlurEffect.prototype.renderFrame = function(t) {
                if (t || this.filterManager._mdf) {
                    var e = .3 * this.filterManager.effectElements[0].p.v
                      , r = this.filterManager.effectElements[1].p.v
                      , i = 3 == r ? 0 : e
                      , s = 2 == r ? 0 : e;
                    this.feGaussianBlur.setAttribute("stdDeviation", i + " " + s);
                    var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                    this.feGaussianBlur.setAttribute("edgeMode", a)
                }
            }
            ,
            TransformEffect.prototype.init = function(t) {
                this.effectsManager = t,
                this.type = effectTypes.TRANSFORM_EFFECT,
                this.matrix = new Matrix,
                this.opacity = -1,
                this._mdf = !1,
                this._opMdf = !1
            }
            ,
            TransformEffect.prototype.renderFrame = function(t) {
                if (this._opMdf = !1,
                this._mdf = !1,
                t || this.effectsManager._mdf) {
                    var e = this.effectsManager.effectElements
                      , r = e[0].p.v
                      , i = e[1].p.v
                      , s = 1 === e[2].p.v
                      , a = e[3].p.v
                      , n = s ? a : e[4].p.v
                      , o = e[5].p.v
                      , h = e[6].p.v
                      , l = e[7].p.v;
                    this.matrix.reset(),
                    this.matrix.translate(-r[0], -r[1], r[2]),
                    this.matrix.scale(.01 * n, .01 * a, 1),
                    this.matrix.rotate(-l * degToRads),
                    this.matrix.skewFromAxis(-o * degToRads, (h + 90) * degToRads),
                    this.matrix.translate(i[0], i[1], 0),
                    this._mdf = !0,
                    this.opacity !== e[8].p.v && (this.opacity = e[8].p.v,
                    this._opMdf = !0)
                }
            }
            ,
            extendPrototype([TransformEffect], SVGTransformEffect),
            extendPrototype([TransformEffect], CVTransformEffect),
            registerRenderer("canvas", CanvasRenderer),
            registerRenderer("html", HybridRenderer),
            registerRenderer("svg", SVGRenderer),
            ShapeModifiers.registerModifier("tm", TrimModifier),
            ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
            ShapeModifiers.registerModifier("rp", RepeaterModifier),
            ShapeModifiers.registerModifier("rd", RoundCornersModifier),
            ShapeModifiers.registerModifier("zz", ZigZagModifier),
            ShapeModifiers.registerModifier("op", OffsetPathModifier),
            setExpressionsPlugin(Expressions),
            setExpressionInterfaces(getInterface),
            initialize$1(),
            initialize(),
            registerEffect$1(20, SVGTintFilter, !0),
            registerEffect$1(21, SVGFillFilter, !0),
            registerEffect$1(22, SVGStrokeEffect, !1),
            registerEffect$1(23, SVGTritoneFilter, !0),
            registerEffect$1(24, SVGProLevelsFilter, !0),
            registerEffect$1(25, SVGDropShadowEffect, !0),
            registerEffect$1(28, SVGMatte3Effect, !1),
            registerEffect$1(29, SVGGaussianBlurEffect, !0),
            registerEffect$1(35, SVGTransformEffect, !1),
            registerEffect(35, CVTransformEffect),
            lottie
        }
        ,
        module.exports = factory())
    }
    )(lottie$1, lottie$1.exports);
    var lottie = lottie$1.exports, _templateObject$1, styles = r$3(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteral(["\n  * {\n    box-sizing: border-box;\n  }\n\n  :host {\n    --lottie-player-toolbar-height: 35px;\n    --lottie-player-toolbar-background-color: transparent;\n    --lottie-player-toolbar-icon-color: #999;\n    --lottie-player-toolbar-icon-hover-color: #222;\n    --lottie-player-toolbar-icon-active-color: #555;\n    --lottie-player-seeker-track-color: #ccc;\n    --lottie-player-seeker-thumb-color: rgba(0, 107, 120, 0.8);\n    --lottie-player-seeker-display: block;\n\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n\n  .main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n  }\n\n  .animation {\n    width: 100%;\n    height: 100%;\n    display: flex;\n  }\n  .animation.controls {\n    height: calc(100% - 35px);\n  }\n\n  .toolbar {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    background-color: var(--lottie-player-toolbar-background-color);\n    margin: 0 5px;\n    height: 35px;\n  }\n\n  .toolbar button {\n    cursor: pointer;\n    fill: var(--lottie-player-toolbar-icon-color);\n    display: flex;\n    background: none;\n    border: 0;\n    padding: 0;\n    outline: none;\n    height: 100%;\n  }\n\n  .toolbar button:hover {\n    fill: var(--lottie-player-toolbar-icon-hover-color);\n  }\n\n  .toolbar button.active {\n    fill: var(--lottie-player-toolbar-icon-active-color);\n  }\n\n  .toolbar button.active:hover {\n    fill: var(--lottie-player-toolbar-icon-hover-color);\n  }\n\n  .toolbar button:focus {\n    outline: 1px dotted var(--lottie-player-toolbar-icon-active-color);\n  }\n\n  .toolbar button svg {\n  }\n\n  .toolbar button.disabled svg {\n    display: none;\n  }\n\n  .seeker {\n    -webkit-appearance: none;\n    width: 95%;\n    outline: none;\n    background-color: var(--lottie-player-toolbar-background-color);\n    display: var(--lottie-player-seeker-display);\n  }\n\n  .seeker::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-webkit-slider-thumb {\n    height: 15px;\n    width: 15px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -5px;\n  }\n  .seeker:focus::-webkit-slider-runnable-track {\n    background: #999;\n  }\n  .seeker::-moz-range-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-moz-range-thumb {\n    height: 15px;\n    width: 15px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n  }\n  .seeker::-ms-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n  .seeker::-ms-fill-lower {\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-ms-fill-upper {\n    background: var(--lottie-player-seeker-track-color);\n    border-radius: 3px;\n  }\n  .seeker::-ms-thumb {\n    border: 0;\n    height: 15px;\n    width: 15px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n  }\n  .seeker:focus::-ms-fill-lower {\n    background: var(--lottie-player-seeker-track-color);\n  }\n  .seeker:focus::-ms-fill-upper {\n    background: var(--lottie-player-seeker-track-color);\n  }\n\n  .error {\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n  }\n"]))), LOTTIE_PLAYER_VERSION = "2.0.8", LOTTIE_WEB_VERSION = "^5.12.2", _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, PlayerState, PlayMode, PlayerEvents;
    function parseSrc(t) {
        if ("object" == typeof t)
            return t;
        try {
            return JSON.parse(t)
        } catch (e) {
            return new URL(t,window.location.href).toString()
        }
    }
    function isLottie(t) {
        return ["v", "ip", "op", "layers", "fr", "w", "h"].every((e => Object.prototype.hasOwnProperty.call(t, e)))
    }
    function fromURL(t) {
        return _fromURL.apply(this, arguments)
    }
    function _fromURL() {
        return (_fromURL = _asyncToGenerator((function*(t) {
            if ("string" != typeof t)
                throw new Error("The url value must be a string");
            var e;
            try {
                var r = new URL(t)
                  , i = yield fetch(r.toString());
                e = yield i.json()
            } catch (t) {
                throw new Error("An error occurred while trying to load the Lottie file from URL")
            }
            return e
        }
        ))).apply(this, arguments)
    }
    exports.PlayerState = void 0,
    PlayerState = exports.PlayerState || (exports.PlayerState = {}),
    PlayerState.Destroyed = "destroyed",
    PlayerState.Error = "error",
    PlayerState.Frozen = "frozen",
    PlayerState.Loading = "loading",
    PlayerState.Paused = "paused",
    PlayerState.Playing = "playing",
    PlayerState.Stopped = "stopped",
    exports.PlayMode = void 0,
    PlayMode = exports.PlayMode || (exports.PlayMode = {}),
    PlayMode.Bounce = "bounce",
    PlayMode.Normal = "normal",
    exports.PlayerEvents = void 0,
    PlayerEvents = exports.PlayerEvents || (exports.PlayerEvents = {}),
    PlayerEvents.Complete = "complete",
    PlayerEvents.Destroyed = "destroyed",
    PlayerEvents.Error = "error",
    PlayerEvents.Frame = "frame",
    PlayerEvents.Freeze = "freeze",
    PlayerEvents.Load = "load",
    PlayerEvents.Loop = "loop",
    PlayerEvents.Pause = "pause",
    PlayerEvents.Play = "play",
    PlayerEvents.Ready = "ready",
    PlayerEvents.Rendered = "rendered",
    PlayerEvents.Stop = "stop",
    exports.LottiePlayer = class extends s {
        constructor() {
            super(...arguments),
            this.autoplay = !1,
            this.background = "transparent",
            this.controls = !1,
            this.currentState = exports.PlayerState.Loading,
            this.description = "Lottie animation",
            this.direction = 1,
            this.disableCheck = !1,
            this.disableShadowDOM = !1,
            this.hover = !1,
            this.intermission = 1,
            this.loop = !1,
            this.mode = exports.PlayMode.Normal,
            this.preserveAspectRatio = "xMidYMid meet",
            this.renderer = "svg",
            this.speed = 1,
            this._io = void 0,
            this._counter = 1,
            this._onVisibilityChange = () => {
                !0 === document.hidden && this.currentState === exports.PlayerState.Playing ? this.freeze() : this.currentState === exports.PlayerState.Frozen && this.play()
            }
        }
        load(t) {
            var e = this;
            return _asyncToGenerator((function*() {
                var r = {
                    container: e.container,
                    loop: !1,
                    autoplay: !1,
                    renderer: e.renderer,
                    rendererSettings: Object.assign({
                        preserveAspectRatio: e.preserveAspectRatio,
                        clearCanvas: !1,
                        progressiveLoad: !0,
                        hideOnTransparent: !0
                    }, e.viewBoxSize && {
                        viewBoxSize: e.viewBoxSize
                    })
                };
                try {
                    var i = parseSrc(t)
                      , s = {}
                      , a = "string" == typeof i ? "path" : "animationData";
                    e._lottie && e._lottie.destroy(),
                    e.webworkers && lottie$1.exports.useWebWorker(!0),
                    e._lottie = lottie$1.exports.loadAnimation(Object.assign(Object.assign({}, r), {
                        [a]: i
                    })),
                    e._attachEventListeners(),
                    e.disableCheck || ("path" === a ? (s = yield fromURL(i),
                    a = "animationData") : s = i,
                    isLottie(s) || (e.currentState = exports.PlayerState.Error,
                    e.dispatchEvent(new CustomEvent(exports.PlayerEvents.Error))))
                } catch (t) {
                    e.currentState = exports.PlayerState.Error,
                    e.dispatchEvent(new CustomEvent(exports.PlayerEvents.Error))
                }
            }
            ))()
        }
        getLottie() {
            return this._lottie
        }
        getVersions() {
            return {
                lottieWebVersion: LOTTIE_WEB_VERSION,
                lottiePlayerVersion: LOTTIE_PLAYER_VERSION
            }
        }
        play() {
            this._lottie && (this._lottie.play(),
            this.currentState = exports.PlayerState.Playing,
            this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Play)))
        }
        pause() {
            this._lottie && (this._lottie.pause(),
            this.currentState = exports.PlayerState.Paused,
            this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Pause)))
        }
        stop() {
            this._lottie && (this._counter = 1,
            this._lottie.stop(),
            this.currentState = exports.PlayerState.Stopped,
            this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Stop)))
        }
        destroy() {
            this._lottie && (this._lottie.destroy(),
            this._lottie = null,
            this.currentState = exports.PlayerState.Destroyed,
            this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Destroyed)),
            this.remove())
        }
        seek(t) {
            if (this._lottie) {
                var e = /^(\d+)(%?)$/.exec(t.toString());
                if (e) {
                    var r = "%" === e[2] ? this._lottie.totalFrames * Number(e[1]) / 100 : Number(e[1]);
                    this.seeker = r,
                    this.currentState === exports.PlayerState.Playing ? this._lottie.goToAndPlay(r, !0) : (this._lottie.goToAndStop(r, !0),
                    this._lottie.pause())
                }
            }
        }
        snapshot() {
            var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            if (this.shadowRoot) {
                var e = this.shadowRoot.querySelector(".animation svg")
                  , r = (new XMLSerializer).serializeToString(e);
                if (t) {
                    var i = document.createElement("a");
                    i.href = "data:image/svg+xml;charset=utf-8,".concat(encodeURIComponent(r)),
                    i.download = "download_".concat(this.seeker, ".svg"),
                    document.body.appendChild(i),
                    i.click(),
                    document.body.removeChild(i)
                }
                return r
            }
        }
        setSpeed() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
            this._lottie && this._lottie.setSpeed(t)
        }
        setDirection(t) {
            this._lottie && this._lottie.setDirection(t)
        }
        setLooping(t) {
            this._lottie && (this.loop = t,
            this._lottie.loop = t)
        }
        togglePlay() {
            return this.currentState === exports.PlayerState.Playing ? this.pause() : this.play()
        }
        toggleLooping() {
            this.setLooping(!this.loop)
        }
        resize() {
            this._lottie && this._lottie.resize()
        }
        static get styles() {
            return styles
        }
        disconnectedCallback() {
            this.isConnected || (this._io && (this._io.disconnect(),
            this._io = void 0),
            document.removeEventListener("visibilitychange", this._onVisibilityChange),
            this.destroy())
        }
        render() {
            var t = this.controls ? "main controls" : "main"
              , e = this.controls ? "animation controls" : "animation";
            return $(_templateObject || (_templateObject = _taggedTemplateLiteral([' <div\n      id="animation-container"\n      class=', '\n      lang="en"\n      aria-label=', '\n      role="img"\n    >\n      <div\n        id="animation"\n        class=', '\n        style="background:', ';"\n      >\n        ', "\n      </div>\n      ", "\n    </div>"])), t, this.description, e, this.background, this.currentState === exports.PlayerState.Error ? $(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(['<div class="error">⚠️</div>']))) : void 0, this.controls && !this.disableShadowDOM ? this.renderControls() : void 0)
        }
        createRenderRoot() {
            return this.disableShadowDOM && (this.style.display = "block"),
            this.disableShadowDOM ? this : super.createRenderRoot()
        }
        firstUpdated() {
            "IntersectionObserver"in window && (this._io = new IntersectionObserver((t => {
                t[0].isIntersecting ? this.currentState === exports.PlayerState.Frozen && this.play() : this.currentState === exports.PlayerState.Playing && this.freeze()
            }
            )),
            this._io.observe(this.container)),
            void 0 !== document.hidden && document.addEventListener("visibilitychange", this._onVisibilityChange),
            this.src && this.load(this.src),
            this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Rendered))
        }
        renderControls() {
            var t = this.currentState === exports.PlayerState.Playing
              , e = this.currentState === exports.PlayerState.Paused
              , r = this.currentState === exports.PlayerState.Stopped;
            return $(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(['\n      <div\n        id="lottie-controls"\n        aria-label="lottie-animation-controls"\n        class="toolbar"\n      >\n        <button\n          id="lottie-play-button"\n          @click=', "\n          class=", '\n          style="align-items:center;"\n          tabindex="0"\n          aria-label="play-pause"\n        >\n          ', '\n        </button>\n        <button\n          id="lottie-stop-button"\n          @click=', "\n          class=", '\n          style="align-items:center;"\n          tabindex="0"\n          aria-label="stop"\n        >\n          <svg width="24" height="24" aria-hidden="true" focusable="false">\n            <path d="M6 6h12v12H6V6z" />\n          </svg>\n        </button>\n        <input\n          id="lottie-seeker-input"\n          class="seeker"\n          type="range"\n          min="0"\n          step="1"\n          max="100"\n          .value=', "\n          @input=", "\n          @mousedown=", "\n          @mouseup=", '\n          aria-valuemin="1"\n          aria-valuemax="100"\n          role="slider"\n          aria-valuenow=', '\n          tabindex="0"\n          aria-label="lottie-seek-input"\n        />\n        <button\n          id="lottie-loop-toggle"\n          @click=', "\n          class=", '\n          style="align-items:center;"\n          tabindex="0"\n          aria-label="loop-toggle"\n        >\n          <svg width="24" height="24" aria-hidden="true" focusable="false">\n            <path\n              d="M17.016 17.016v-4.031h1.969v6h-12v3l-3.984-3.984 3.984-3.984v3h10.031zM6.984 6.984v4.031H5.015v-6h12v-3l3.984 3.984-3.984 3.984v-3H6.984z"\n            />\n          </svg>\n        </button>\n      </div>\n    '])), this.togglePlay, t || e ? "active" : "", $(t ? _templateObject4 || (_templateObject4 = _taggedTemplateLiteral(['<svg\n                width="24"\n                height="24"\n                aria-hidden="true"\n                focusable="false"\n              >\n                <path\n                  d="M14.016 5.016H18v13.969h-3.984V5.016zM6 18.984V5.015h3.984v13.969H6z"\n                />\n              </svg>'])) : _templateObject5 || (_templateObject5 = _taggedTemplateLiteral(['<svg\n                width="24"\n                height="24"\n                aria-hidden="true"\n                focusable="false"\n              >\n                <path d="M8.016 5.016L18.985 12 8.016 18.984V5.015z" />\n              </svg>']))), this.stop, r ? "active" : "", this.seeker, this._handleSeekChange, ( () => {
                this._prevState = this.currentState,
                this.freeze()
            }
            ), ( () => {
                this._prevState === exports.PlayerState.Playing && this.play()
            }
            ), this.seeker, this.toggleLooping, this.loop ? "active" : "")
        }
        _handleSeekChange(t) {
            if (this._lottie && !isNaN(t.target.value)) {
                var e = t.target.value / 100 * this._lottie.totalFrames;
                this.seek(e)
            }
        }
        _attachEventListeners() {
            this._lottie.addEventListener("enterFrame", ( () => {
                this.seeker = this._lottie.currentFrame / this._lottie.totalFrames * 100,
                this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Frame,{
                    detail: {
                        frame: this._lottie.currentFrame,
                        seeker: this.seeker
                    }
                }))
            }
            )),
            this._lottie.addEventListener("complete", ( () => {
                if (this.currentState === exports.PlayerState.Playing) {
                    if (!this.loop || this.count && this._counter >= this.count) {
                        if (this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Complete)),
                        this.mode !== exports.PlayMode.Bounce)
                            return;
                        if (0 === this._lottie.currentFrame)
                            return
                    }
                    this.mode === exports.PlayMode.Bounce ? (this.count && (this._counter += .5),
                    setTimeout(( () => {
                        this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Loop)),
                        this.currentState === exports.PlayerState.Playing && (this._lottie.setDirection(-1 * this._lottie.playDirection),
                        this._lottie.play())
                    }
                    ), this.intermission)) : (this.count && (this._counter += 1),
                    window.setTimeout(( () => {
                        this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Loop)),
                        this.currentState === exports.PlayerState.Playing && (-1 === this.direction ? (this.seek("99%"),
                        this.play()) : (this._lottie.stop(),
                        this._lottie.play()))
                    }
                    ), this.intermission))
                } else
                    this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Complete))
            }
            )),
            this._lottie.addEventListener("DOMLoaded", ( () => {
                this.setSpeed(this.speed),
                this.setDirection(this.direction),
                this.autoplay && (-1 === this.direction && this.seek("100%"),
                this.play()),
                this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Ready))
            }
            )),
            this._lottie.addEventListener("data_ready", ( () => {
                this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Load))
            }
            )),
            this._lottie.addEventListener("data_failed", ( () => {
                this.currentState = exports.PlayerState.Error,
                this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Error))
            }
            )),
            this.container.addEventListener("mouseenter", ( () => {
                this.hover && this.currentState !== exports.PlayerState.Playing && this.play()
            }
            )),
            this.container.addEventListener("mouseleave", ( () => {
                this.hover && this.currentState === exports.PlayerState.Playing && this.stop()
            }
            ))
        }
        freeze() {
            this._lottie && (this._lottie.pause(),
            this.currentState = exports.PlayerState.Frozen,
            this.dispatchEvent(new CustomEvent(exports.PlayerEvents.Freeze)))
        }
    }
    ,
    __decorate([e$5({
        type: Boolean
    })], exports.LottiePlayer.prototype, "autoplay", void 0),
    __decorate([e$5({
        type: String,
        reflect: !0
    })], exports.LottiePlayer.prototype, "background", void 0),
    __decorate([e$5({
        type: Boolean
    })], exports.LottiePlayer.prototype, "controls", void 0),
    __decorate([e$5({
        type: Number
    })], exports.LottiePlayer.prototype, "count", void 0),
    __decorate([e$5({
        type: String
    })], exports.LottiePlayer.prototype, "currentState", void 0),
    __decorate([e$5({
        type: String
    })], exports.LottiePlayer.prototype, "description", void 0),
    __decorate([e$5({
        type: Number
    })], exports.LottiePlayer.prototype, "direction", void 0),
    __decorate([e$5({
        type: Boolean
    })], exports.LottiePlayer.prototype, "disableCheck", void 0),
    __decorate([e$5({
        type: Boolean
    })], exports.LottiePlayer.prototype, "disableShadowDOM", void 0),
    __decorate([e$5({
        type: Boolean
    })], exports.LottiePlayer.prototype, "hover", void 0),
    __decorate([e$5()], exports.LottiePlayer.prototype, "intermission", void 0),
    __decorate([e$5({
        type: Boolean,
        reflect: !0
    })], exports.LottiePlayer.prototype, "loop", void 0),
    __decorate([e$5()], exports.LottiePlayer.prototype, "mode", void 0),
    __decorate([e$5({
        type: String
    })], exports.LottiePlayer.prototype, "preserveAspectRatio", void 0),
    __decorate([e$5({
        type: String
    })], exports.LottiePlayer.prototype, "renderer", void 0),
    __decorate([e$5({
        type: String
    })], exports.LottiePlayer.prototype, "viewBoxSize", void 0),
    __decorate([e$5()], exports.LottiePlayer.prototype, "seeker", void 0),
    __decorate([e$5({
        type: Number
    })], exports.LottiePlayer.prototype, "speed", void 0),
    __decorate([e$5({
        type: String
    })], exports.LottiePlayer.prototype, "src", void 0),
    __decorate([e$5({
        type: Boolean
    })], exports.LottiePlayer.prototype, "webworkers", void 0),
    __decorate([i(".animation")], exports.LottiePlayer.prototype, "container", void 0),
    exports.LottiePlayer = __decorate([n$1("lottie-player")], exports.LottiePlayer),
    exports.parseSrc = parseSrc,
    Object.defineProperty(exports, "__esModule", {
        value: !0
    })
}
));
function nosubmitonenter(e) {
    if (e.which === 13) {
        e.preventDefault();
        return false;
    }
    return true;
}
!function(global, factory) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define(factory) : global.OnScreen = factory()
}(this, function() {
    "use strict";
    function observeDOM(obj, callback) {
        var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
        if (MutationObserver) {
            var obs = new MutationObserver(callback);
            return obs.observe(obj, {
                childList: !0,
                subtree: !0
            }),
            obs
        }
        return obj.addEventListener("DOMNodeInserted", callback, !1),
        obj.addEventListener("DOMNodeRemoved", callback, !1),
        null
    }
    function attach() {
        var _this = this
          , container = this.options.container;
        if (container instanceof HTMLElement) {
            var style = window.getComputedStyle(container);
            "static" === style.position && (container.style.position = "relative")
        }
        this._observer = observeDOM(document.querySelector("body"), function() {
            Object.keys(_this.trackedElements).forEach(function(element) {
                _this.on("enter", element),
                _this.on("leave", element)
            })
        }),
        container.addEventListener("scroll", this._scroll, {
            passive: !0
        }),
        window.addEventListener("resize", this._scroll, {
            passive: !0
        }),
        this._scroll(),
        this.attached = !0
    }
    function inViewport(el) {
        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
            tolerance: 0
        };
        if (!el)
            throw new Error("You should specify the element you want to test");
        "string" == typeof el && (el = document.querySelector(el));
        var elRect = el.getBoundingClientRect();
        return elRect.bottom - options.tolerance > 0 && elRect.right - options.tolerance > 0 && elRect.left + options.tolerance < (window.innerWidth || document.documentElement.clientWidth) && elRect.top + options.tolerance < (window.innerHeight || document.documentElement.clientHeight)
    }
    function inContainer(el) {
        var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
            tolerance: 0,
            container: ""
        };
        if (!el)
            throw new Error("You should specify the element you want to test");
        if ("string" == typeof el && (el = document.querySelector(el)),
        "string" == typeof options && (options = {
            tolerance: 0,
            container: document.querySelector(options)
        }),
        "string" == typeof options.container && (options.container = document.querySelector(options.container)),
        options instanceof HTMLElement && (options = {
            tolerance: 0,
            container: options
        }),
        !options.container)
            throw new Error("You should specify a container element");
        var containerRect = options.container.getBoundingClientRect();
        return el.offsetTop + el.clientHeight - options.tolerance > options.container.scrollTop && el.offsetLeft + el.clientWidth - options.tolerance > options.container.scrollLeft && el.offsetLeft + options.tolerance < containerRect.width + options.container.scrollLeft && el.offsetTop + options.tolerance < containerRect.height + options.container.scrollTop
    }
    function eventHandler() {
        var trackedElements = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
          , options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
            tolerance: 0
        }
          , selectors = Object.keys(trackedElements)
          , testVisibility = void 0;
        selectors.length && (testVisibility = options.container === window ? inViewport : inContainer,
        selectors.forEach(function(selector) {
            trackedElements[selector].nodes.forEach(function(item) {
                if (testVisibility(item.node, options) ? (item.wasVisible = item.isVisible,
                item.isVisible = !0) : (item.wasVisible = item.isVisible,
                item.isVisible = !1),
                item.isVisible === !0 && item.wasVisible === !1) {
                    if (!trackedElements[selector].enter)
                        return;
                    Object.keys(trackedElements[selector].enter).forEach(function(callback) {
                        "function" == typeof trackedElements[selector].enter[callback] && trackedElements[selector].enter[callback](item.node, "enter")
                    })
                }
                if (item.isVisible === !1 && item.wasVisible === !0) {
                    if (!trackedElements[selector].leave)
                        return;
                    Object.keys(trackedElements[selector].leave).forEach(function(callback) {
                        "function" == typeof trackedElements[selector].leave[callback] && trackedElements[selector].leave[callback](item.node, "leave")
                    })
                }
            })
        }))
    }
    function debouncedScroll() {
        var _this = this
          , timeout = void 0;
        return this.options.debounce === !1 ? function() {
            return eventHandler(_this.trackedElements, _this.options)
        }
        : function() {
            clearTimeout(timeout),
            timeout = setTimeout(function() {
                eventHandler(_this.trackedElements, _this.options)
            }, _this.options.debounce)
        }
    }
    function destroy() {
        this._observer instanceof MutationObserver && this._observer.disconnect(),
        this.options.container.removeEventListener("scroll", this._scroll),
        window.removeEventListener("resize", this._scroll),
        this.attached = !1
    }
    function off(event, selector, handler) {
        var enterCallbacks = Object.keys(this.trackedElements[selector].enter || {})
          , leaveCallbacks = Object.keys(this.trackedElements[selector].leave || {});
        if ({}.hasOwnProperty.call(this.trackedElements, selector))
            if (handler) {
                if (this.trackedElements[selector][event]) {
                    var callbackName = "function" == typeof handler ? handler.name : handler;
                    delete this.trackedElements[selector][event][callbackName]
                }
            } else
                delete this.trackedElements[selector][event];
        enterCallbacks.length || leaveCallbacks.length || delete this.trackedElements[selector]
    }
    function on(event, selector, callback) {
        var allowed = ["enter", "leave"];
        if (!event)
            throw new Error("No event given. Choose either enter or leave");
        if (!selector)
            throw new Error("No selector to track");
        if (allowed.indexOf(event) < 0)
            throw new Error(event + " event is not supported");
        ({}).hasOwnProperty.call(this.trackedElements, selector) || (this.trackedElements[selector] = {}),
        this.trackedElements[selector].nodes = [];
        for (var i = 0, elems = document.querySelectorAll(selector); i < elems.length; i++) {
            var item = {
                isVisible: !1,
                wasVisible: !1,
                node: elems[i]
            };
            this.trackedElements[selector].nodes.push(item)
        }
        "function" == typeof callback && (this.trackedElements[selector][event] || (this.trackedElements[selector][event] = {}),
        this.trackedElements[selector][event][callback.name || "anonymous"] = callback)
    }
    function OnScreen() {
        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
            tolerance: 0,
            debounce: 100,
            container: window
        };
        this.options = {},
        this.trackedElements = {},
        Object.defineProperties(this.options, {
            container: {
                configurable: !1,
                enumerable: !1,
                get: function() {
                    var container = void 0;
                    return "string" == typeof options.container ? container = document.querySelector(options.container) : options.container instanceof HTMLElement && (container = options.container),
                    container || window
                },
                set: function(value) {
                    options.container = value
                }
            },
            debounce: {
                get: function() {
                    return options.debounce === !1 ? !1 : parseInt(options.debounce, 10) || 100
                },
                set: function(value) {
                    options.debounce = value
                }
            },
            tolerance: {
                get: function() {
                    return parseInt(options.tolerance, 10) || 0
                },
                set: function(value) {
                    options.tolerance = value
                }
            }
        }),
        Object.defineProperty(this, "_scroll", {
            enumerable: !1,
            configurable: !1,
            writable: !1,
            value: this._debouncedScroll.call(this)
        }),
        this.attach()
    }
    return Object.defineProperties(OnScreen.prototype, {
        _debouncedScroll: {
            configurable: !1,
            writable: !1,
            enumerable: !1,
            value: debouncedScroll
        },
        attach: {
            configurable: !1,
            writable: !1,
            enumerable: !1,
            value: attach
        },
        destroy: {
            configurable: !1,
            writable: !1,
            enumerable: !1,
            value: destroy
        },
        off: {
            configurable: !1,
            writable: !1,
            enumerable: !1,
            value: off
        },
        on: {
            configurable: !1,
            writable: !1,
            enumerable: !1,
            value: on
        }
    }),
    OnScreen.check = inViewport,
    OnScreen
});
var popupGift = {};
popupGift.open = function(opts) {
    var o = this;
    if (typeof opts == 'undefined')
        opts = {
            'for_user_id': 0
        };
    o.opts = opts;
    o.step = 0;
    o.stripe_checkout = false;
    alertPremium({
        'error': 'generic',
        'mainBlocCss': 'width: 100%;',
        'texte': '<div id="popupGiftContent" style="width: 100%">' + ('<div style="text-align: center; padding: 100px 0;"><i class="fa-solid fa-spinner fa-spin fa-2xl"></i><br><br>Chargement du formulaire...</div>') + '</div>',
        'logo': (opts.for_user_id ? 'fa-heart' : 'fa-box-heart'),
        'logoStyle': 'transform: rotate(3deg);',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'btns': `
  <div class="blocpremiumBtn" id="popupGiftBtn" onclick="popupGift.btnClicked();" style="display: none">Soutenir le forum</div>
  <div class="blocpremiumBtn" id="popupGiftConnectBtn" onclick="document.location.href = '/login.php';" style="display: none">Je veux d'abord me connecter</div>
  
  <div class="blocpremiumBtnSoft2" onclick="if (popupGift.stripe_checkout) popupGift.stripe_checkout.destroy(); closeAlertPremium();">Annuler</div>
  `,
        'fctOnClose': function() {
            return true;
        },
        'fctAfterShown': function() {
            jQuery.get('/nolog.giftpopup.php?' + (opts.for_user_id ? 'for_user_id=' + opts.for_user_id : ''), function(res) {
                jQuery('#popupGiftContent').slideUp('slow', function() {
                    jQuery('#popupGiftContent').html(res);
                    jQuery('#popupGiftContent,#popupGiftBtn').slideDown();
                });
            });
        }
    });
    if (opts.for_user_id) {
        jQuery('.blocPremiumLogo').html('<div style="height: 20px;"><img src="https://img.xooimage.com/files_lottie/certified-gift2-xooit.svg" style="height: 100px; margin-top: -40px; transform: rotate(3deg);"></div>');
    }
}
;
popupGift.open = function(opts) {
    var o = this;
    if (typeof opts == 'undefined')
        opts = {
            'for_user_id': 0
        };
    o.opts = opts;
    o.step = 0;
    o.stripe_checkout = false;
    alertPremium({
        'error': 'generic',
        'mainBlocCss': 'width: 100%;',
        'texte': '<div id="popupGiftContent" style="width: 100%">' + ('<div style="text-align: center; padding: 100px 0;"><i class="fa-solid fa-spinner fa-spin fa-2xl"></i><br><br>Chargement du formulaire...</div>') + '</div>',
        'logo': (opts.for_user_id ? 'fa-heart' : 'fa-box-heart'),
        'logoStyle': 'transform: rotate(3deg);',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'btns': `
  <div class="blocpremiumBtn" id="popupGiftBtn" onclick="popupGift.btnClicked();" style="display: none">Soutenir le forum</div>
  <div class="blocpremiumBtn" id="popupGiftConnectBtn" onclick="document.location.href = '/login.php';" style="display: none">Je veux d'abord me connecter</div>
  
  <div class="blocpremiumBtnSoft2" onclick="if (popupGift.stripe_checkout) popupGift.stripe_checkout.destroy(); closeAlertPremium();">Annuler</div>
  `,
        'fctOnClose': function() {
            return true;
        },
        'fctAfterShown': function() {
            jQuery.get('/nolog.giftpopup.php?' + (opts.for_user_id ? 'for_user_id=' + opts.for_user_id : ''), function(res) {
                jQuery('#popupGiftContent').slideUp('slow', function() {
                    jQuery('#popupGiftContent').html(res);
                    jQuery('#popupGiftContent,#popupGiftBtn').slideDown();
                });
            });
        }
    });
    if (opts.for_user_id) {
        jQuery('.blocPremiumLogo').html('<div style="height: 20px;"><img src="https://img.xooimage.com/files_lottie/certified-gift2-xooit.svg" style="height: 100px; margin-top: -40px; transform: rotate(3deg);"></div>');
    }
}
;
popupGift.openThanks = function(type) {
    alertPremium({
        'error': 'generic',
        'mainBlocCss': 'width: 100%;',
        'title': 'Mille mercis !',
        'texte': '<div style="font-weight: 600; margin-top: 1em;">Votre ' + (type == 2 ? 'cadeau a bien été enregistré' : 'participation a bien été enregistrée') + '&nbsp;! Nous vous remercions infiniment pour votre contribution&nbsp;!</div><br>',
        'logo': (type == 2 ? 'fa-heart' : 'fa-box-heart'),
        'logoStyle': 'transform: rotate(3deg);',
        'globalClass': 'blocEventPopup',
        'noDefaultBtn': 1,
        'fctAfterShown': function() {
            jQuery('#alertPremium').prepend('<lottie-player class="psLottie lottieStatus" id="lottieStatus" src="https://img.xooimage.com/files_lottie/confetti.json" background="transparent" speed="1" direction="1" mode="normal" loop="" autoplay="" style="margin: auto; position: absolute; width: calc( 100vw - 100px ); height: calc( 100vh - 100px ); margin-left: 50px; top: 50px; pointer-events: none; z-index: -1; overflow: hidden; "></lottie-player>');
        },
        'btns': `
  <div class="blocpremiumBtnSoft2" onclick="if (popupGift.stripe_checkout) popupGift.stripe_checkout.destroy(); closeAlertPremium();">Fermer</div>
  `
    });
    if (type == 2) {
        jQuery('.blocPremiumLogo').html('<div style="height: 20px;"><img src="https://img.xooimage.com/files_lottie/certified-gift2-xooit.svg" style="height: 100px; margin-top: -40px; transform: rotate(3deg);"></div>');
    }
}
;
popupGift.btnClicked = function() {
    var o = this;
    if (o.step == 0) {
        jQuery('#popupGiftBtn').html('Sélectionner');
    } else if (o.step == 1) {
        var amount = parseFloat(jQuery('input[name=definedGiftAmount]').val());
        if (amount < 2) {
            alert("Montant minimum de 2€");
            return false;
        }
        var plankey = jQuery('[name=giftPlanKey]:checked').val();
        jQuery.get('/nolog.giftpopup.php?get_stripe_params=1&for_user_id=' + o.opts['for_user_id'] + (plankey ? '&plankey=' + plankey : '') + '&amount=' + amount, function(params) {
            const stripe = Stripe(o.stripekey);
            initialize();
            async function initialize() {
                const fetchClientSecret = async () => {
                    const response = await fetch("/stripe/checkout_session.php?gift=1&" + params, {
                        method: "POST",
                    });
                    const {clientSecret} = await response.json();
                    return clientSecret;
                }
                ;
                const checkout = await stripe.initEmbeddedCheckout({
                    fetchClientSecret,
                });
                checkout.mount('#checkout');
                popupGift.stripe_checkout = checkout;
            }
        });
        jQuery('#popupGiftBtn').hide();
    }
    o.step++;
    jQuery('.giftStep:visible').slideUp(function() {
        jQuery('.giftStep:eq(' + o.step + ')').slideDown();
    });
}
;
var popupUser = {};
popupUser.users = {};
popupUser.langs = {};
popupUser.refreshUsers = function(rows) {
    var me = popupUser;
    jQuery.each(rows, function(user_id) {
        me.users[user_id] = this;
    });
}
popupUser.resetUsersCache = function() {
    var me = popupUser;
    me.users = {};
}
popupUser.refreshLangs = function(rows) {
    var me = popupUser;
    jQuery.each(rows, function(k, v) {
        me.langs[k] = v;
    });
    console.log(me.langs);
}
popupUser.getUsersDatas = function(user_id_with_key, afterQuery) {
    var me = popupUser;
    var user_id = user_id_with_key.split('-')[0];
    me.users[user_id] = false;
    jQuery.getJSON('/nolog.userdatas.php?id=' + user_id_with_key, function(res) {
        me.users[user_id] = res;
    }).always(function() {
        afterQuery();
    });
}
popupUser.onleave = function() {
    var me = popupUser;
    clearTimeout(me.timer);
    me.timer = setTimeout(function() {
        jQuery('.popupUser').fadeOut('fast', function() {
            jQuery(this).remove();
        });
        jQuery('.isLastPopupUserShower').removeClass('isLastPopupUserShower');
    }, 500);
}
popupUser.checkAutoPopups = function() {
    var me = popupUser;
    var onleave = function() {
        clearTimeout(me.timer);
        me.timer = setTimeout(function() {
            jQuery('.popupUser').fadeOut('fast', function() {
                jQuery(this).remove();
            });
            jQuery('.isLastPopupUserShower').removeClass('isLastPopupUserShower');
        }, 500);
    };
    jQuery('.autoUserPopup').mouseenter(function() {
        var o = this;
        var oforposition = o;
        if (jQuery(o).parents('.autoUserPopupAnchor').length == 1)
            oforposition = jQuery(o).parents('.autoUserPopupAnchor')[0];
        clearTimeout(me.timer);
        if (jQuery('.popupUser').length && jQuery(oforposition).hasClass('isLastPopupUserShower'))
            return;
        jQuery('.isLastPopupUserShower').removeClass('isLastPopupUserShower');
        jQuery(oforposition).addClass('isLastPopupUserShower');
        me.timer = setTimeout(function() {
            jQuery('.popupUser').remove();
            me.getDom(jQuery(o).attr('userid'), function(dom) {
                var pos = o.getBoundingClientRect();
                if (!pos.left || !pos.top)
                    return;
                jQuery(document.body).append(dom);
                dom.fadeIn('fast');
                var pos = oforposition.getBoundingClientRect();
                var posdom = jQuery(dom)[0].getBoundingClientRect();
                var curleft = pos.left + window.scrollX;
                if (curleft + posdom.width > jQuery(window).width())
                    curleft = jQuery(window).width() - posdom.width - 5;
                var positionBas = pos.top + pos.height + window.scrollY + 5 + posdom.height;
                if (positionBas > (window.scrollY + jQuery(window).height()))
                    dom.css('top', pos.top + window.scrollY - 5 - posdom.height);
                else
                    dom.css('top', pos.top + pos.height + window.scrollY + 5);
                dom.css('left', curleft);
                dom.mouseenter(function() {
                    clearTimeout(me.timer);
                }).mouseleave(onleave);
            });
        }, 500);
    }).mouseleave(onleave).removeClass('autoUserPopup').css('position', 'relative');
    ;
}
popupUser.getDom = function(user_id_with_key, onReadyFct) {
    var me = popupUser;
    var user_id = user_id_with_key.split('-')[0];
    if (typeof me.users[user_id] != 'undefined') {
        var user = me.users[user_id];
        if (!user)
            return;
        var html = `<div class="popupUser autoFadeOut" style="` + (user.plan == 'membre_premium' ? `border: 0.3em solid ` + user.avatar.bgColor + `;` : '') + `"><div style="position: relative">
   <div class="popupClose" onclick="jQuery('.popupUser').remove(); jQuery('.isLastPopupUserShower').removeClass('isLastPopupUserShower');"><i class="fa-solid fa-xmark"></i></div>
   <div class="bloc" style="border-bottom-left-radius: 0; border-bottom-right-radius: 0; width: 100%; margin: 0; overflow: hidden; aspect-ratio: 100/20; ` + (user.bannerUrl ? `background: url(` + user.bannerUrl + `); background-size: 100%;` : `background-color: ` + user.avatar.bgColor) + `; opacity: 1; z-index: 1">
    <div style="width: 100%; height: 100%; ` + (!user.bannerUrl ? `background: linear-gradient(0deg, rgba(255, 255, 255, 0.2) 0%, ` + user.avatar.bgColor + ` 100%);` : ``) + `"></div>
   </div>
  
   <div style="padding: 0.77em; margin-top: -2em;">
    <div style="display: flex; width: 100%; position: relative; align-items: flex-start;">
     <div style="width: 6.9em; vertical-align: middle">
      ` + (user.avatar.url ? `<div class="avatar ` + (user.online ? `avataronline` : `avataroffline`) + `" style="background: url(` + user.avatar.url + `) no-repeat center center; background-color: white; background-size: cover; border: 0.1em solid white; box-sizing: content-box"></div>` : `<div class="avatar ` + (user.online ? `avataronline` : `avataroffline`) + `" style="background-color: ` + user.avatar.bgColor + `; color: ` + user.avatar.bgColorContrast + `; border: 0.1em solid white; box-sizing: content-box">` + user.avatar.initial + `</div>`) + `
     </div>
     
     <div style="flex: 1; padding-left: 0.7em; font-size: 2em; font-weight: bold; vertical-align: middle; margin-top: 0.7em;">
      <span style="word-break: break-word;">` + (user.urls.profile ? `<a href="` + user.urls.profile + `" style="text-decoration: none; color: inherit;">` + user.username + `</a>` : user.username) + `</span>
      <div style="font-size: 0.55em; font-size: normal;">
       ` + (user.rank.text ? `<div>` + user.rank.text + `</div>` : ``) + `
       ` + (user.cagnotteGift ? '<span class="contributeur" style="opacity: 1; font-size: 0.8em; margin-bottom: 0.3em; cursor: pointer;" onclick="popupGift.open(); return false;">Contributeur&nbsp;!</span>' : '') + `
       ` + (user.joined ? `<div style="font-size: 0.8em; font-weight: 300"><i class="fal fa-calendar-check"></i> ` + me.langs.joined + ` ` + user.joined + `</div>` : ``) + `
      </div>
     </div>
     ` + (user.isLoggedUser ? "" : `
     <div style="margin-top: 1.5em;" class="submit-buttons small">
     <button onclick="delete popupUser.users[` + user.userId + `]; interactions.clickFollow('.interactionUser` + user.userId + `', '` + user.userId + `', '` + user.rci + `', jQuery(this).hasClass('status_friend') ? 0 : 1);" style="padding: 0 !important;
     width: 2em;
     height: 2em;
     text-align: center;" class="interactionUser` + user.userId + ` interaction status_` + user.interactionType + `">
       <i class="fa-solid fa-fw fa-user-slash interaction_friend" style="margin: 0" title="Arrêter de suivre"></i>
       <i class="fa-solid fa-fw fa-user-plus interaction_" style="margin: 0" title="Suivre"></i>
     </button>
     </div>
     `) + `
    </div>
    
    ` + (user.status.text ? `
    <div class="profileStatus" style="margin-left: 5.4em;` + (user.isLoggedUser ? `cursor: pointer;` : ``) + `"` + (user.isLoggedUser ? ` onclick="openSatusPicker(` + user.status.openOptions + `);"` : ``) + `>
     <div class="psPicto">
      ` + (user.status.lottie ? `<lottie-player class="psLottie lottieStatus" id="lottieStatus" src="` + user.status.lottie + `" background="transparent" speed="1" direction="1" mode="normal" loop autoplay></lottie-player>` : ``) + `
      ` + (user.status.svg ? `<img src="` + user.status.svg + `" class="psSVG" />` : ``) + `
      <div class="psStatus">` + user.status.text + `</div>
     </div>
     <div class="psB1"></div><div class="psB2"></div><div class="psB3"></div>
     
     ` + (user.isLoggedUser ? `
     <div class="profileStatusEdit">
      <i class="fa-solid fa-pen"></i>
     </div>
     ` : ``) + `
    </div>
    ` : ``) + `
    
    <div style="text-align: center; padding: 0.77em 0; font-weight: 300"><b>` + user.posts + `</b> <span style="">Messages</span>
    ` + (user.lastVisit ? `<br>Dernière visite <b timestamp="` + user.lastVisit + `"></b>` : ``) + `</div>
    
    
    <div style="font-size: 0.95em">
     <br>
     <div class="ibc">
      <div>
       ` + (user.urls.profile ? `<a href="` + user.urls.profile + `"><i class="fa-solid fa-fw fa-address-card"></i> ` + me.langs.read_profile + `</a><br>` : ``) + `
       ` + (user.urls.www ? `<a href="` + user.urls.www + `" target="_blank"><i class="fa-solid fa-fw fa-globe"></i> ` + me.langs.visit_website + `</a><br>` : ``) + `
       ` + (user.urls.pm ? `<a href="` + user.urls.pm + `"><i class="fa-solid fa-fw fa-message"></i> ` + me.langs.send_private_message + `</a><br>` : ``) + `
       
       ` + (!user.isLoggedUser ? `<a href="#" onclick="popupGift.open({'for_user_id': ` + user_id + `}); return false;"><img src="https://img.xooimage.com/files_lottie/certified-gift-xooit.svg" style="height: 1.2em; vertical-align: -0.2em;"> Offrir un abonnement&nbsp;!</a><br>` : ``) + `
      </div>
     </div>
    </div>
   </div>
  </div></div>`;
        var dom = jQuery(html);
        onReadyFct(jQuery(html));
        checkAutoTimestamp();
    } else {
        if (user_id_with_key != user_id) {
            showLoading();
            me.getUsersDatas(user_id_with_key, function() {
                hideLoading();
                me.getDom(user_id, onReadyFct);
            });
        }
    }
}
function closeAlertPremium() {
    if (alertPremiumDatas.onClose()) {
        jQuery('#alertPremium').stop().remove();
    }
}
var alertPremiumDatas = {};
var targetDevenirPremium = '';
function alertPremium(w) {
    jQuery('#alertPremium').stop().remove();
    var btnDevenirPremium = `<div class="blocpremiumBtn" onclick="if (targetDevenirPremium == 'window') window.open('/premium.php'); else { closeAlertPremium(); kajaxdocumentlocationhref('/premium.php'); /*showPremium();*/ }"><img src="https://img.xooimage.com/files_lottie/certified-xooit.svg" style="height: 2em; margin-top: -0.6em; margin-bottom: -0.5em; margin-right: 0.3em; opacity: 0.85; vertical-align: middle;"> Devenir Membre Premium !</div>`;
    var btnDevenirPremiumPlus = btnDevenirPremium.replace('Devenir Membre Premium', 'Devenir Membre Premium+');
    var msgIntituleReleve = `<div style="font-weight: 300; margin: 10px 0; background-color: rgba(255, 255, 255, 0.1); border: 2px solid rgba(0, 0, 0, 0.2); border-radius: 0.2em; padding: 0.5em 0">Les paiements pour cet abonnement apparaitront sous l'intitulé<br><b>XOOIT</b> sur votre <b>relevé de compte</b>.</div>`;
    var title = '';
    var texte = '';
    var logo = false;
    var logoStyle = '';
    var btns = '';
    var mainBlocCss = '';
    targetDevenirPremium = '';
    alertPremiumDatas.onClose = function() {
        return true;
    }
    ;
    var fctAfterShown = function() {};
    if (w.error == 'upload_image') {
        title = `Image trop volumineuse` + (w.filesize ? '&nbsp;<span style="font-size: 0.7em">(' + w.filesize + ')</span>' : '');
        texte = `La taille maximale des images que vous pouvez<br>envoyer est de ` + w.maxfilesize + `.` + (USERPERMS.is_premium ? '' : `<br><br>Devenez <span class="premium">Membre <b>Premium+</b></span> pour envoyer des images jusqu'à <u>50Mo</u> et profiter d'incroyables avantages&nbsp;!</div>`);
        btns = (USERPERMS.is_premium ? `<div class="blocpremiumBtn"  onclick="closeAlertPremium();">OK !</div>` : btnDevenirPremiumPlus + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`);
        logo = 'fa-image-slash';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'image_fixed') {
        title = `Image fixée`;
        texte = `Vous avez essayé d'envoyer une image animée comme avatar. Cette option ne vous est pas activée.` + `<br><br>Devenez <span class="premium">Membre <b>Premium+</b></span> pour envoyer des avatar animés et profiter d'incroyables avantages&nbsp;!</div>`;
        btns = btnDevenirPremiumPlus + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`;
        logo = 'fa-gif';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'nobgcolor') {
        title = `Couleur personnalisée`;
        texte = `Vous avez essayé de définir une couleur de fond personnalisée. Cette option ne vous est pas activée et la couleur personnalisée va vous être enlevée.` + `<br><br>Devenez <span class="premium">Membre <b>Premium+</b></span> pour personnaliser la couleur de fond du forum et profiter d'incroyables avantages&nbsp;!</div>`;
        btns = btnDevenirPremiumPlus + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium(); setTimeout(restorePreviousBackgroundColor, 1500);">Plus tard...</div>`;
        logo = 'fa-palette';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'status_nolottie') {
        title = `Animation de statut réservée !`;
        texte = `Vous avez choisi une illustration animée pour votre statut, celle-ci va être supprimée car vous n'avez pas accès à cette option&nbsp;!` + `<br><br>Devenez <span class="premium">Membre <b>Premium+</b></span> pour afficher des statuts animés et profiter d'incroyables avantages&nbsp;!</div>`;
        btns = btnDevenirPremiumPlus + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium(); setTimeout(function(){ jQuery('#lottieStatus,.lottieStatus').fadeOut(1000); }, 500);">Plus tard...</div>`;
        logo = 'fa-alarm-clock';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'post_nolottie') {
        title = `Animations réservées !`;
        texte = `Ces animations ne sont pas disponible sans abonnement Membre Premium&nbsp;!` + `<br><br>Devenez <span class="premium">Membre <b>Premium</b></span> pour publier des animations et profiter d'incroyables avantages&nbsp;!</div>`;
        btns = btnDevenirPremium + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium(); setTimeout(function(){ jQuery('#lottieStatus').fadeOut(1000); }, 500);">Plus tard...</div>`;
        logo = 'fa-alarm-clock';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'post_nogif') {
        title = `GIF réservés !`;
        texte = `<br>Devenez <span class="premium">Membre <b>Premium</b></span> pour profiter de ces GIF et d'autres incroyables avantages&nbsp;!</div>`;
        btns = btnDevenirPremium + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium(); setTimeout(function(){ jQuery('#lottieStatus').fadeOut(1000); }, 500);">Plus tard...</div>`;
        logo = 'fa-gif';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'message_length') {
        title = `Message trop long ` + (w.length ? '&nbsp;<span style="font-size: 0.7em">(' + w.length + ' caractères)</span>' : '');
        texte = `La longueur maximale des message que vous pouvez <br>envoyer est de ` + USERPERMS.post_max_size + `&nbsp;caractères.` + (USERPERMS.is_premium ? '' : `<br><br>Devenez <span class="premium">Membre <b>Premium+</b></span> pour envoyer des messages jusqu'à <u>12000 caractères</u> et profiter d'incroyables avantages&nbsp;!</div>`);
        btns = (USERPERMS.is_premium ? `<div class="blocpremiumBtn" onclick="closeAlertPremium();">OK !</div>` : btnDevenirPremiumPlus + `
   <div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`);
        logo = 'fa-align-slash';
        logoStyle = 'transform: rotate(10deg);';
    } else if (w.error == 'profile_plus') {
        title = `Profile personnalisé`;
        texte = `La personnalisation du profil avec une bannière d'entête est réservée aux Membre Premium+&nbsp;! N'attendez plus pour découvrir tous leurs avantages&nbsp;!<br><br>`;
        btns = btnDevenirPremiumPlus + `<div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`;
        logo = 'fa-image-landscape';
        logoStyle = 'transform: rotate(10deg);';
    } else if (w.error == 'profile_plus_tenor') {
        title = `Avatar animé !`;
        texte = `La personnalisation du profil avec un avatar animé est réservée aux Membre Premium+&nbsp;! N'attendez plus pour découvrir tous leurs avantages&nbsp;!<br><br>`;
        texte += '<div style="border: 5px solid white; background: url(' + w.gif + '); background-position: center center; background-size: cover; height: 100px; width: 100px; border-radius: 200%; display: inline-block;">';
        btns = btnDevenirPremiumPlus + `<div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`;
        logo = 'fa-gif';
        logoStyle = 'transform: rotate(10deg);';
    } else if (w.error == 'profile_plus_pixabay') {
        title = `Image d'entête !`;
        texte = `La personnalisation du profil avec une image d'entête est réservée aux Membre Premium+&nbsp;! N'attendez plus pour découvrir tous leurs avantages&nbsp;!<br><br>`;
        texte += '<div style="border: 5px solid white; background: url(' + w.piabayurl + '); background-position: center center; background-size: cover; height: 100px; width: 300px; border-radius: 0.5em; display: inline-block;">';
        btns = btnDevenirPremiumPlus + `<div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`;
        logo = 'fa-gif';
        logoStyle = 'transform: rotate(10deg);';
    } else if (w.error == 'premium_new') {
        title = "Félicitations !<br>Votre abonnement a bien été pris en compte !";
        texte = `<br>Nous avons bien enregistré votre demande d'abonnement ! Vos avantages vont s'activer d'ici quelques secondes et vous allez pouvoir les gérer depuis votre profil.<br>` + msgIntituleReleve + ``;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/profile.php?mode=editprofile&tab=premium&okMobile=1';">Ok !</div>`;
        logo = 'fa-badge-check';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_new_pending') {
        title = "Vérification en cours !";
        texte = `<br>Merci pour votre demande d'abonnement. Vos avantages seront activés dans quelques instants, dès que votre paiement aura été vérifié et validé.<br>` + msgIntituleReleve + ``;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/profile.php?mode=editprofile&tab=premium&okMobile=1';">Ok !</div>`;
        logo = 'fa-hourglass-start';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_new_card_added') {
        title = "Nouveau moyen de paiement ajouté !";
        texte = `<br>Votre nouveau moyen de paiement a bien été enregistré. Vous pouvez maintenant décider lequel de vos moyens de paiement vous souhaitez utiliser pour votre prochain renouvellement.<br><br>` + msgIntituleReleve + `<br>`;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/profile.php?mode=editprofile&tab=premium&openpan=1&okMobile=1';">Ok !</div>`;
        logo = 'fa-credit-card';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_upgraded') {
        title = "Abonnement amélioré !";
        texte = `<br>Félicitations, votre nouvel abonnement a bien été activé ! Vous pouvez dès à présent bénéficier de ses avantages.<br>` + msgIntituleReleve;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/profile.php?mode=editprofile&tab=premium&okMobile=1';">Ok !</div>`;
        logo = 'fa-rocket';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_upgrade_failure') {
        title = "Erreur";
        texte = `<br>Nous n'avons pas pu traiter votre demande car le moyen de paiement enregistré sur votre compte ne semble plus valide (le paiement a été refusé). Nous vous invitons à mettre à jour votre moyen de paiement avant d'essayer à nouveau.<br><br>`;
        btns = `<div class="blocpremiumBtn"  onclick="closeAlertPremium();">Ok</div>`;
        logo = 'fa-circle-exclamation';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_upgrade') {
        var wcopie = JSON.parse(JSON.stringify(w));
        title = "Faites évoluer votre abonnement !";
        texte = `<br>Vous êtes actuellement abonné à l'offre <i>` + w.planold.titre + `</i> jusqu'au <u>` + w.date_fin + `</u>. En changeant d'offre aujourd'hui, vous bénéficierez immédiatement des avantages de l'offre <i>` + w.plan.titre + `</i> et perdrez les jours restants de votre ancien abonnement (<u>aucun remboursement n'aura lieu</u>).<br><br>Pour bénéficier de votre nouvel offre <i>` + w.plan.titre + `</i>, choisissez votre engagement ci-dessous :`;
        wcopie.plan_type_periode = 'mensuel';
        btns += `<div style="cursor: pointer; margin: 0.5em 1em; background-color: rgba(0, 0, 0, 0.4); border-radius: 5px; text-align: center; padding: 10px;"  onclick="alertPremiumDatas.stripe_upgrade_abo(` + JSON.stringify(wcopie).replace(/"/g, '&quot;') + `);">` + '<div style="text-align: center;" stylex="display: flex; justify-content: space-between; align-items: center;">' + `<div>Abonnement Mensuel</div><div style="font-size: 1.2em;"><b>` + w.plan.prix_mensuel_show + ` € / mois</b></div>` + '</div>' + `</div>`;
        wcopie.plan_type_periode = 'annuel';
        btns += `<div style="cursor: pointer; margin: 0.5em 1em; background-color: rgba(0, 0, 0, 0.4); border-radius: 5px; text-align: center; padding: 10px;"  onclick="alertPremiumDatas.stripe_upgrade_abo(` + JSON.stringify(wcopie).replace(/"/g, '&quot;') + `);">` + '<div style="text-align: center;">' + `<div>Abonnement Annuel</div><div style="font-size: 1.2em;"><b>` + w.plan.prix_annuel_show + ` € / an</b></div>` + '</div>' + `</div>`;
        btns += `<br><div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Non, je souhaite garder mon offre actuelle !</div>`;
        logo = 'fa-rocket';
        logoStyle = 'transform: rotate(-10deg);';
        alertPremiumDatas.stripe_upgrade_abo = function(wcopie) {
            jQuery.get('/profile.php?upgradePlanKey=' + w.upgrade_key + '&plan_type_periode=' + wcopie.plan_type_periode, function(res) {
                if (res.indexOf('GOTO:') !== -1) {
                    document.location.href = res.split('GOTO:')[1];
                    return;
                }
                if (res.indexOf('DOSTRIPE:') !== -1) {
                    alertPremiumDatas.stripe_get_abo_session = function(wcopie) {
                        wcopie.error = 'premium_subscribe';
                        wcopie.step = 1;
                        jQuery.get('/premium.php?create_abo_session_key=' + wcopie.createabosessionkey + '&type=' + wcopie.plan.type + '&plan_key=' + wcopie.plan.plan_key + '&plan_type_periode=' + wcopie.plan_type_periode + "&raison_decalage=upgrade", function(id_abo_session) {
                            wcopie.id_abo_session = id_abo_session;
                            if (wcopie.id_abo_session.indexOf('err:') === 0) {
                                document.location.reload();
                                return false;
                            }
                            alertPremium(wcopie);
                        });
                    }
                    ;
                    alertPremiumDatas.stripe_get_abo_session(wcopie);
                    return;
                }
                alertPremium({
                    'error': 'premium_upgrade_error'
                });
            });
            alertPremium({
                'error': 'premium_upgrade_loading'
            });
        }
        ;
    } else if (w.error == 'premium_upgrade_loading') {
        title = '<span style="text-transform: uppercase; font-style: italic; font-weight: 800;">Mise à jour de votre abonnement...</span>';
        texte = `...en cours . Veuillez patienter.<br>`;
        btns = '';
        logo = 'fa-spinner fa-spin-pulse fa-2xs';
        logoStyle = '';
    } else if (w.error == 'premium_upgrade_error') {
        title = "Erreur";
        texte = `<br>Nous n'avons pas pu vérifier la résiliation de votre abonnement actuel avant de basculer vers le nouvel abonnement. Nous vous proposons d'essayer à nouveau dans quelques instants.<br><br>`;
        btns = `<div class="blocpremiumBtn"  onclick="closeAlertPremium();">Ok</div>`;
        logo = 'fa-circle-exclamation';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_link_account') {
        title = '<span style="text-transform: uppercase; font-style: italic; font-weight: 800;">Reliez un autre compte</span>';
        texte = `Saisissez ci-dessous l'adresse du forum surlequel vous possédez un compte avec la même adresse email (<i>` + w.email + `</i>)&nbsp;:<br>
  <br>
  <input type="text" id="premium_link_account" style="background-color: white; color: black; width: 80%; padding: 7px; border: 1px solid #333; font-size: 1.2em; border-radius: 4px;" placeholder="https://..."><br>
  `;
        btns = `<div class="blocpremiumBtn" onclick="alertPremiumDatas.stripe_link_account(); return false;">Continuer...</div>
  <div class="blocpremiumBtnSoft"  onclick="closeAlertPremium();">Annuler</div>`;
        alertPremiumDatas.stripe_link_account = function() {
            var host;
            var url = jQuery('#premium_link_account').val();
            if (url.indexOf('https://') === 0 || url.indexOf('http://') === 0) {
                host = url.split('/')[2];
            } else {
                host = url.split('/')[0];
            }
            window.open('https://' + host + '/login.php?premiumLinkKey=' + encodeURIComponent(w.premiumLinkKey));
        }
        logo = 'fa-link';
        logoStyle = '';
    } else if (w.error == 'premium_alert_link_account') {
        if (w.errorType == 'success') {
            title = "Compte relié !";
            texte = `<br>Votre autre compte a bien été relié à cet abonnement ! Vous pouvez aller configurer vos avantages dès maintenant sur votre autre compte.<br><br>`;
            btns = `<div class="blocpremiumBtn" onclick="closeAlertPremium();">Ok</div>`;
            logo = 'fa-check';
            logoStyle = '';
        } else if (w.errorType == 'unlinked') {
            title = "Compte délié !";
            texte = `<br>Votre autre compte a bien été délié à cet abonnement !<br><br>`;
            btns = `<div class="blocpremiumBtn" onclick="closeAlertPremium();">Ok</div>`;
            logo = 'fa-check';
            logoStyle = '';
        } else {
            title = "Erreur !";
            texte = `<br>Votre autre compte n'a pu être relié pour la raison suivante&nbsp;:<br><br><i>`;
            if (w.errorType == 'tooOld')
                texte += `Vous avez mis trop de temps à vous connecter sur votre autre compte.`;
            else if (w.errorType == 'notSameIp')
                texte += `Vous vous êtes connecté sur votre autre compte avec une adresse IP différente.`;
            else if (w.errorType == 'notSameEmail')
                texte += `Vous n'avez pas la même adresse email sur votre autre compte.`;
            else if (w.errorType == 'everLinked')
                texte += `Vous avez déjà relié un autre compte sur ce forum.`;
            else if (w.errorType == 'everPremium')
                texte += `Votre autre compte a déjà un abonnement en cours.`;
            else
                texte += `Erreur inconnue. Vous pouvez réessayer dans un instant.`;
            texte += `</i><br><br>`;
            btns = `<div class="blocpremiumBtn" onclick="closeAlertPremium();">Ok</div>`;
            logo = 'fa-circle-exclamation';
            logoStyle = 'transform: rotate(-10deg);';
        }
    } else if (w.error == 'premium_change_periode') {
        title = "Changement enregistré !";
        texte = `<br>Votre demande de changement de période de renouvellement a bien été enregistrée. Elle sera prise en compte dès le prochain renouvellement.<br><br>`;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/profile.php?mode=editprofile&tab=premium&openpan=1&okMobile=1';">Ok !</div>`;
        logo = 'fa-calendar-days';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_upgrade_to_get') {
        title = w.alert_title;
        texte = `<br>Découvrez tous les avantages des différents abonnements <span class="premium">Membre <b>Premium</b></span> pour bénéficier de cet avantage !<br><br>`;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/premium.php';">Je veux voir ça !</div>` + `<div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Plus tard...</div>`;
        logo = w.alert_logo;
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_cancel') {
        title = "Résiliation de votre abonnement";
        if (w.cancel_type == 'paypal') {
            texte = `<br>Vous êtes actuellement abonné jusqu'au ` + w.date_fin + ` par PayPal.<br><br>Pour résilier votre abonnement, vous devez le faire depuis votre compte PayPal dans la <a href="https://www.paypal.com/myaccount/autopay/" target="_blank" style="text-decoration: underline;">gestion de vos abonnements</a>. Si vous résiliez votre abonnement, les informations visibles sur cette page ne seront pas modifiée, mais le renouvellement n'aura pas lieu et vous serez automatiquement désabonné le ` + w.date_fin + `.<br><br>`;
            btns = `<div class="blocpremiumBtn"  onclick="closeAlertPremium();">Ok</div>`;
        } else {
            alertPremiumDatas.stripe_cancel_link = function() {
                jQuery.get('/profile.php?aboCancelKey=' + w.cancel_key, function(res) {
                    if (res.indexOf('ok') === 0)
                        alertPremium({
                            'error': 'premium_cancel_confirm'
                        });
                    else {
                        alertPremium({
                            'error': 'premium_cancel_error'
                        });
                    }
                });
            }
            ;
            texte = `<br>Vous êtes actuellement abonné jusqu'au ` + w.date_fin + `. Vous pouvez résilier votre abonnement en confirmant votre demande ci-dessous. Vous continuerez à bénéficier de vos avantages jusqu'à cette date.<br><br>`;
            btns = `<div class="blocpremiumBtn"  onclick="alertPremiumDatas.stripe_cancel_link();">Je confirme la résiliation de mon abonnement</div>` + `<div class="blocpremiumBtnSoft" onclick="closeAlertPremium();">Non, je souhaite garder mon abonnement !</div>`;
        }
        logo = 'fa-trash';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_cancel_confirm') {
        title = "Résiliation enregistrée !";
        texte = `<br>Votre demande a bien été enregistrée. Vous ne serez plus abonné à la fin de votre engagement en cours !<br><br>`;
        btns = `<div class="blocpremiumBtn"  onclick="document.location.href = '/profile.php?mode=editprofile&tab=premium&okMobile=1';">Ok</div>`;
        logo = 'fa-check';
        logoStyle = '';
    } else if (w.error == 'premium_cancel_error') {
        title = "Erreur";
        texte = `<br>Votre demande n'a pas aboutie. Nous vous proposons de réessayer à nouveau dans quelques minutes. Si le problème persiste, n'hésitez pas à nous contacter.<br><br>`;
        btns = `<div class="blocpremiumBtn"  onclick="closeAlertPremium();">Ok</div>`;
        logo = 'fa-circle-exclamation';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'premium_subscribe') {
        if (!w.is_logged) {
            title = '<span style="text-transform: uppercase; font-style: italic; font-weight: 800;">' + w.plan.titre + '</span>';
            texte = `Pour bénéficiez de cette offre, vous devez avoir un compte sur notre forum.<br>`;
            btns += `<div style="cursor: pointer; margin: 0.5em 1em; background-color: rgba(0, 0, 0, 0.4); border-radius: 5px; text-align: center; padding: 10px;"  onclick="document.location.href = '/login.php?redirect=/premium.php';">` + `<div>J'ai déjà un compte, je me connecte</div>` + `</div>`;
            btns += `<div style="cursor: pointer; margin: 0.5em 1em; background-color: rgba(0, 0, 0, 0.4); border-radius: 5px; text-align: center; padding: 10px;"  onclick="document.location.href = '/profile.php?mode=register';">` + `<div>Je crée un compte gratuitement</div>` + `</div>`;
            btns += `<br><div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();">Plus tard...</div>`;
        } else if (typeof w.step == 'undefined') {
            mainBlocCss = 'width: 100%; font-weight: 400;';
            var wcopie = JSON.parse(JSON.stringify(w));
            wcopie.step = 1;
            alertPremiumDatas.stripe_get_abo_session = function(wcopie) {
                wcopie.plan_type_periode = jQuery('input[name=typerenouvellement]:checked').val();
                jQuery.get('/premium.php?create_abo_session_key=' + wcopie.createabosessionkey + '&type=' + wcopie.plan.type + '&plan_key=' + wcopie.plan.plan_key + '&plan_type_periode=' + wcopie.plan_type_periode + '&jpe=' + w.plan.jours_periode_essai, function(id_abo_session) {
                    wcopie.id_abo_session = id_abo_session;
                    if (wcopie.id_abo_session.indexOf('err:') === 0) {
                        document.location.reload();
                        return false;
                    }
                    alertPremium(wcopie);
                });
            }
            ;
            title = '<span style="text-transform: uppercase; font-style: italic; font-weight: 800;">' + w.plan.titre + '</span>';
            texte = `<br><div style="text-align: left; font-weight: 400;">Faites votre choix de renouvellement — Résiliable à tout moment&nbsp;!<br><br>`;
            var boucle = ['annuel', 'mensuel'];
            jQuery.each(boucle, function(l, k) {
                texte += `
     <label onclick="jQuery(this).parent().find('label').css('opacity', 0.4); jQuery(this).css('opacity', 1); " style="display: block; border-radius: 5px; padding: 10px; background-color: rgba(0, 0, 0, 0.2); margin-bottom: 5px; display: flex; justify-content: space-between; align-items: center; gap: 5px; transition: all 0.3s;` + (k == 'mensuel' ? 'opacity: 0.4;' : '') + `">
     <div style="font-weight: bold;"><input type="radio" name="typerenouvellement" value="` + k + `"` + (k == 'annuel' ? ' checked' : '') + `> ` + k.charAt(0).toUpperCase() + k.slice(1) + `</div>
     ` + (w.plan.economie && (k == 'annuel') ? `<div style="background-color: #BCF4E5; color: #357060; border-radius: 2em; display: inline-block; font-size: 0.9em; padding: 0.05em 0.5em; ">ECONOMISEZ <b>` + w.plan.economie + `%</b></div>` : ``);
                if (parseInt(w.plan.jours_periode_essai) > 0) {
                    texte += `<div style="text-align: right; font-size: 0.9em; flex: 1">
       Essai de ` + w.plan.jours_periode_essai + ` jours pour <b>0€</b><br>
       puis ` + w.plan['prix_' + k + '_show'] + ` €/` + (k == 'annuel' ? 'an' : 'mois') + `
      </div>
     `;
                } else {
                    texte += `
      <div style="text-align: right; font-size: 1; flex: 1; font-weight: bold;">` + w.plan['prix_' + k + '_show'] + ` €/` + (k == 'annuel' ? 'an' : 'mois') + `</div>
     `;
                }
                texte += '</label>';
            });
            texte += `</div>`;
            btns = '';
            btns += `<div class="blocpremiumBtn" onclick="alertPremiumDatas.stripe_get_abo_session(` + JSON.stringify(wcopie).replace(/"/g, '&quot;') + `); return false;" style="margin-left: 0; margin-right: 0;">Sélectionner</div>
   <div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();" style="margin-left: 0; margin-right: 0;">Annuler</div>`;
        } else {
            mainBlocCss = 'width: 100%;';
            if (parseInt(w.plan.jours_periode_essai) > 0) {
                title = '<div style="text-transform: uppercase; font-style: italic; font-weight: 800;">' + w.plan.jours_periode_essai + ' jours pour 0€</div><div style="font-size: 0.6em;">puis ' + w.plan['prix_' + w.plan_type_periode + '_show'] + ' € / ' + (w.plan_type_periode == 'mensuel' ? 'mois' : 'an') + '</div>';
            } else {
                title = '<div style="text-transform: uppercase; font-style: italic; font-weight: 800;">' + w.plan.titre + '</div><div style="font-size: 0.6em;">à ' + w.plan['prix_' + w.plan_type_periode + '_show'] + ' € / ' + (w.plan_type_periode == 'mensuel' ? 'mois' : 'an') + '</div>';
            }
            texte = `<div id="checkout" style="width: 100%; border-radius: 10px; overflow: hidden;"></div>`;
            btns += `<br><div class="blocpremiumBtnSoft2" onclick="alertPremiumDatas.stripe_checkout.destroy(); closeAlertPremium();">Annuler</div>`;
            fctAfterShown = function() {
                const stripe = Stripe(w.stripekey);
                initialize();
                async function initialize() {
                    const fetchClientSecret = async () => {
                        const response = await fetch("/stripe/checkout_session.php?id_abo_session=" + w.id_abo_session + "&type=" + w.plan.type + "&pending=" + (parseInt(w.plan.jours_periode_essai) == 0 ? 1 : 0), {
                            method: "POST",
                        });
                        const {clientSecret} = await response.json();
                        return clientSecret;
                    }
                    ;
                    const checkout = await stripe.initEmbeddedCheckout({
                        fetchClientSecret,
                    });
                    checkout.mount('#checkout');
                    alertPremiumDatas.stripe_checkout = checkout;
                }
            }
            ;
        }
        logo = '';
        logoStyle = '';
    } else if (w.error == 'premium_add_card') {
        mainBlocCss = 'width: 100%;';
        title = '<div style="text-transform: uppercase; font-style: italic; font-weight: 800;">Enregistrer un moyen de paiement</div>';
        texte = `<div id="checkout" style="width: 100%; border-radius: 10px; overflow: hidden;"></div>`;
        btns += `<br><div class="blocpremiumBtnSoft2" onclick="alertPremiumDatas.stripe_checkout.destroy(); closeAlertPremium();">Annuler</div>`;
        fctAfterShown = function() {
            const stripe = Stripe(w.stripekey);
            initialize();
            async function initialize() {
                const fetchClientSecret = async () => {
                    const response = await fetch("/stripe/checkout_session.php?add_to_customer_key=" + w.add_to_customer_key, {
                        method: "POST",
                    });
                    const {clientSecret} = await response.json();
                    return clientSecret;
                }
                ;
                const checkout = await stripe.initEmbeddedCheckout({
                    fetchClientSecret,
                });
                checkout.mount('#checkout');
                alertPremiumDatas.stripe_checkout = checkout;
            }
        }
        ;
        logo = '';
        logoStyle = '';
    } else if (w.error == 'premium_remove_card') {
        title = '<span style="text-transform: uppercase; font-style: italic; font-weight: 800;">Suppression de votre moyen de paiement...</span>';
        texte = `...en cours. Veuillez patienter.<br>`;
        btns = '';
        fctAfterShown = function(w) {
            jQuery.get('/stripe/checkout_session.php?detach_from_customer_key=' + w.detach_from_customer_key, function(res) {
                if (res == 'ok') {
                    document.location.href = '/profile.php?mode=editprofile&tab=premium&openpan=1&okMobile=1';
                } else {
                    alertPremium({
                        'error': 'premium_remove_card_error'
                    });
                }
            });
        }
        ;
        logo = '';
        logoStyle = '';
    } else if (w.error == 'premium_remove_card_error') {
        title = '<span style="text-transform: uppercase; font-style: italic; font-weight: 800;">Suppression de votre moyen de paiement</span>';
        texte = `La suppression de votre moyen de paiement a échouée. Nous vous invitons à rafraichir la page et réessayer. Si le problème persiste, n'hésitez pas à nous contacter.<br>`;
        btns = `<div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();">Ok</div>`;
        logo = '';
        logoStyle = '';
    } else if (w.error == 'generic') {
        title = w.title ? w.title : '';
        texte = w.texte ? w.texte : '';
        mainBlocCss = w.mainBlocCss ? w.mainBlocCss : '';
        w.globalClass = w.globalClass ? w.globalClass : 'alert_generic';
        btns = (w.btns ? w.btns + '<br>' : '') + (w.noDefaultBtn ? '' : `<div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();">Fermer</div>`);
        logo = w.logo ? w.logo : '';
        logoStyle = w.logoStyle ? w.logoStyle : '';
        fctAfterShown = w.fctAfterShown ? w.fctAfterShown : fctAfterShown;
        alertPremiumDatas.onClose = w.fctOnClose ? w.fctOnClose : alertPremiumDatas.onClose;
    } else if (w.error == 'captcha_post') {
        title = 'Vérification anti spam';
        texte = `Merci de compléter le Captcha ci-dessous afin de valider l'envoi de votre message.` + (USERPERMS.is_premium ? '' : `<br><br>Devenez <span class="premium">Membre <b>Premium</b></span> pour valider définitivement que vous n\'êtes pas un robot et postez sans Captcha&nbsp;!</div>`);
        btns = btnDevenirPremium + `<br><br>
  <form method="post" id="captchaForm" action="` + w.post_action + `">
  <center>
   <img src="` + w.captcha_url + `"><br>
   <input type="text" name="` + w.captcha_name + `" style="background-color: white; color: black; width: 300px; padding: 7px; text-align: center; border: 1px solid #333; font-size: 1.4em; font-weight: bold; border-radius: 4px;" placeholder="Copiez le code à 5 caractères ici"><br>
  </center>
  <input type="hidden" name="captchaPostData" value="">
  <div class="blocpremiumBtnSoft" onclick="jQuery('#captchaForm').submit();">Valider le Captcha</div>
  </form>
  `;
        logo = 'fa-shield';
        targetDevenirPremium = 'window';
    } else if (w.error == 'tenor_picker') {
        title = '';
        texte = `Choisissez votre avatar parmi des milliers de GIF animés !`;
        btns = `
  <form method="post" id="tenorForm" action="">
  <center>
   <input type="text" id="searchTenorField" style="background-color: white; color: black; width: 100%; padding: 7px; border: 1px solid #333; font-size: 1.2em; font-weight: 400; border-radius: 4px;" placeholder="Cherchez un gif..."><br><br>
   <div id="tenorPreview" style="gap: 5px; display: flex;flex-wrap: wrap;align-items: center;justify-content: space-around;"></div>
  </center>
  </form>
  `;
        fctAfterShown = function(w) {
            var searchTenorTimeout;
            var searchTenorNoTimeout = false;
            var searchTenor = function(nodelay) {
                clearTimeout(searchTenorTimeout);
                searchTenorTimeout = setTimeout(function() {
                    var apikey = "AIzaSyBm-qHmSRIg3LGbI7KOzf0Dq_W7qXBDvfI";
                    var clientkey = "xooit_tenor_search";
                    var lmt = 24;
                    var search_term = encodeURIComponent(jQuery('#searchTenorField').val());
                    if (!search_term) {
                        var cat_url = "https://tenor.googleapis.com/v2/categories?key=" + apikey + "&client_key=" + clientkey + "&locale=fr&country=FR";
                        jQuery.ajax({
                            url: cat_url,
                            dataType: "jsonp",
                            success: function(data) {
                                jQuery('#tenorPreview').html('');
                                jQuery.each(data.tags, function(k, row) {
                                    var x = jQuery('<div style="text-align: center; cursor: pointer;" onclick=""><div style="border: 2px solid white; background: url(' + row.image + '); background-position: center center; background-size: cover; width: 130px; height: 50px; border-radius: 3px; display: inline-block;"><div style="width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); font-weight: 800; display: flex; align-items: center;justify-content: center; color: white;">' + row.searchterm + '</div></div>');
                                    var searchTerm = row.searchterm + "";
                                    x.click(function() {
                                        searchTenorNoTimeout = true;
                                        jQuery('#searchTenorField').val(searchTerm).change();
                                    });
                                    jQuery('#tenorPreview').append(x);
                                });
                            }
                        });
                    } else {
                        var search_url = "https://tenor.googleapis.com/v2/search?q=" + search_term + "&key=" + apikey + "&client_key=" + clientkey + "&limit=" + lmt + "&locale=fr_FR";
                        jQuery.ajax({
                            url: search_url,
                            dataType: "jsonp",
                            success: function(data) {
                                jQuery('#tenorPreview').html('');
                                jQuery.each(data.results, function(k, row) {
                                    var x = jQuery('<div style="width: calc( 100% / 3 - 10px ); text-align: center; cursor: pointer;"><div style="border: 5px solid white; background: url(' + row.media_formats.nanogif.url + '); background-position: center center; background-size: cover; height: 100px; width: 100px; border-radius: 200%; display: inline-block;"></div>');
                                    x.click(function() {
                                        closeAlertPremium();
                                        w.onSelect(row);
                                    });
                                    jQuery('#tenorPreview').append(x);
                                });
                            }
                        });
                    }
                }, (nodelay === true) || (searchTenorNoTimeout === true) ? 1 : 1000);
                searchTenorNoTimeout = false;
            }
            jQuery('#tenorForm #searchTenorField').on('change', searchTenor).on('blur', searchTenor).on('keyup', searchTenor).on('keydown', searchTenor);
            searchTenor(true);
        }
        ;
        btns += `<br><br><div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();">Fermer</div>`;
        logo = 'fa-gif';
        logoStyle = 'transform: rotate(-10deg);';
    } else if (w.error == 'pixabay_picker') {
        title = '';
        texte = `Cherchez une image d'entête sur PixaBay et ajoutez là en un clic à votre profile !`;
        btns = `
  <form method="post" id="pixabayForm" action="" style="width: 100%">
  <center style="width: 100%">
   <input type="text" id="searchPixabayField" style="background-color: white; color: black; width: 100%; padding: 7px; border: 1px solid #333; font-size: 1.2em; font-weight: 400; border-radius: 4px;" placeholder="Exemple : plage"><br><br>
   <div id="pixabayPreview" style="display: flex;gap: 5px;flex-wrap: wrap;flex-direction: row;justify-content: space-between;align-items: center;overflow: auto;max-height: 300px; min-width: 100%;"></div>
  </center>
  </form>
  `;
        fctAfterShown = function(w) {
            var lastShownPixabayQuery = false;
            var searchPixabayTimeout;
            var searchPixabay = function(nodelay) {
                clearTimeout(searchPixabayTimeout);
                searchPixabayTimeout = setTimeout(function() {
                    var search_term = encodeURIComponent(jQuery('#searchPixabayField').val());
                    if (search_term) {
                        var q = search_term;
                        if (lastShownPixabayQuery === q)
                            return;
                        jQuery('#pixabayPreview').html('<div style="font-size: 3em; padding: 1em; text-align: center; width: 100%;"><i class="fa-solid fa-loader fa-spin"></i></div>');
                        jQuery.getJSON('/nolog.pixabay.php?q=' + encodeURIComponent(q) + '&t=all&rci=' + encodeURIComponent(USERPERMS.rci), function(json) {
                            jQuery('#pixabayPreview').html('');
                            jQuery.each(json, function(k, v) {
                                var d = jQuery('<div style="cursor: pointer; width: calc( ( 100% - 2em ) / 3 );"><img src="' + v.previewUrl + '" style="width: 100%;"></div>');
                                d.click(function() {
                                    closeAlertPremium();
                                    if (USERPERMS.profile_plus)
                                        jQuery.get('/nolog.pixabay.php?loadimage=' + encodeURIComponent(v.largeImageURL) + '&key=' + encodeURIComponent(v.key) + '&rci=' + encodeURIComponent(USERPERMS.rci), w.onSelect);
                                    else
                                        w.onSelect(v.largeImageURL);
                                });
                                jQuery('#pixabayPreview').append(d);
                            });
                            lastShownPixabayQuery = q;
                        });
                    }
                }, 1000);
            }
            jQuery('#pixabayForm #searchPixabayField').on('change', searchPixabay).on('blur', searchPixabay).on('keyup', searchPixabay).on('keydown', searchPixabay);
        }
        ;
        btns += `<br><br><div class="blocpremiumBtnSoft2" onclick="closeAlertPremium();">Fermer</div>`;
        logo = 'fa-hexagon-image';
        logoStyle = 'transform: rotate(-10deg);';
        setTimeout(function() {
            jQuery('#searchPixabayField').focus();
        }, 200);
    } else if (w.error == 'statut_picker') {
        title = '';
        texte = `
  <div class="statutPickerToggle" style="width: 350px; max-width: 100%">
  Choisissez votre statut personnalisé !<br><br>
  <form class="ucp_edit" id="statutPickerForm" onsubmit="jQuery('#statutPickerBtnSave').click(); return false;">
  
  <fieldset class="equalWidth">
  
   <dl>
    <dt><label>Quoi de neuf ?</label></dt>
    <dd style="position: relative;">
     <div id="lottiePreview" style="cursor: pointer; display: block; position: absolute; left: 0; top: 0; bottom: 0; aspect-ratio: 1; cursor: pionter;" onclick="jQuery('.statutPickerToggle').toggle(); jQuery('#lottiesPreview').scroll();"><lottie-player src="https://img.xooimage.com/files_lottie/status-add.json" background="transparent" speed="1" style="width: 80%; margin-top: 10%; margin-left: 10%;" direction="1" mode="normal" loop="" autoplay=""></lottie-player></div>
     <input type="text" name="status" id="website" maxlength="20" style="padding-left: 2.3em;" placeholder="Votre inspiration...">
    </dd>
   </dl>

   <dl>
    <dt><label>Supprimer ultérieurement</label></dt>
    <dd>
     <select style="width: 100%" name="expire">
     <option value="midnight">Aujourd'hui</option>
     <option value="4h">4 heures</option>
     <option value="1h">1 heure</option>
     <option value="30m">30 minutes</option>
     <option value="never">Ne pas supprimer</option>
     </select>
    </dd>
   </dl>
  
  </fieldset>
  
  
  </form>
  </div>
  <div class="statutPickerToggle" style="display: none; position: relative;">
   <div id="lottiesOnglets" style="display: flex;"></div>
   <div id="lottiesPreview" style="background-color: white; color: black; border: 1px solid silver; gap: 5px; display: flex;flex-wrap: wrap;align-items: center; max-height: 250px; overflow: auto; justify-content: space-around;"></div>
  </div>
  `;
        btns = `<br><div id="statutPickerBtnSave" class="blocpremiumBtn statutPickerToggle" onclick="">Enregistrer mon statut</div>`;
        btns += `<div class="blocpremiumBtnSoft2 statutPickerToggle" onclick="closeAlertPremium();">Annuler</div>`;
        btns += `<div class="blocpremiumBtnSoft2 statutPickerToggle" style="display: none" onclick="jQuery('.statutPickerToggle').toggle();">Retour</div>`;
        fctAfterShown = function(w) {
            jQuery('input[name=status]').focus();
            if (w.opts && (typeof w.opts.status == 'string') && w.opts.status.length) {
                jQuery('input[name=status]').val(w.opts.status);
                if (w.opts && (typeof w.opts.picto == 'string') && w.opts.picto.length) {
                    var url = w.opts.picto;
                    var isLottie = url.substr(-5) == '.json';
                    var content = (isLottie ? '<lottie-player src="' + url + '" background="transparent" speed="1" style="width: 100%;" direction="1" mode="normal" loop autoplay></lottie-player>' : '<div style="display: block; width: 100%; height: 100%; display: flex; align-items: center;align-content: center;justify-content: center;"><img src="' + url + '" style="width: 80%" /></div>') + '<input type="hidden" name="picto" value="' + url + '">';
                    jQuery('#lottiePreview').html(content);
                }
            }
            var lotties_url = "https://img.xooimage.com/getlotties.php?profile_plus=" + USERPERMS.profile_plus;
            jQuery.ajax({
                url: lotties_url,
                dataType: "jsonp",
                success: function(data) {
                    jQuery.each(data.l, function(kgroup, group) {
                        var x = jQuery('<div style="border: 1px solid silver; border-top-left-radius: 5px; border-top-right-radius: 5px; border-bottom: 0; padding: 4px 10px; background-color: white; cursor: pointer;">' + group.n + '</div>');
                        jQuery('#lottiesOnglets').append(x);
                        x.click(function() {
                            jQuery('#lottiesPreview').html('');
                            var titlesSet = {};
                            jQuery.each(group.l, function(k, lottie) {
                                var url = data.prefix + kgroup + '/' + lottie.f;
                                var isLottie = lottie.f.substr(-5) == '.json';
                                var title = '';
                                if (isLottie && !titlesSet.lotties) {
                                    title = 'Statuts <span class="premium">Membre <b>Premium</b></span>';
                                    titlesSet.lotties = true;
                                } else if (!isLottie && !titlesSet.fixed) {
                                    title = 'Statuts Gratuits';
                                    titlesSet.fixed = true;
                                }
                                if (title)
                                    jQuery('#lottiesPreview').append('<div style="width: 100%; text-align: left; padding: 5px; background-color: rgba(0, 0, 0, 0.1);">' + title + '</div>');
                                var content = (isLottie ? '<lottie-player src="' + url + '" background="transparent" speed="1" style="width: 100%;" direction="1" mode="normal" loop autoplay></lottie-player>' : '<div style="display: block; width: 100%; height: 100%; display: flex; align-items: center;align-content: center;justify-content: center;"><img src="' + url + '" style="width: 80%" /></div>') + '<input type="hidden" name="picto" value="' + url + '">';
                                var x = jQuery('<div style="width: 50px; height: 50px; text-align: center; cursor: pointer;">' + content + '</div>');
                                x.click(function() {
                                    jQuery('#lottiePreview').html(content);
                                    jQuery('.statutPickerToggle').toggle();
                                });
                                jQuery('#lottiesPreview').append(x);
                            });
                            var onRenderSet = false;
                            jQuery('#lottiesPreview lottie-player').on('rendered', function() {
                                this.stop();
                                if (onRenderSet)
                                    return false;
                                onRenderSet = true;
                                onRenderTimeout = setTimeout(function() {
                                    jQuery('#lottiesPreview').scroll();
                                }, 500);
                            });
                            jQuery('#lottiesPreview').scroll();
                        });
                    });
                    var checkLottiesPlayer = function() {
                        var yMin = jQuery(this).position().top;
                        var yMax = yMin + jQuery(this).height();
                        jQuery('#lottiesPreview > div').each(function() {
                            var top = jQuery(this).position().top;
                            var height = jQuery(this).height();
                            if ((top + height) > yMin && (top) < yMax) {
                                jQuery(this).find('lottie-player').each(function() {
                                    this.play();
                                });
                            } else {
                                jQuery(this).find('lottie-player').each(function() {
                                    this.stop();
                                });
                            }
                        });
                    }
                    jQuery('#lottiesPreview').scroll(checkLottiesPlayer);
                    jQuery('#lottiesOnglets div:eq(0)').click();
                }
            });
            jQuery('#statutPickerBtnSave').click(function() {
                var unindexed_array = jQuery('#statutPickerForm').serializeArray();
                var indexed_array = {};
                jQuery.map(unindexed_array, function(n, i) {
                    indexed_array[n['name']] = n['value'];
                });
                closeAlertPremium();
                w.onSubmit(indexed_array);
            });
        }
        ;
        logo = 'fa-alarm-clock';
        logoStyle = 'transform: rotate(-10deg);';
    }
    jQuery('#alertPremium').stop().remove();
    var toAppend = jQuery('<div id="alertPremium" style="' + (logo ? 'padding-top: 100px;' : '') + '">' + `
 
 <div class="bloc blocpremium ` + (w.globalClass ? w.globalClass : '') + ` nohover"  style="max-width: 450px; ` + mainBlocCss + ` margin: auto">
 <div class="blocwrapper">
 ` + (logo ? `
 <div class="blocPremiumLogo">
 <i class="fa-solid ` + logo + `" style="` + logoStyle + `"></i>
 </div>
 ` : '') + `
 ` + (title ? `<div style="text-align: center; font-weight: bold; font-size: 2em; line-height: 1.2em;">` + title + `</div>` : ``) + (w.notextstyle ? texte : `<div style="text-align: center; margin: 1em 0; font-weight: 700;">` + texte + `</div>`) + `
 ` + btns + `
 </div>
 ` + '</div>');
    if (w.error == 'captcha_post') {
        toAppend.find("[name=captchaPostData]").val(w.captchaPostData);
    }
    jQuery('#mainheader').prepend(toAppend);
    fctAfterShown(w);
}
function preview_mps_load() {
    launchAutoRefresh({
        'withmps': 1
    });
}
function preview_notifications_load() {
    launchAutoRefresh({
        'withnotifications': 1
    });
}
function mark_all_notifications_as_read() {
    launchAutoRefresh({
        'mark_all_notifications_as_read': 1
    });
}
function _createProfileSubmitForm(opts) {
    var form = jQuery(`<form id="ucp_main_banner" class="kajaxable" kajaxoptions="{&quot;noScrollTop&quot;:&quot;1&quot;}" method="post" action="` + opts.action + `"` + opts.enctype + `">
  ` + opts.hidden_fields + `
  <input type="hidden" name="update_main_banner" value="1">
  <input type="hidden" id="main_color" name="main_color" value="">
  <input type="hidden" id="background_color" name="background_color" value="">
  <input type="hidden" id="main_banner_base64" name="main_banner_base64" value="">
  <input type="hidden" id="avatar_base64" name="avatar_base64" value="">
  <input type="hidden" id="avatar_tenor" name="avatar_tenor" value="">
  <input type="hidden" id="avatar_mime" name="avatar_mime" value="">
  <input type="hidden" id="status" name="status" value="">
  <input type="hidden" id="back_to_url" name="back_to_url" value="">
 </form>`);
    jQuery(document.body).append(form);
    if (opts.back_to_url) {
        jQuery('#back_to_url').val(url);
    }
    afterLoadContent();
}
function openSatusPicker(opts) {
    alertPremium({
        'error': 'statut_picker',
        'globalClass': 'alert_generic',
        'opts': opts,
        'onSubmit': function(row) {
            var needRemove = false;
            if (!jQuery('#ucp_main_banner').length) {
                needRemove = true;
                _createProfileSubmitForm(opts);
            }
            var form = jQuery('#ucp_main_banner');
            form.find('#status').val(JSON.stringify(row));
            form.submit();
            popupUser.resetUsersCache();
            if (needRemove)
                form.remove();
        }
    });
}
function openBackgroundPicker(opts) {
    var btns = false;
    if (opts.template_body_bg_color) {
        btns = `<div class="blocpremiumBtnSoft2"  onclick="closeAlertPremium(); jQuery('#background_color').val('remove'); jQuery('#ucp_main_banner').submit();">Restaurer la couleur d'origine</div>`;
    }
    alertPremium({
        'error': 'generic',
        'globalClass': 'alert_generic',
        'title': 'Couleur de fond du forum',
        'texte': `Personnalisez la couleur de fond du forum pour votre profil ci-dessous<br><br>
  <div id="forCssHereColorPicker"><div><input id="hereColorPicker" style="display: none;"></div></div>`,
        'logo': 'fa-droplet',
        'btns': btns
    });
    jQuery('#hereColorPicker').on('change', function() {}).colorPicker({
        preview: true,
        permanent: true,
        setValue: function(col, txt, $this) {
            closeAlertPremium();
            jQuery('#background_color').val(col);
            jQuery('#ucp_main_banner').submit();
        }
    });
}
function testRecaptcha(fct) {
    grecaptcha.ready(function() {
        grecaptcha.execute('6LcQfOAZAAAAAAcvy9mGl-RTfTVdaZNzZ-4NitcE', {
            action: 'mainaccess'
        }).then(function(token) {
            jQuery.post('/nolog.recaptcha.php', {
                'token': token
            }, function(res) {
                console.log(res);
            })
        });
    });
}
var selectImageBodyAdded = false;
function selectWithImageMe(container, input, options) {
    jQuery('.selectWithImageMe').remove();
    var div = jQuery('<div class="selectWithImageMe" style="z-index: 99999; position: absolute; background-color: white; box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3); border-radius: 4px; color: var(--var-tr-color-contrast); top: 0; left: 0; min-width: 300px; max-width: 400px; max-height: 300px; overflow: auto;"><div class="selectWithImageMeContent" style="background-color: rgba(var(--var-tr-color-rgb), 0.8); padding: 5px; font-weight: 600;"></div></div>');
    jQuery.each(options, function(k, row) {
        var option = jQuery('<div class="selectWithImageMe_one selectable" style=""></div>');
        if (row.img) {
            var img = jQuery('<div><img src="' + row.img + '" style="max-height:30px; max-width: 100px; height:auto; width:auto; vertical-align: middle"></div>');
            option.append(img);
        }
        var alt = jQuery('<div/>');
        alt.html(row.alt);
        option.append(alt);
        option.click(function(event) {
            jQuery('[id="' + container + '"]').html(this.outerHTML);
            jQuery('[id="' + container + '"]').find('.selectable').removeClass('selectable');
            jQuery('input[name="' + input + '"]').val(row.raw);
            jQuery('.selectWithImageMe').remove();
            event.stopPropagation()
        });
        div.find('.selectWithImageMeContent').append(option);
    });
    jQuery('[id="' + container + '"]').append(div);
    if (!selectImageBodyAdded) {
        jQuery(document.body).click(function() {
            jQuery('.selectWithImageMe').remove();
        });
        selectImageBodyAdded = true;
    }
}
function showOverPremium(o, username) {
    var d = document.getElementById('showOverPremium');
    if (d) {
        if (o === false) {
            jQuery(d).fadeOut(200, function() {
                jQuery(d).remove();
            });
            return;
        } else {
            d.parentNode.removeChild(d);
        }
    } else {
        if (o === false)
            return;
    }
    var div = jQuery(`<div id="showOverPremium" style="border-radius: 200px; pointer-events: none; box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.4); border-width: 3px; padding: 10px; position: absolute; z-index: 999999002; bottom: -100px; left: -135px; width: 300px; font-size: 12px; text-align: center; line-height: 1.5em;" class="bloc blocpremium">` + (username ? 'Comme <b>' + username + '</b>, b&eacute;n&eacute;ficiez des<br>avantages des <span class="premium">Membre <b>Premium</b></span>&nbsp;!' : 'D&eacute;couvrez tous les avantages des <span class="premium">Membre <b>Premium</b></span>&nbsp;!') + `</div>`);
    div.hide();
    jQuery(o).append(div);
    div.fadeIn(400);
}
;window.addEventListener("message", (event) => {
    XOOITSSO.listenEvents(event);
}
);
var XOOITSSO = {};
XOOITSSO.listenEvents = function(event) {
    if (event.data && (typeof event.data == 'object') && event.data.forsso) {
        var row = event.data;
        if (row.a == 'gtag') {
            gtag('event', row.gtag, {
                'event_label': window.location.host
            });
        } else if (row.a == 'resize') {
            jQuery('#frameForSso').animate({
                'height': row.height + 'px'
            });
        } else if (row.a == 'link') {
            if (row.success)
                document.location.href = '/profile.php?mode=editprofile&tab=sso&ssoadded=1';
            else if (row.otherLinked) {
                XOOITSSO.showOtherLinkedError();
            }
        } else if (row.a == 'connect') {
            if (row.success) {
                document.location.href = '/login.php?ssoautologin=' + row.autolog + '&autologin=' + (jQuery('input[name=autologin]:checked').length) + (jQuery('input[name=redirect]').length ? '&redirect=' + jQuery('input[name=redirect]').val() : '') + (jQuery('input[name=admin]').length ? '&admin=' + jQuery('input[name=admin]').val() : '');
            } else {
                XOOITSSO.connectError();
            }
        } else if (row.a == 'register') {
            if (row.otherLinked) {
                XOOITSSO.registerError();
            } else if (row.success) {
                document.location.href = '/profile.php?mode=register&agreed=true';
            }
        }
    }
}
XOOITSSO.connectError = function() {
    alertPremium({
        'error': 'generic',
        'title': 'Connexion impossible',
        'texte': '<div style="font-weight: normal;">' + "Nous n'avons pas trouvé de membre associé à ce service de connexion. <b>Avez-vous déjà un compte et souhaitez-vous le relier à ce service ?</b>" + '</div>',
        'logo': 'fa-circle-exclamation',
        'logoStyle': 'transform: rotate(3deg);',
        'noDefaultBtn': 1,
        'btns': `
  <div class="blocpremiumBtn" id="popupGiftConnectBtn" onclick="document.location.href = '/login.php?golinksso=1';">Oui je souhaite relier un compte existant</div>
  <div class="blocpremiumBtn" id="popupGiftConnectBtn" onclick="document.location.href = '/profile.php?mode=register';">Non, je veux créer un compte !</div>
  <div class="blocpremiumBtnSoft2" onclick="if (popupGift.stripe_checkout) popupGift.stripe_checkout.destroy(); closeAlertPremium();">Annuler</div>
  `
    });
}
XOOITSSO.showOtherLinkedError = function() {
    alertPremium({
        'error': 'generic',
        'title': 'Connexion impossible',
        'texte': '<div style="font-weight: normal;">' + "L'utilisateur sur le service de connexion que vous avez souhaité relié est déjà associé à un autre membre de ce forum. Vous pouvez supprimer sa liaison en vous déconnectant puis en vous connectant avec les informations que vous venez de saisir." + '</div>',
        'logo': 'fa-circle-exclamation',
        'logoStyle': 'transform: rotate(3deg);',
    });
}
XOOITSSO.registerError = function() {
    alertPremium({
        'error': 'generic',
        'title': 'Enregistrement impossible',
        'texte': '<div style="font-weight: normal;">' + "L'utilisateur sur le service de connexion que vous avez souhaité relié est déjà associé à un autre membre de ce forum. Vous pouvez vous connecter avec en cliquant sur \"Connexion\"." + '</div>',
        'logo': 'fa-circle-exclamation',
        'logoStyle': 'transform: rotate(3deg);',
    });
}
XOOITSSO.showAdded = function() {
    alertPremium({
        'error': 'generic',
        'title': 'Connexion réussie !',
        'texte': '<div style="font-weight: normal;">' + "Le service a bien été associé à votre compte. Vous pourrez désormais vous connecter facilement avec celui-ci." + '</div>',
        'logo': 'fa-check',
        'logoStyle': 'transform: rotate(3deg);',
    });
}
XOOITSSO.showRemoved = function() {
    alertPremium({
        'error': 'generic',
        'title': 'Connexion supprimée !',
        'texte': '<div style="font-weight: normal;">' + "Le service a bien été supprimé de votre compte. Vous ne pourrez plus l'utiliser pour vous connecter." + '</div>',
        'logo': 'fa-trash',
        'logoStyle': 'transform: rotate(3deg);',
    });
}
